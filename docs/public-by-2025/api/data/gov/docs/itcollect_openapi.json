{
  "openapi": "3.0.3",
  "info": {
      "title": "ITCollect Public By 2025 Api",
    "version": "0.1-beta",
      "description": "<div>The IT Dashboard team aims to build a modern API that acts as the center-piece of a modular IT data reporting ecosystem. This OpenAPI spec shows the initial direction of ITCollect Public data architecture for budget year 2024, and it is aimed at providing real-time updates to the IT Collect Public By 2024 API. It will serve as living documentation of the latest changes.</div></br><div>In order to access ITCollect Public Api, Please fill out the below form to obtain an authorization key</div></br><div id='apidatagov_signup'>Loading signup form...</div>",
      "x-logo": {
      "url": "images/logo-gsa.svg",
      "backgroundColor": "#FFFFFF",
      "altText": "U.S General Services Administration"
    }
  },
    "servers": [
        {
            "url": "/",
            "description": ""
        }
    ],
    "paths": {
        "/v1/bureaus": {
            "get": {
                "operationId": "getBureausCollection",
                "tags": [
                    "Bureaus"
                ],
                "responses": {
                    "200": {
                        "description": "Bureaus collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Bureaus-read"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Bureaus-read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Bureaus resources.",
                "description": "Retrieves the collection of Bureaus resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/bureaus/{id}": {
            "get": {
                "operationId": "getBureausItem",
                "tags": [
                    "Bureaus"
                ],
                "responses": {
                    "200": {
                        "description": "Bureaus resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bureaus"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bureaus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Bureaus resource.",
                "description": "Retrieves a Bureaus resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/cio-authority": {
            "get": {
                "operationId": "getCioAuthorityCollection",
                "tags": [
                    "CioAuthority"
                ],
                "responses": {
                    "200": {
                        "description": "CioAuthority collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CioAuthority-read"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CioAuthority-read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of CioAuthority resources.",
                "description": "Retrieves the collection of CioAuthority resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "budgetCode",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "budgetCode[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "fiscalYear",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "fiscalYear[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/cio-authority/{agencyId}": {
            "get": {
                "operationId": "getCioAuthorityItem",
                "tags": [
                    "CioAuthority"
                ],
                "responses": {
                    "200": {
                        "description": "CioAuthority resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CioAuthority-readItem"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CioAuthority-readItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a CioAuthority resource.",
                "description": "Retrieves a CioAuthority resource.",
                "parameters": [
                    {
                        "name": "agencyId",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/feeds/actual": {
            "get": {
                "operationId": "getMetricActualFeedCollection",
                "tags": [
                    "MetricActualFeed"
                ],
                "responses": {
                    "200": {
                        "description": "MetricActualFeed collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricActualFeed-metricActualFeed_read"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricActualFeed-metricActualFeed_read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MetricActualFeed resources.",
                "description": "Retrieves the collection of MetricActualFeed resources.",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "005",
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "metTarget",
                        "in": "query",
                        "description": "Wether or not the actual has MET, NOT MET or is N/A relative to the target",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MET",
                                "NOT MET",
                                "N/A"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "serviceId",
                        "in": "query",
                        "description": "The Service document agencyId",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "metricId",
                        "in": "query",
                        "description": "The Metric document agencyId",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "lastModifiedPrior",
                        "in": "query",
                        "description": "Enter Date to Compare lastModifiedPrior",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "lastModifiedSince",
                        "in": "query",
                        "description": "Enter Date to Compare lastModifiedSince",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "datePrior",
                        "in": "query",
                        "description": "Enter Date to Compare datePrior",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "dateSince",
                        "in": "query",
                        "description": "Enter Date to Compare dateSince",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "serviceId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "metricId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "metTarget[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[date]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[created]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/feeds/budget-authority-feed": {
            "get": {
                "operationId": "getBudgetAuthorityFeedCollection",
                "tags": [
                    "BudgetAuthorityFeed"
                ],
                "responses": {
                    "200": {
                        "description": "BudgetAuthorityFeed collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BudgetAuthorityFeed-budgetAuthorityFeed_read"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BudgetAuthorityFeed-budgetAuthorityFeed_read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of BudgetAuthorityFeed resources.",
                "description": "Retrieves the collection of BudgetAuthorityFeed resources.",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "fundingSource",
                        "in": "query",
                        "description": "Budget Authority Funding Source",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "lastModifiedPrior",
                        "in": "query",
                        "description": "Enter Date to Compare lastModifiedPrior",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "lastModifiedSince",
                        "in": "query",
                        "description": "Enter Date to Compare lastModifiedSince",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[year]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/feeds/cio-ratings": {
            "get": {
                "operationId": "getCioRatingsFeedCollection",
                "tags": [
                    "CioRatingsFeed"
                ],
                "responses": {
                    "200": {
                        "description": "CioRatingsFeed collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CioRatingsFeed-read_cioRatingFeed"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CioRatingsFeed-read_cioRatingFeed"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of CioRatingsFeed resources.",
                "description": "Retrieves the collection of CioRatingsFeed resources.",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "recentFilter",
                        "in": "query",
                        "description": "CioRating Recent Filter",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "bool",
                            "enum": [
                                "true",
                                "false"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/feeds/contracts": {
            "get": {
                "operationId": "getContractsFeedCollection",
                "tags": [
                    "ContractsFeed"
                ],
                "responses": {
                    "200": {
                        "description": "ContractsFeed collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContractsFeed-contractFeed_read"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContractsFeed-contractFeed_read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ContractsFeed resources.",
                "description": "Retrieves the collection of ContractsFeed resources.",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "PIID",
                        "in": "query",
                        "description": "PIID of a contract",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "PIID[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "agency[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/feeds/cost-pool": {
            "get": {
                "operationId": "getCostPoolFeedCollection",
                "tags": [
                    "CostPoolFeed"
                ],
                "responses": {
                    "200": {
                        "description": "CostPoolFeed collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CostPoolFeed-costPoolFeed_read"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CostPoolFeed-costPoolFeed_read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of CostPoolFeed resources.",
                "description": "Retrieves the collection of CostPoolFeed resources.",
                "parameters": [
                    {
                        "name": "costPool",
                        "in": "query",
                        "description": "costPool of ledger item",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Internal Labor",
                                "External Labor",
                                "Outside Services",
                                "Hardware",
                                "Software",
                                "Facilities & Power",
                                "Telecom",
                                "Other",
                                "Internal Services"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "isRetired",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/feeds/funding-source": {
            "get": {
                "operationId": "getFundingSourceFeedCollection",
                "tags": [
                    "FundingSourceFeed"
                ],
                "responses": {
                    "200": {
                        "description": "FundingSourceFeed collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FundingSourceFeed-fundingSourceFeed_read"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FundingSourceFeed-fundingSourceFeed_read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of FundingSourceFeed resources.",
                "description": "Retrieves the collection of FundingSourceFeed resources.",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "fundingSource",
                        "in": "query",
                        "description": "Budget Authority Funding Source",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "isRetired",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/feeds/it-tower": {
            "get": {
                "operationId": "getItTowerFeedCollection",
                "tags": [
                    "ItTowerFeed"
                ],
                "responses": {
                    "200": {
                        "description": "ItTowerFeed collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ItTowerFeed-itTowerFeed_read"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ItTowerFeed-itTowerFeed_read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ItTowerFeed resources.",
                "description": "Retrieves the collection of ItTowerFeed resources.",
                "parameters": [
                    {
                        "name": "ITTower",
                        "in": "query",
                        "description": "ITTower of ledger item",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "End User",
                                "Application",
                                "Delivery",
                                "Security & Compliance",
                                "IT Management",
                                "Data Center",
                                "Network",
                                "Compute",
                                "Storage",
                                "Platform",
                                "Output"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "isRetired",
                        "in": "query",
                        "description": "Is retired record?",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "bool",
                            "enum": [
                                "true",
                                "false"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/feeds/ledger-history-feeds": {
            "get": {
                "operationId": "getLedgerHistoryFeedCollection",
                "tags": [
                    "LedgerHistoryFeed"
                ],
                "responses": {
                    "200": {
                        "description": "LedgerHistoryFeed collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LedgerHistoryFeed-ledgerHistoryFeed_read"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LedgerHistoryFeed-ledgerHistoryFeed_read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of LedgerHistoryFeed resources.",
                "description": "Retrieves the collection of LedgerHistoryFeed resources.",
                "parameters": [
                    {
                        "name": "timePeriodId",
                        "in": "query",
                        "description": "TimePeriod ID",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "timePeriodId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/feeds/metric": {
            "get": {
                "operationId": "getMetricFeedCollection",
                "tags": [
                    "MetricFeed"
                ],
                "responses": {
                    "200": {
                        "description": "MetricFeed collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricFeed-metricFeed_readItem"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricFeed-metricFeed_readItem"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MetricFeed resources.",
                "description": "Retrieves the collection of MetricFeed resources.",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "metTarget",
                        "in": "query",
                        "description": "Wether or not the actual has MET, NOT MET or is N/A relative to the target",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MET",
                                "NOT MET",
                                "N/A"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "performanceMeasurementCategory",
                        "in": "query",
                        "description": "Identify the measurement category of this metric",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Customer Satisfaction",
                                "Strategic and Business Results",
                                "Financial Performance",
                                "Innovation"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "serviceId",
                        "in": "query",
                        "description": "The Service agencyId associated with the Metric Doc",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "The metric agencyId.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "lastModifiedPrior",
                        "in": "query",
                        "description": "Enter Date to Compare lastModifiedPrior",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "lastModifiedSince",
                        "in": "query",
                        "description": "Enter Date to Compare lastModifiedSince",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "serviceId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "performanceMeasurementCategory[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "metTarget[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[created]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/feeds/operational-analysis": {
            "get": {
                "operationId": "getOperationalAnalysisFeedCollection",
                "tags": [
                    "OperationalAnalysisFeed"
                ],
                "responses": {
                    "200": {
                        "description": "OperationalAnalysisFeed collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperationalAnalysisFeed-operAnalysisFeed_read"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperationalAnalysisFeed-operAnalysisFeed_read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of OperationalAnalysisFeed resources.",
                "description": "Retrieves the collection of OperationalAnalysisFeed resources.",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Order by Year",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "name": "year",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "recentFilter",
                        "in": "query",
                        "description": "OperationalAnalysis Recent Filter",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "bool",
                            "enum": [
                                "true",
                                "false"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/feeds/projects": {
            "get": {
                "operationId": "getProjectsFeedCollection",
                "tags": [
                    "ProjectsFeed"
                ],
                "responses": {
                    "200": {
                        "description": "ProjectsFeed collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectsFeed-projectsFeed_readItem"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectsFeed-projectsFeed_readItem"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ProjectsFeed resources.",
                "description": "Retrieves the collection of ProjectsFeed resources.",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "isMasked",
                        "in": "query",
                        "description": "Shows data that is masked, data that is not masked or all data.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                true,
                                false
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "lastModifiedPrior",
                        "in": "query",
                        "description": "Enter Date to Compare lastModifiedPrior",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "lastModifiedSince",
                        "in": "query",
                        "description": "Enter Date to Compare lastModifiedSince",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/feeds/reports/supplemental-services-feed": {
            "get": {
                "operationId": "getSupplementalServicesFeedCollection",
                "tags": [
                    "SupplementalServicesFeed"
                ],
                "responses": {
                    "200": {
                        "description": "SupplementalServicesFeed collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SupplementalServicesFeed-supplementalServicesFeed_supService"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SupplementalServicesFeed-supplementalServicesFeed_supService"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SupplementalServicesFeed resources.",
                "description": "Retrieves the collection of SupplementalServicesFeed resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/funding-sources": {
            "get": {
                "operationId": "getFundingSourcesCollection",
                "tags": [
                    "FundingSources"
                ],
                "responses": {
                    "200": {
                        "description": "FundingSources collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FundingSources.jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "example": "../page=1",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:last": {
                                                    "example": "../page=200",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:previous": {
                                                    "example": "../page=0",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:next": {
                                                    "example": "../page=2",
                                                    "type": "string",
                                                    "format": "string"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of FundingSources resources.",
                "description": "Retrieves the collection of FundingSources resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/funding-sources/{id}": {
            "get": {
                "operationId": "getFundingSourcesItem",
                "tags": [
                    "FundingSources"
                ],
                "responses": {
                    "200": {
                        "description": "FundingSources resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FundingSources.jsonld-readItem_readItemSubRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a FundingSources resource.",
                "description": "Retrieves a FundingSources resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/historical-data/cost-pools": {
            "get": {
                "operationId": "getCostPoolHistoryReportCollection",
                "tags": [
                    "CostPoolHistoryReport"
                ],
                "responses": {
                    "200": {
                        "description": "CostPoolHistoryReport collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CostPoolHistoryReport.jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "example": "../page=1",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:last": {
                                                    "example": "../page=200",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:previous": {
                                                    "example": "../page=0",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:next": {
                                                    "example": "../page=2",
                                                    "type": "string",
                                                    "format": "string"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of CostPoolHistoryReport resources.",
                "description": "Retrieves the collection of CostPoolHistoryReport resources.",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "005",
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "costPool",
                        "in": "query",
                        "description": "The cost pools to be include",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Internal Labor",
                                "External Labor",
                                "Outside Services",
                                "Hardware",
                                "Software",
                                "Facilities & Power",
                                "Telecom",
                                "Other",
                                "Internal Services",
                                ""
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year of the ledger histories to be included",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "int"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "currentUII",
                        "in": "query",
                        "description": "Current UII of the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/historical-data/cost-pools/{agencyId}": {
            "get": {
                "operationId": "serviceCostPoolHistoryReportItem",
                "tags": [
                    "CostPoolHistoryReport"
                ],
                "responses": {
                    "200": {
                        "description": "CostPoolHistoryReport resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CostPoolHistoryReport.jsonld-read"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a CostPoolHistoryReport resource.",
                "description": "Retrieves a CostPoolHistoryReport resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/historical-data/funding-sources": {
            "get": {
                "operationId": "getFundingSourceHistoryReportCollection",
                "tags": [
                    "FundingSourceHistoryReport"
                ],
                "responses": {
                    "200": {
                        "description": "FundingSourceHistoryReport collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FundingSourceHistoryReport.jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "example": "../page=1",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:last": {
                                                    "example": "../page=200",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:previous": {
                                                    "example": "../page=0",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:next": {
                                                    "example": "../page=2",
                                                    "type": "string",
                                                    "format": "string"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of FundingSourceHistoryReport resources.",
                "description": "Retrieves the collection of FundingSourceHistoryReport resources.",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "005",
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type field in the ledger document",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "O&M",
                                "DME"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "This value should be 'Internal Funding' or 'Contributions'.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Internal Funding",
                                "Contributions"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year of the ledger histories to be included",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "int"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "fundingSource",
                        "in": "query",
                        "description": "The funding source to be included",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "currentUII",
                        "in": "query",
                        "description": "Current UII of the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/historical-data/funding-sources/{agencyId}": {
            "get": {
                "operationId": "serviceFundingSourceHistoryReportItem",
                "tags": [
                    "FundingSourceHistoryReport"
                ],
                "responses": {
                    "200": {
                        "description": "FundingSourceHistoryReport resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FundingSourceHistoryReport.jsonld-read"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a FundingSourceHistoryReport resource.",
                "description": "Retrieves a FundingSourceHistoryReport resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/historical-data/it-towers": {
            "get": {
                "operationId": "getITTowerHistoryReportCollection",
                "tags": [
                    "ITTowerHistoryReport"
                ],
                "responses": {
                    "200": {
                        "description": "ITTowerHistoryReport collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ITTowerHistoryReport.jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "example": "../page=1",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:last": {
                                                    "example": "../page=200",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:previous": {
                                                    "example": "../page=0",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:next": {
                                                    "example": "../page=2",
                                                    "type": "string",
                                                    "format": "string"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ITTowerHistoryReport resources.",
                "description": "Retrieves the collection of ITTowerHistoryReport resources.",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "005",
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "ITTower",
                        "in": "query",
                        "description": "The IT Tower to be included",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "End User",
                                "Application",
                                "Delivery",
                                "Security & Compliance",
                                "IT Management",
                                "Data Center",
                                "Network",
                                "Compute",
                                "Storage",
                                "Platform",
                                "Output",
                                ""
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year of the ledger histories to be included",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "int"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "currentUII",
                        "in": "query",
                        "description": "Current UII of the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/historical-data/it-towers/{agencyId}": {
            "get": {
                "operationId": "serviceITTowerHistoryReportItem",
                "tags": [
                    "ITTowerHistoryReport"
                ],
                "responses": {
                    "200": {
                        "description": "ITTowerHistoryReport resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ITTowerHistoryReport.jsonld-read"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a ITTowerHistoryReport resource.",
                "description": "Retrieves a ITTowerHistoryReport resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/metric": {
            "get": {
                "operationId": "getMetricCollection",
                "tags": [
                    "Metric"
                ],
                "responses": {
                    "200": {
                        "description": "Metric collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Metric-read"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Metric-read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Metric resources.",
                "description": "Retrieves the collection of Metric resources.",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "serviceAgencyId",
                        "in": "query",
                        "description": "The Service agencyId associated with the Metric Doc",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "serviceAgencyId[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/metric/{agencyId}": {
            "get": {
                "operationId": "getMetricItem",
                "tags": [
                    "Metric"
                ],
                "responses": {
                    "200": {
                        "description": "Metric resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metric-read_readItemSubRes"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metric-read_readItemSubRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Metric resource.",
                "description": "Retrieves a Metric resource.",
                "parameters": [
                    {
                        "name": "agencyId",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/metric/{metric}/metric-actual": {
            "get": {
                "operationId": "getMetricActualCollection",
                "tags": [
                    "MetricActual"
                ],
                "responses": {
                    "200": {
                        "description": "MetricActual collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricActual-read"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetricActual-read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MetricActual resources.",
                "description": "Retrieves the collection of MetricActual resources.",
                "parameters": [
                    {
                        "name": "metric",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": [],
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": [
                {
                    "name": "metric",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "deprecated": false,
                    "allowEmptyValue": false,
                    "schema": [],
                    "style": "simple",
                    "explode": false,
                    "allowReserved": false
                }
            ]
        },
        "/v1/metric/{metric}/metric-actual/{agencyId}": {
            "get": {
                "operationId": "getMetricActualItem",
                "tags": [
                    "MetricActual"
                ],
                "responses": {
                    "200": {
                        "description": "MetricActual resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricActual-readItem_readItemSubRes"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricActual-readItem_readItemSubRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a MetricActual resource.",
                "description": "Retrieves a MetricActual resource.",
                "parameters": [
                    {
                        "name": "metric",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": [],
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": [
                {
                    "name": "metric",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "deprecated": false,
                    "allowEmptyValue": false,
                    "schema": [],
                    "style": "simple",
                    "explode": false,
                    "allowReserved": false
                }
            ]
        },
        "/v1/performance-gov-ids": {
            "get": {
                "operationId": "getPerformanceGovIdCollection",
                "tags": [
                    "PerformanceGovId"
                ],
                "responses": {
                    "200": {
                        "description": "PerformanceGovId collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PerformanceGovId.jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "example": "../page=1",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:last": {
                                                    "example": "../page=200",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:previous": {
                                                    "example": "../page=0",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:next": {
                                                    "example": "../page=2",
                                                    "type": "string",
                                                    "format": "string"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of PerformanceGovId resources.",
                "description": "Retrieves the collection of PerformanceGovId resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/performance-gov-ids/{id}": {
            "get": {
                "operationId": "getPerformanceGovIdItem",
                "tags": [
                    "PerformanceGovId"
                ],
                "responses": {
                    "200": {
                        "description": "PerformanceGovId resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceGovId.jsonld-readItem_readItemSubRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a PerformanceGovId resource.",
                "description": "Retrieves a PerformanceGovId resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/reports/cio-rating-count": {
            "get": {
                "operationId": "getCioRatingCountReportCollection",
                "tags": [
                    "CioRatingCountReport"
                ],
                "responses": {
                    "200": {
                        "description": "CioRatingCountReport collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CioRatingCountReport.jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "example": "../page=1",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:last": {
                                                    "example": "../page=200",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:previous": {
                                                    "example": "../page=0",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:next": {
                                                    "example": "../page=2",
                                                    "type": "string",
                                                    "format": "string"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of CioRatingCountReport resources.",
                "description": "Retrieves the collection of CioRatingCountReport resources.",
                "parameters": [
                    {
                        "name": "agencyCode",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "005",
                                "006",
                                "007",
                                "008",
                                "009",
                                "010",
                                "011",
                                "012",
                                "013",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "022",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "bureauCode",
                        "in": "query",
                        "description": "Two digit bureau code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "investmentType",
                        "in": "query",
                        "description": "The service investment type. Two digit string.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "01",
                                "02",
                                "03",
                                "04",
                                "05"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "currentUII",
                        "in": "query",
                        "description": "Current UII of the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "datePrior",
                        "in": "query",
                        "description": "Enter Date to filter by date",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "dateSince",
                        "in": "query",
                        "description": "Enter Date to filter by date",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/reports/metric-actuals-count": {
            "get": {
                "operationId": "getMetricActualsCountReportCollection",
                "tags": [
                    "MetricActualsCountReport"
                ],
                "responses": {
                    "200": {
                        "description": "MetricActualsCountReport collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MetricActualsCountReport.jsonld-metricActualsCount"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "example": "../page=1",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:last": {
                                                    "example": "../page=200",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:previous": {
                                                    "example": "../page=0",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:next": {
                                                    "example": "../page=2",
                                                    "type": "string",
                                                    "format": "string"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MetricActualsCountReport resources.",
                "description": "Retrieves the collection of MetricActualsCountReport resources.",
                "parameters": [
                    {
                        "name": "agencyCode",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "005",
                                "006",
                                "007",
                                "008",
                                "009",
                                "010",
                                "011",
                                "012",
                                "013",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "022",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "datePrior",
                        "in": "query",
                        "description": "Enter Date to Compare datePrior",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "dateSince",
                        "in": "query",
                        "description": "Enter Date to Compare dateSince",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/reports/variance-scores": {
            "get": {
                "operationId": "getVarianceScoresCountReportCollection",
                "tags": [
                    "VarianceScoresCountReport"
                ],
                "responses": {
                    "200": {
                        "description": "VarianceScoresCountReport collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VarianceScoresCountReport.jsonld-varianceScoresCount"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "example": "../page=1",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:last": {
                                                    "example": "../page=200",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:previous": {
                                                    "example": "../page=0",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:next": {
                                                    "example": "../page=2",
                                                    "type": "string",
                                                    "format": "string"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of VarianceScoresCountReport resources.",
                "description": "Retrieves the collection of VarianceScoresCountReport resources.",
                "parameters": [
                    {
                        "name": "currentUII",
                        "in": "query",
                        "description": "Current UII of the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "projectStatus",
                        "in": "query",
                        "description": "Display variance scores based on project status",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Not Started",
                                "In progress",
                                "Completed",
                                "Deferred",
                                "Canceled"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code of the UII.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "005",
                                "006",
                                "007",
                                "008",
                                "009",
                                "010",
                                "011",
                                "012",
                                "013",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "022",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/services": {
            "get": {
                "operationId": "getServicesCollection",
                "tags": [
                    "Services"
                ],
                "responses": {
                    "200": {
                        "description": "Services collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Services-read_supService"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Services-read_supService"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Services resources.",
                "description": "Retrieves the collection of Services resources.",
                "parameters": [
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "currentUII",
                        "in": "query",
                        "description": "Filter for the currentUII of an existing investment",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "exact"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "isRetired",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "currentUII[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/services/{agencyId}": {
            "get": {
                "operationId": "getServicesItem",
                "tags": [
                    "Services"
                ],
                "responses": {
                    "200": {
                        "description": "Services resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Services-readItem_readItemSubRes_supService"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Services-readItem_readItemSubRes_supService"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Services resource.",
                "description": "Retrieves a Services resource.",
                "parameters": [
                    {
                        "name": "isRetired",
                        "in": "query",
                        "description": "isRetired.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "bool",
                            "enum": [
                                true,
                                false
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/services/{service}/cio-ratings": {
            "get": {
                "operationId": "getCioRatingCollection",
                "tags": [
                    "CioRating"
                ],
                "responses": {
                    "200": {
                        "description": "CioRating collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CioRating-read"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CioRating-read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of CioRating resources.",
                "description": "Retrieves the collection of CioRating resources.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": [],
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": [
                {
                    "name": "service",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "deprecated": false,
                    "allowEmptyValue": false,
                    "schema": [],
                    "style": "simple",
                    "explode": false,
                    "allowReserved": false
                }
            ]
        },
        "/v1/services/{service}/cio-ratings/{agencyId}": {
            "get": {
                "operationId": "getCioRatingItem",
                "tags": [
                    "CioRating"
                ],
                "responses": {
                    "200": {
                        "description": "CioRating resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CioRating-read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CioRating-read"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a CioRating resource.",
                "description": "Retrieves a CioRating resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": [],
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": [
                {
                    "name": "service",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "deprecated": false,
                    "allowEmptyValue": false,
                    "schema": [],
                    "style": "simple",
                    "explode": false,
                    "allowReserved": false
                }
            ]
        },
        "/v1/services/{service}/contracts": {
            "get": {
                "operationId": "getContractCollection",
                "tags": [
                    "Contract"
                ],
                "responses": {
                    "200": {
                        "description": "Contract collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contract-read"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contract-read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Contract resources.",
                "description": "Retrieves the collection of Contract resources.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": [],
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": [
                {
                    "name": "service",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "deprecated": false,
                    "allowEmptyValue": false,
                    "schema": [],
                    "style": "simple",
                    "explode": false,
                    "allowReserved": false
                }
            ]
        },
        "/v1/services/{service}/contracts/{agencyId}": {
            "get": {
                "operationId": "getContractItem",
                "tags": [
                    "Contract"
                ],
                "responses": {
                    "200": {
                        "description": "Contract resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract-read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract-read"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Contract resource.",
                "description": "Retrieves a Contract resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": [],
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": [
                {
                    "name": "service",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "deprecated": false,
                    "allowEmptyValue": false,
                    "schema": [],
                    "style": "simple",
                    "explode": false,
                    "allowReserved": false
                }
            ]
        },
        "/v1/services/{service}/ledgers": {
            "get": {
                "operationId": "getLedgerCollection",
                "tags": [
                    "Ledger"
                ],
                "responses": {
                    "200": {
                        "description": "Ledger collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Ledger-read"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Ledger-read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Ledger resources.",
                "description": "Retrieves the collection of Ledger resources.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": [],
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "ledgerElementStyle",
                        "in": "query",
                        "description": "Ledger element style of a ledger item",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Funding Sources Only",
                                "TBM Only",
                                "All",
                                "Budget Authority"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Search by year",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "isRetired",
                        "in": "query",
                        "description": "Is retired record?",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "bool",
                            "enum": [
                                "true",
                                "false"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "year[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "ledgerElementStyle[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": [
                {
                    "name": "service",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "deprecated": false,
                    "allowEmptyValue": false,
                    "schema": [],
                    "style": "simple",
                    "explode": false,
                    "allowReserved": false
                }
            ]
        },
        "/v1/services/{service}/ledgers/{agencyId}": {
            "get": {
                "operationId": "getLedgerItem",
                "tags": [
                    "Ledger"
                ],
                "responses": {
                    "200": {
                        "description": "Ledger resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ledger-read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ledger-read"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Ledger resource.",
                "description": "Retrieves a Ledger resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": [],
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": [
                {
                    "name": "service",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "deprecated": false,
                    "allowEmptyValue": false,
                    "schema": [],
                    "style": "simple",
                    "explode": false,
                    "allowReserved": false
                }
            ]
        },
        "/v1/services/{service}/operational-analysis": {
            "get": {
                "operationId": "getOperationalAnalysisCollection",
                "tags": [
                    "OperationalAnalysis"
                ],
                "responses": {
                    "200": {
                        "description": "OperationalAnalysis collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperationalAnalysis-read"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperationalAnalysis-read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of OperationalAnalysis resources.",
                "description": "Retrieves the collection of OperationalAnalysis resources.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": [],
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": [
                {
                    "name": "service",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "deprecated": false,
                    "allowEmptyValue": false,
                    "schema": [],
                    "style": "simple",
                    "explode": false,
                    "allowReserved": false
                }
            ]
        },
        "/v1/services/{service}/operational-analysis/{agencyId}": {
            "get": {
                "operationId": "getOperationalAnalysisItem",
                "tags": [
                    "OperationalAnalysis"
                ],
                "responses": {
                    "200": {
                        "description": "OperationalAnalysis resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationalAnalysis-read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationalAnalysis-read"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a OperationalAnalysis resource.",
                "description": "Retrieves a OperationalAnalysis resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": [],
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": [
                {
                    "name": "service",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "deprecated": false,
                    "allowEmptyValue": false,
                    "schema": [],
                    "style": "simple",
                    "explode": false,
                    "allowReserved": false
                }
            ]
        },
        "/v1/services/{service}/projects": {
            "get": {
                "operationId": "getProjectsCollection",
                "tags": [
                    "Projects"
                ],
                "responses": {
                    "200": {
                        "description": "Projects collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Projects-read"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Projects-read"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Projects resources.",
                "description": "Retrieves the collection of Projects resources.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": [],
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sort[lastModified]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": [
                {
                    "name": "service",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "deprecated": false,
                    "allowEmptyValue": false,
                    "schema": [],
                    "style": "simple",
                    "explode": false,
                    "allowReserved": false
                }
            ]
        },
        "/v1/services/{service}/projects/{agencyId}": {
            "get": {
                "operationId": "getProjectsItem",
                "tags": [
                    "Projects"
                ],
                "responses": {
                    "200": {
                        "description": "Projects resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Projects-read_readItem_readItemSubRes"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Projects-read_readItem_readItemSubRes"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Projects resource.",
                "description": "Retrieves a Projects resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": [],
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": [
                {
                    "name": "service",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "deprecated": false,
                    "allowEmptyValue": false,
                    "schema": [],
                    "style": "simple",
                    "explode": false,
                    "allowReserved": false
                }
            ]
        },
        "/v1/timeseries/budget-account": {
            "get": {
                "operationId": "getBudgetAccountLongitudinalReportCollection",
                "tags": [
                    "BudgetAccountLongitudinalReport"
                ],
                "responses": {
                    "200": {
                        "description": "BudgetAccountLongitudinalReport collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BudgetAccountLongitudinalReport.jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "example": "../page=1",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:last": {
                                                    "example": "../page=200",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:previous": {
                                                    "example": "../page=0",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:next": {
                                                    "example": "../page=2",
                                                    "type": "string",
                                                    "format": "string"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of BudgetAccountLongitudinalReport resources.",
                "description": "Retrieves the collection of BudgetAccountLongitudinalReport resources.",
                "parameters": [
                    {
                        "name": "budgetCode",
                        "in": "query",
                        "description": "The budget code(funding source) set inside of the ledger.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code of the UII.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "005",
                                "006",
                                "007",
                                "008",
                                "009",
                                "010",
                                "011",
                                "012",
                                "013",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "022",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "The year of the ledger.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "changeInStatuses",
                        "in": "query",
                        "description": "Denotes change in status of an investment.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/timeseries/cost-pool": {
            "get": {
                "operationId": "getCostPoolLongitudinalReportCollection",
                "tags": [
                    "CostPoolLongitudinalReport"
                ],
                "responses": {
                    "200": {
                        "description": "CostPoolLongitudinalReport collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CostPoolLongitudinalReport.jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "example": "../page=1",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:last": {
                                                    "example": "../page=200",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:previous": {
                                                    "example": "../page=0",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:next": {
                                                    "example": "../page=2",
                                                    "type": "string",
                                                    "format": "string"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of CostPoolLongitudinalReport resources.",
                "description": "Retrieves the collection of CostPoolLongitudinalReport resources.",
                "parameters": [
                    {
                        "name": "investmentType",
                        "in": "query",
                        "description": "The service investment type. Two digit string.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "01",
                                "02",
                                "03",
                                "04",
                                "05"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "reporting-level",
                        "in": "query",
                        "description": "Set the lowest-level reporting aggregation to Agency or Bureau.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Bureau",
                                "Agency"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "currentUII",
                        "in": "query",
                        "description": "Current UII of the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "005",
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "bureauCode",
                        "in": "query",
                        "description": "Two digit bureau code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "Agency ID submitted with the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "missionSupportCategories",
                        "in": "query",
                        "description": "Mission Support Categories",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "01",
                                "02",
                                "03",
                                "04",
                                "05",
                                "06",
                                "07",
                                "08",
                                "09"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "changeInStatuses",
                        "in": "query",
                        "description": "Denotes change in status of an investment.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/timeseries/funding": {
            "get": {
                "operationId": "getLongitudinalReportCollection",
                "tags": [
                    "LongitudinalReport"
                ],
                "responses": {
                    "200": {
                        "description": "LongitudinalReport collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LongitudinalReport.jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "example": "../page=1",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:last": {
                                                    "example": "../page=200",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:previous": {
                                                    "example": "../page=0",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:next": {
                                                    "example": "../page=2",
                                                    "type": "string",
                                                    "format": "string"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of LongitudinalReport resources.",
                "description": "Retrieves the collection of LongitudinalReport resources.",
                "parameters": [
                    {
                        "name": "source",
                        "in": "query",
                        "description": "This value should be 'Internal Funding' or 'Contributions'.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Internal Funding",
                                "Contributions"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "investmentType",
                        "in": "query",
                        "description": "The service investment type. Two digit string.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "01",
                                "02",
                                "03",
                                "04",
                                "05"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "currentUII",
                        "in": "query",
                        "description": "Current UII of the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "005",
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "bureauCode",
                        "in": "query",
                        "description": "Two digit bureau code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "Agency ID submitted with the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "missionSupportCategories",
                        "in": "query",
                        "description": "Mission Support Categories",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "01",
                                "02",
                                "03",
                                "04",
                                "05",
                                "06",
                                "07",
                                "08",
                                "09"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Select ledger type",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "O&M",
                                "DME"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "changeInStatuses",
                        "in": "query",
                        "description": "Denotes change in status of an investment.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/timeseries/investment-type": {
            "get": {
                "operationId": "getInvestmentTypeReportCollection",
                "tags": [
                    "InvestmentTypeReport"
                ],
                "responses": {
                    "200": {
                        "description": "InvestmentTypeReport collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InvestmentTypeReport.jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "example": "../page=1",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:last": {
                                                    "example": "../page=200",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:previous": {
                                                    "example": "../page=0",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:next": {
                                                    "example": "../page=2",
                                                    "type": "string",
                                                    "format": "string"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of InvestmentTypeReport resources.",
                "description": "Retrieves the collection of InvestmentTypeReport resources.",
                "parameters": [
                    {
                        "name": "source",
                        "in": "query",
                        "description": "This value should be 'Internal Funding' or 'Contributions'.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Internal Funding",
                                "Contributions"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "investmentType",
                        "in": "query",
                        "description": "The service investment type. Two digit string.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "01",
                                "02",
                                "03",
                                "04",
                                "05"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "currentUII",
                        "in": "query",
                        "description": "Current UII of the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "Agency ID submitted with the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "fundingSource",
                        "in": "query",
                        "description": "The fundingSource value in the ledger document",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Select ledger type",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "O&M",
                                "DME"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Select ledger year",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "missionSupportCategories",
                        "in": "query",
                        "description": "Mission Support Categories",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "01",
                                "02",
                                "03",
                                "04",
                                "05",
                                "06",
                                "07",
                                "08",
                                "09"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "bureauCode",
                        "in": "query",
                        "description": "Two digit bureau code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "changeInStatuses",
                        "in": "query",
                        "description": "Denotes change in status of an investment.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/timeseries/it-tower": {
            "get": {
                "operationId": "getItTowerLongitudinalReportCollection",
                "tags": [
                    "ItTowerLongitudinalReport"
                ],
                "responses": {
                    "200": {
                        "description": "ItTowerLongitudinalReport collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItTowerLongitudinalReport.jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "example": "../page=1",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:last": {
                                                    "example": "../page=200",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:previous": {
                                                    "example": "../page=0",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:next": {
                                                    "example": "../page=2",
                                                    "type": "string",
                                                    "format": "string"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ItTowerLongitudinalReport resources.",
                "description": "Retrieves the collection of ItTowerLongitudinalReport resources.",
                "parameters": [
                    {
                        "name": "investmentType",
                        "in": "query",
                        "description": "The service investment type. Two digit string.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "01",
                                "02",
                                "03",
                                "04",
                                "05"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "reporting-level",
                        "in": "query",
                        "description": "Set the lowest-level reporting aggregation to Agency or Bureau.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Bureau",
                                "Agency"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "currentUII",
                        "in": "query",
                        "description": "Current UII of the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "005",
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "bureauCode",
                        "in": "query",
                        "description": "Two digit bureau code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "Agency ID submitted with the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "missionSupportCategories",
                        "in": "query",
                        "description": "Mission Support Categories",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "01",
                                "02",
                                "03",
                                "04",
                                "05",
                                "06",
                                "07",
                                "08",
                                "09"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "changeInStatuses",
                        "in": "query",
                        "description": "Denotes change in status of an investment.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/v1/timeseries/uii": {
            "get": {
                "operationId": "getUiiLongitudinalReportCollection",
                "tags": [
                    "UiiLongitudinalReport"
                ],
                "responses": {
                    "200": {
                        "description": "UiiLongitudinalReport collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UiiLongitudinalReport.jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "example": "../page=1",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:last": {
                                                    "example": "../page=200",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:previous": {
                                                    "example": "../page=0",
                                                    "type": "string",
                                                    "format": "string"
                                                },
                                                "hydra:next": {
                                                    "example": "../page=2",
                                                    "type": "string",
                                                    "format": "string"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/ConstraintViolationList"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "ConstraintViolationList"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "Validation Errors Encountered"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Found `2` constraint violations"
                                        },
                                        "violations": {
                                            "type": "array",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 1"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "25c84bec-2466-47ba-83d2-3b7243593897"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "propertyPath": {
                                                            "type": "string",
                                                            "example": "propertyName"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Sample error message 2"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "70bafca1-5975-4171-92cc-e3cdde9b4b7d"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "NotFoundHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Unsupported Media Type",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "UnsupportedMediaTypeHttpException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": {
                                                "Unsupported Media Type": {
                                                    "The provided content-type is not supported, Supported MIME types are": {
                                                        "POST/PUT/DELETE": "application/json, or application/ld+json",
                                                        "PATCH": "application/merge-patch+json",
                                                        "GET": "application/json, application/ld+json, or text/csv"
                                                    }
                                                }
                                            }
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "@context": {
                                            "type": "string",
                                            "example": "/contexts/Error"
                                        },
                                        "@type": {
                                            "type": "string",
                                            "example": "hydra:Error"
                                        },
                                        "hydra:title": {
                                            "type": "string",
                                            "example": "InternalServerErrorException"
                                        },
                                        "hydra:description": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "hydra:request_id": {
                                            "type": "string",
                                            "example": "xzf6bgh6-8ba2-83jn-p5a1-e4ac0f74nf5g"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of UiiLongitudinalReport resources.",
                "description": "Retrieves the collection of UiiLongitudinalReport resources.",
                "parameters": [
                    {
                        "name": "source",
                        "in": "query",
                        "description": "This value should be 'Internal Funding' or 'Contributions'.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Internal Funding",
                                "Contributions"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "currentUII",
                        "in": "query",
                        "description": "Current UII of the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Three digit agency code",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "005",
                                "006",
                                "007",
                                "009",
                                "010",
                                "011",
                                "012",
                                "014",
                                "015",
                                "016",
                                "018",
                                "019",
                                "020",
                                "021",
                                "023",
                                "024",
                                "025",
                                "026",
                                "027",
                                "028",
                                "029",
                                "100",
                                "184",
                                "202",
                                "393",
                                "422",
                                "429"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "agencyId",
                        "in": "query",
                        "description": "Agency ID submitted with the service",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "missionSupportCategories",
                        "in": "query",
                        "description": "Mission Support Categories",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "01",
                                "02",
                                "03",
                                "04",
                                "05",
                                "06",
                                "07",
                                "08",
                                "09"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Select ledger type",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "O&M",
                                "DME"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "changeInStatuses",
                        "in": "query",
                        "description": "Denotes change in status of an investment.",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        }
    },
    "components": {
        "schemas": {
            "BudgetAccountLongitudinalReport.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "BudgetAuthorityFeed-budgetAuthorityFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "serviceId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given\nledger item",
                        "nullable": true
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2022,
                        "description": "A Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.<br/>O&M: Operations & Maintenance Costs refers to the expenses\nrequired to operate and maintain an IT asset that is operating in a production environment.<br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.",
                        "nullable": true
                    },
                    "costPool": {
                        "type": "string",
                        "enum": [
                            "Internal Labor",
                            "External Labor",
                            "Outside Services",
                            "Hardware",
                            "Software",
                            "Facilities & Power",
                            "Telecom",
                            "Other",
                            "Internal Services",
                            ""
                        ],
                        "example": "Outside Services",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "ITTower": {
                        "type": "string",
                        "enum": [
                            "End User",
                            "Application",
                            "Delivery",
                            "Security & Compliance",
                            "IT Management",
                            "Data Center",
                            "Network",
                            "Compute",
                            "Storage",
                            "Platform",
                            "Output",
                            ""
                        ],
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "001-00-9004",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated\nwith a given ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Internal Funding",
                            "Contributions"
                        ],
                        "example": "Internal Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'",
                        "nullable": true
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All",
                            "Budget Authority"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field. Budget Authority requests must include the same set of fields as Funding\nSource request, however, Budget Authority submissions do not count toward the aggregate funding total of an\ninvestment."
                    },
                    "alternateBureau": {
                        "type": "string",
                        "format": "number",
                        "example": "10",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Alternate Bureau (string) - 2 digit code\nEnter the Bureau who controls spending for this ledger entry",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "timePeriodId": {
                        "type": "string"
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    }
                }
            },
            "BudgetAuthorityFeed.jsonld-budgetAuthorityFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "serviceId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given\nledger item",
                        "nullable": true
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2022,
                        "description": "A Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.<br/>O&M: Operations & Maintenance Costs refers to the expenses\nrequired to operate and maintain an IT asset that is operating in a production environment.<br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.",
                        "nullable": true
                    },
                    "costPool": {
                        "type": "string",
                        "enum": [
                            "Internal Labor",
                            "External Labor",
                            "Outside Services",
                            "Hardware",
                            "Software",
                            "Facilities & Power",
                            "Telecom",
                            "Other",
                            "Internal Services",
                            ""
                        ],
                        "example": "Outside Services",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "ITTower": {
                        "type": "string",
                        "enum": [
                            "End User",
                            "Application",
                            "Delivery",
                            "Security & Compliance",
                            "IT Management",
                            "Data Center",
                            "Network",
                            "Compute",
                            "Storage",
                            "Platform",
                            "Output",
                            ""
                        ],
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "001-00-9004",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated\nwith a given ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Internal Funding",
                            "Contributions"
                        ],
                        "example": "Internal Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'",
                        "nullable": true
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All",
                            "Budget Authority"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field. Budget Authority requests must include the same set of fields as Funding\nSource request, however, Budget Authority submissions do not count toward the aggregate funding total of an\ninvestment."
                    },
                    "alternateBureau": {
                        "type": "string",
                        "format": "number",
                        "example": "10",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Alternate Bureau (string) - 2 digit code\nEnter the Bureau who controls spending for this ledger entry",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "timePeriodId": {
                        "type": "string"
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    }
                }
            },
            "Bureaus": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "bureauCode": {
                        "type": "string",
                        "format": "number",
                        "example": "00",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Bureau Code (string) - 2 digit code\nThe two digits indicate the bureau code of the Investment (see Appendix C of OMB Circular No. A-11).\nIf this is a department-level or an Agency-wide  activity, use “00” as your bureau code."
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "005",
                            "006",
                            "007",
                            "009",
                            "010",
                            "011",
                            "012",
                            "014",
                            "015",
                            "016",
                            "018",
                            "019",
                            "020",
                            "021",
                            "023",
                            "024",
                            "025",
                            "026",
                            "027",
                            "028",
                            "029",
                            "100",
                            "184",
                            "202",
                            "393",
                            "422",
                            "429"
                        ],
                        "example": "018",
                        "description": "The three digit agency code."
                    },
                    "bureauName": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Bureau Name"
                    }
                }
            },
            "Bureaus-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "bureauCode": {
                        "type": "string",
                        "format": "number",
                        "example": "00",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Bureau Code (string) - 2 digit code\nThe two digits indicate the bureau code of the Investment (see Appendix C of OMB Circular No. A-11).\nIf this is a department-level or an Agency-wide  activity, use “00” as your bureau code."
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "005",
                            "006",
                            "007",
                            "009",
                            "010",
                            "011",
                            "012",
                            "014",
                            "015",
                            "016",
                            "018",
                            "019",
                            "020",
                            "021",
                            "023",
                            "024",
                            "025",
                            "026",
                            "027",
                            "028",
                            "029",
                            "100",
                            "184",
                            "202",
                            "393",
                            "422",
                            "429"
                        ],
                        "example": "018",
                        "description": "The three digit agency code."
                    },
                    "bureauName": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Bureau Name"
                    }
                }
            },
            "Bureaus.jsonld": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "bureauCode": {
                        "type": "string",
                        "format": "number",
                        "example": "00",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Bureau Code (string) - 2 digit code\nThe two digits indicate the bureau code of the Investment (see Appendix C of OMB Circular No. A-11).\nIf this is a department-level or an Agency-wide  activity, use “00” as your bureau code."
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "005",
                            "006",
                            "007",
                            "009",
                            "010",
                            "011",
                            "012",
                            "014",
                            "015",
                            "016",
                            "018",
                            "019",
                            "020",
                            "021",
                            "023",
                            "024",
                            "025",
                            "026",
                            "027",
                            "028",
                            "029",
                            "100",
                            "184",
                            "202",
                            "393",
                            "422",
                            "429"
                        ],
                        "example": "018",
                        "description": "The three digit agency code."
                    },
                    "bureauName": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Bureau Name"
                    }
                }
            },
            "Bureaus.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "bureauCode": {
                        "type": "string",
                        "format": "number",
                        "example": "00",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Bureau Code (string) - 2 digit code\nThe two digits indicate the bureau code of the Investment (see Appendix C of OMB Circular No. A-11).\nIf this is a department-level or an Agency-wide  activity, use “00” as your bureau code."
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "005",
                            "006",
                            "007",
                            "009",
                            "010",
                            "011",
                            "012",
                            "014",
                            "015",
                            "016",
                            "018",
                            "019",
                            "020",
                            "021",
                            "023",
                            "024",
                            "025",
                            "026",
                            "027",
                            "028",
                            "029",
                            "100",
                            "184",
                            "202",
                            "393",
                            "422",
                            "429"
                        ],
                        "example": "018",
                        "description": "The three digit agency code."
                    },
                    "bureauName": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Bureau Name"
                    }
                }
            },
            "CioAuthority-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "cioAuthority": {
                        "type": "float",
                        "format": "float",
                        "example": 0.35
                    },
                    "budgetCode": {
                        "type": "string",
                        "format": "string",
                        "example": "001-15-4607"
                    },
                    "fiscalYear": {
                        "type": "integer",
                        "format": "year",
                        "example": 2022
                    },
                    "agency": {
                        "type": "string"
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "CioAuthority-readItem": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "CioAuthority.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "cioAuthority": {
                        "type": "float",
                        "format": "float",
                        "example": 0.35
                    },
                    "budgetCode": {
                        "type": "string",
                        "format": "string",
                        "example": "001-15-4607"
                    },
                    "fiscalYear": {
                        "type": "integer",
                        "format": "year",
                        "example": 2022
                    },
                    "agency": {
                        "type": "string"
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "CioAuthority.jsonld-readItem": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "CioRating-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "rating": {
                        "type": "number",
                        "format": "integer",
                        "example": 5,
                        "minimum": 1,
                        "maximum": 5,
                        "description": "CIOs best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n\n1 represents the lowest possible score and 5 represent the highest possible score."
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
                        "description": "Explanation and/or additional details regarding this reported value"
                    },
                    "date": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-10-01",
                        "description": "Provide the date of CIO Evaluation"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "CioRating-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "rating": {
                        "type": "number",
                        "format": "integer",
                        "example": 5,
                        "minimum": 1,
                        "maximum": 5,
                        "description": "CIOs best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n\n1 represents the lowest possible score and 5 represent the highest possible score."
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
                        "description": "Explanation and/or additional details regarding this reported value"
                    },
                    "date": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-10-01",
                        "description": "Provide the date of CIO Evaluation"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "CioRating.jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "rating": {
                        "type": "number",
                        "format": "integer",
                        "example": 5,
                        "minimum": 1,
                        "maximum": 5,
                        "description": "CIOs best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n\n1 represents the lowest possible score and 5 represent the highest possible score."
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
                        "description": "Explanation and/or additional details regarding this reported value"
                    },
                    "date": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-10-01",
                        "description": "Provide the date of CIO Evaluation"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "CioRating.jsonld-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "rating": {
                        "type": "number",
                        "format": "integer",
                        "example": 5,
                        "minimum": 1,
                        "maximum": 5,
                        "description": "CIOs best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n\n1 represents the lowest possible score and 5 represent the highest possible score."
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
                        "description": "Explanation and/or additional details regarding this reported value"
                    },
                    "date": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-10-01",
                        "description": "Provide the date of CIO Evaluation"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "CioRatingCountReport.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "CioRatingsFeed-read_cioRatingFeed": {
                "type": "object",
                "description": "",
                "properties": {
                    "serviceId": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "agency": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "rating": {
                        "type": "number",
                        "format": "integer",
                        "example": 5,
                        "minimum": 1,
                        "maximum": 5,
                        "description": "CIOs best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n\n1 represents the lowest possible score and 5 represent the highest possible score."
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
                        "description": "Explanation and/or additional details regarding this reported value"
                    },
                    "date": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-10-01",
                        "description": "Provide the date of CIO Evaluation"
                    }
                }
            },
            "CioRatingsFeed.jsonld-read_cioRatingFeed": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "serviceId": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "agency": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "rating": {
                        "type": "number",
                        "format": "integer",
                        "example": 5,
                        "minimum": 1,
                        "maximum": 5,
                        "description": "CIOs best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n\n1 represents the lowest possible score and 5 represent the highest possible score."
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
                        "description": "Explanation and/or additional details regarding this reported value"
                    },
                    "date": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-10-01",
                        "description": "Provide the date of CIO Evaluation"
                    }
                }
            },
            "Contract-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "PIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-00-000-00",
                        "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
                    },
                    "referencePIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-123-000",
                        "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c.",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "Contract-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "PIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-00-000-00",
                        "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
                    },
                    "referencePIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-123-000",
                        "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c.",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "Contract.jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "PIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-00-000-00",
                        "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
                    },
                    "referencePIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-123-000",
                        "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c.",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "Contract.jsonld-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "PIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-00-000-00",
                        "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
                    },
                    "referencePIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-123-000",
                        "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c.",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "ContractsFeed-contractFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "serviceId": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "contractPIID": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "PIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-00-000-00",
                        "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
                    },
                    "referencePIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-123-000",
                        "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c.",
                        "nullable": true
                    }
                }
            },
            "ContractsFeed.jsonld-contractFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "serviceId": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "contractPIID": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "PIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-00-000-00",
                        "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
                    },
                    "referencePIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-123-000",
                        "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c.",
                        "nullable": true
                    }
                }
            },
            "CostPoolFeed-costPoolFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "serviceId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given\nledger item",
                        "nullable": true
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2022,
                        "description": "A Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.<br/>O&M: Operations & Maintenance Costs refers to the expenses\nrequired to operate and maintain an IT asset that is operating in a production environment.<br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.",
                        "nullable": true
                    },
                    "costPool": {
                        "type": "string",
                        "enum": [
                            "Internal Labor",
                            "External Labor",
                            "Outside Services",
                            "Hardware",
                            "Software",
                            "Facilities & Power",
                            "Telecom",
                            "Other",
                            "Internal Services",
                            ""
                        ],
                        "example": "Outside Services",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "ITTower": {
                        "type": "string",
                        "enum": [
                            "End User",
                            "Application",
                            "Delivery",
                            "Security & Compliance",
                            "IT Management",
                            "Data Center",
                            "Network",
                            "Compute",
                            "Storage",
                            "Platform",
                            "Output",
                            ""
                        ],
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "001-00-9004",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated\nwith a given ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Internal Funding",
                            "Contributions"
                        ],
                        "example": "Internal Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'",
                        "nullable": true
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All",
                            "Budget Authority"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field. Budget Authority requests must include the same set of fields as Funding\nSource request, however, Budget Authority submissions do not count toward the aggregate funding total of an\ninvestment."
                    },
                    "alternateBureau": {
                        "type": "string",
                        "format": "number",
                        "example": "10",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Alternate Bureau (string) - 2 digit code\nEnter the Bureau who controls spending for this ledger entry",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "timePeriodId": {
                        "type": "string"
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    }
                }
            },
            "CostPoolFeed.jsonld-costPoolFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "serviceId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given\nledger item",
                        "nullable": true
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2022,
                        "description": "A Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.<br/>O&M: Operations & Maintenance Costs refers to the expenses\nrequired to operate and maintain an IT asset that is operating in a production environment.<br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.",
                        "nullable": true
                    },
                    "costPool": {
                        "type": "string",
                        "enum": [
                            "Internal Labor",
                            "External Labor",
                            "Outside Services",
                            "Hardware",
                            "Software",
                            "Facilities & Power",
                            "Telecom",
                            "Other",
                            "Internal Services",
                            ""
                        ],
                        "example": "Outside Services",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "ITTower": {
                        "type": "string",
                        "enum": [
                            "End User",
                            "Application",
                            "Delivery",
                            "Security & Compliance",
                            "IT Management",
                            "Data Center",
                            "Network",
                            "Compute",
                            "Storage",
                            "Platform",
                            "Output",
                            ""
                        ],
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "001-00-9004",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated\nwith a given ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Internal Funding",
                            "Contributions"
                        ],
                        "example": "Internal Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'",
                        "nullable": true
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All",
                            "Budget Authority"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field. Budget Authority requests must include the same set of fields as Funding\nSource request, however, Budget Authority submissions do not count toward the aggregate funding total of an\ninvestment."
                    },
                    "alternateBureau": {
                        "type": "string",
                        "format": "number",
                        "example": "10",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Alternate Bureau (string) - 2 digit code\nEnter the Bureau who controls spending for this ledger entry",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "timePeriodId": {
                        "type": "string"
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    }
                }
            },
            "CostPoolHistoryReport.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    }
                }
            },
            "CostPoolLongitudinalReport.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "FundingSourceFeed-fundingSourceFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "serviceId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given\nledger item",
                        "nullable": true
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2022,
                        "description": "A Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.<br/>O&M: Operations & Maintenance Costs refers to the expenses\nrequired to operate and maintain an IT asset that is operating in a production environment.<br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.",
                        "nullable": true
                    },
                    "costPool": {
                        "type": "string",
                        "enum": [
                            "Internal Labor",
                            "External Labor",
                            "Outside Services",
                            "Hardware",
                            "Software",
                            "Facilities & Power",
                            "Telecom",
                            "Other",
                            "Internal Services",
                            ""
                        ],
                        "example": "Outside Services",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "ITTower": {
                        "type": "string",
                        "enum": [
                            "End User",
                            "Application",
                            "Delivery",
                            "Security & Compliance",
                            "IT Management",
                            "Data Center",
                            "Network",
                            "Compute",
                            "Storage",
                            "Platform",
                            "Output",
                            ""
                        ],
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "001-00-9004",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated\nwith a given ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Internal Funding",
                            "Contributions"
                        ],
                        "example": "Internal Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'",
                        "nullable": true
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All",
                            "Budget Authority"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field. Budget Authority requests must include the same set of fields as Funding\nSource request, however, Budget Authority submissions do not count toward the aggregate funding total of an\ninvestment."
                    },
                    "alternateBureau": {
                        "type": "string",
                        "format": "number",
                        "example": "10",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Alternate Bureau (string) - 2 digit code\nEnter the Bureau who controls spending for this ledger entry",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "timePeriodId": {
                        "type": "string"
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    }
                }
            },
            "FundingSourceFeed.jsonld-fundingSourceFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "serviceId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given\nledger item",
                        "nullable": true
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2022,
                        "description": "A Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.<br/>O&M: Operations & Maintenance Costs refers to the expenses\nrequired to operate and maintain an IT asset that is operating in a production environment.<br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.",
                        "nullable": true
                    },
                    "costPool": {
                        "type": "string",
                        "enum": [
                            "Internal Labor",
                            "External Labor",
                            "Outside Services",
                            "Hardware",
                            "Software",
                            "Facilities & Power",
                            "Telecom",
                            "Other",
                            "Internal Services",
                            ""
                        ],
                        "example": "Outside Services",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "ITTower": {
                        "type": "string",
                        "enum": [
                            "End User",
                            "Application",
                            "Delivery",
                            "Security & Compliance",
                            "IT Management",
                            "Data Center",
                            "Network",
                            "Compute",
                            "Storage",
                            "Platform",
                            "Output",
                            ""
                        ],
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "001-00-9004",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated\nwith a given ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Internal Funding",
                            "Contributions"
                        ],
                        "example": "Internal Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'",
                        "nullable": true
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All",
                            "Budget Authority"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field. Budget Authority requests must include the same set of fields as Funding\nSource request, however, Budget Authority submissions do not count toward the aggregate funding total of an\ninvestment."
                    },
                    "alternateBureau": {
                        "type": "string",
                        "format": "number",
                        "example": "10",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Alternate Bureau (string) - 2 digit code\nEnter the Bureau who controls spending for this ledger entry",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "timePeriodId": {
                        "type": "string"
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    }
                }
            },
            "FundingSourceHistoryReport.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    }
                }
            },
            "FundingSources.jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "023-00-0000",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated with a\ngiven ledger item."
                    },
                    "fundingSourceName": {
                        "description": "Functional/Business Sponsor Name The Functional/Business Sponsor is defined in Appendix C, and\nprovides visibility for Agencies and OMB as to who the sponsor is for each Investment within the IT portfolio.",
                        "type": "string",
                        "nullable": true
                    },
                    "isActive": {
                        "default": true,
                        "example": true,
                        "type": "boolean"
                    }
                }
            },
            "FundingSources.jsonld-readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "fundingSourceName": {
                        "description": "Functional/Business Sponsor Name The Functional/Business Sponsor is defined in Appendix C, and\nprovides visibility for Agencies and OMB as to who the sponsor is for each Investment within the IT portfolio.",
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ITTowerHistoryReport.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    }
                }
            },
            "InvestmentTypeReport.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "ItTowerFeed-itTowerFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "serviceId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given\nledger item",
                        "nullable": true
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2022,
                        "description": "A Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.<br/>O&M: Operations & Maintenance Costs refers to the expenses\nrequired to operate and maintain an IT asset that is operating in a production environment.<br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.",
                        "nullable": true
                    },
                    "costPool": {
                        "type": "string",
                        "enum": [
                            "Internal Labor",
                            "External Labor",
                            "Outside Services",
                            "Hardware",
                            "Software",
                            "Facilities & Power",
                            "Telecom",
                            "Other",
                            "Internal Services",
                            ""
                        ],
                        "example": "Outside Services",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "ITTower": {
                        "type": "string",
                        "enum": [
                            "End User",
                            "Application",
                            "Delivery",
                            "Security & Compliance",
                            "IT Management",
                            "Data Center",
                            "Network",
                            "Compute",
                            "Storage",
                            "Platform",
                            "Output",
                            ""
                        ],
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "001-00-9004",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated\nwith a given ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Internal Funding",
                            "Contributions"
                        ],
                        "example": "Internal Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'",
                        "nullable": true
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All",
                            "Budget Authority"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field. Budget Authority requests must include the same set of fields as Funding\nSource request, however, Budget Authority submissions do not count toward the aggregate funding total of an\ninvestment."
                    },
                    "alternateBureau": {
                        "type": "string",
                        "format": "number",
                        "example": "10",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Alternate Bureau (string) - 2 digit code\nEnter the Bureau who controls spending for this ledger entry",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "timePeriodId": {
                        "type": "string"
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    }
                }
            },
            "ItTowerFeed.jsonld-itTowerFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "serviceId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given\nledger item",
                        "nullable": true
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2022,
                        "description": "A Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.<br/>O&M: Operations & Maintenance Costs refers to the expenses\nrequired to operate and maintain an IT asset that is operating in a production environment.<br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.",
                        "nullable": true
                    },
                    "costPool": {
                        "type": "string",
                        "enum": [
                            "Internal Labor",
                            "External Labor",
                            "Outside Services",
                            "Hardware",
                            "Software",
                            "Facilities & Power",
                            "Telecom",
                            "Other",
                            "Internal Services",
                            ""
                        ],
                        "example": "Outside Services",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "ITTower": {
                        "type": "string",
                        "enum": [
                            "End User",
                            "Application",
                            "Delivery",
                            "Security & Compliance",
                            "IT Management",
                            "Data Center",
                            "Network",
                            "Compute",
                            "Storage",
                            "Platform",
                            "Output",
                            ""
                        ],
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "001-00-9004",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated\nwith a given ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Internal Funding",
                            "Contributions"
                        ],
                        "example": "Internal Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'",
                        "nullable": true
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All",
                            "Budget Authority"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field. Budget Authority requests must include the same set of fields as Funding\nSource request, however, Budget Authority submissions do not count toward the aggregate funding total of an\ninvestment."
                    },
                    "alternateBureau": {
                        "type": "string",
                        "format": "number",
                        "example": "10",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Alternate Bureau (string) - 2 digit code\nEnter the Bureau who controls spending for this ledger entry",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "timePeriodId": {
                        "type": "string"
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    }
                }
            },
            "ItTowerLongitudinalReport.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Ledger-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given\nledger item",
                        "nullable": true
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2022,
                        "description": "A Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.<br/>O&M: Operations & Maintenance Costs refers to the expenses\nrequired to operate and maintain an IT asset that is operating in a production environment.<br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.",
                        "nullable": true
                    },
                    "costPool": {
                        "type": "string",
                        "enum": [
                            "Internal Labor",
                            "External Labor",
                            "Outside Services",
                            "Hardware",
                            "Software",
                            "Facilities & Power",
                            "Telecom",
                            "Other",
                            "Internal Services",
                            ""
                        ],
                        "example": "Outside Services",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "ITTower": {
                        "type": "string",
                        "enum": [
                            "End User",
                            "Application",
                            "Delivery",
                            "Security & Compliance",
                            "IT Management",
                            "Data Center",
                            "Network",
                            "Compute",
                            "Storage",
                            "Platform",
                            "Output",
                            ""
                        ],
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "001-00-9004",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated\nwith a given ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Internal Funding",
                            "Contributions"
                        ],
                        "example": "Internal Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'",
                        "nullable": true
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All",
                            "Budget Authority"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field. Budget Authority requests must include the same set of fields as Funding\nSource request, however, Budget Authority submissions do not count toward the aggregate funding total of an\ninvestment."
                    },
                    "alternateBureau": {
                        "type": "string",
                        "format": "number",
                        "example": "10",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Alternate Bureau (string) - 2 digit code\nEnter the Bureau who controls spending for this ledger entry",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "timePeriodId": {
                        "type": "string"
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "Ledger-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given\nledger item",
                        "nullable": true
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2022,
                        "description": "A Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.<br/>O&M: Operations & Maintenance Costs refers to the expenses\nrequired to operate and maintain an IT asset that is operating in a production environment.<br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.",
                        "nullable": true
                    },
                    "costPool": {
                        "type": "string",
                        "enum": [
                            "Internal Labor",
                            "External Labor",
                            "Outside Services",
                            "Hardware",
                            "Software",
                            "Facilities & Power",
                            "Telecom",
                            "Other",
                            "Internal Services",
                            ""
                        ],
                        "example": "Outside Services",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "ITTower": {
                        "type": "string",
                        "enum": [
                            "End User",
                            "Application",
                            "Delivery",
                            "Security & Compliance",
                            "IT Management",
                            "Data Center",
                            "Network",
                            "Compute",
                            "Storage",
                            "Platform",
                            "Output",
                            ""
                        ],
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "001-00-9004",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated\nwith a given ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Internal Funding",
                            "Contributions"
                        ],
                        "example": "Internal Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'",
                        "nullable": true
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All",
                            "Budget Authority"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field. Budget Authority requests must include the same set of fields as Funding\nSource request, however, Budget Authority submissions do not count toward the aggregate funding total of an\ninvestment."
                    },
                    "alternateBureau": {
                        "type": "string",
                        "format": "number",
                        "example": "10",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Alternate Bureau (string) - 2 digit code\nEnter the Bureau who controls spending for this ledger entry",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "Ledger.jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given\nledger item",
                        "nullable": true
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2022,
                        "description": "A Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.<br/>O&M: Operations & Maintenance Costs refers to the expenses\nrequired to operate and maintain an IT asset that is operating in a production environment.<br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.",
                        "nullable": true
                    },
                    "costPool": {
                        "type": "string",
                        "enum": [
                            "Internal Labor",
                            "External Labor",
                            "Outside Services",
                            "Hardware",
                            "Software",
                            "Facilities & Power",
                            "Telecom",
                            "Other",
                            "Internal Services",
                            ""
                        ],
                        "example": "Outside Services",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "ITTower": {
                        "type": "string",
                        "enum": [
                            "End User",
                            "Application",
                            "Delivery",
                            "Security & Compliance",
                            "IT Management",
                            "Data Center",
                            "Network",
                            "Compute",
                            "Storage",
                            "Platform",
                            "Output",
                            ""
                        ],
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "001-00-9004",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated\nwith a given ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Internal Funding",
                            "Contributions"
                        ],
                        "example": "Internal Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'",
                        "nullable": true
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All",
                            "Budget Authority"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field. Budget Authority requests must include the same set of fields as Funding\nSource request, however, Budget Authority submissions do not count toward the aggregate funding total of an\ninvestment."
                    },
                    "alternateBureau": {
                        "type": "string",
                        "format": "number",
                        "example": "10",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Alternate Bureau (string) - 2 digit code\nEnter the Bureau who controls spending for this ledger entry",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "timePeriodId": {
                        "type": "string"
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "Ledger.jsonld-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given\nledger item",
                        "nullable": true
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2022,
                        "description": "A Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.<br/>O&M: Operations & Maintenance Costs refers to the expenses\nrequired to operate and maintain an IT asset that is operating in a production environment.<br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.",
                        "nullable": true
                    },
                    "costPool": {
                        "type": "string",
                        "enum": [
                            "Internal Labor",
                            "External Labor",
                            "Outside Services",
                            "Hardware",
                            "Software",
                            "Facilities & Power",
                            "Telecom",
                            "Other",
                            "Internal Services",
                            ""
                        ],
                        "example": "Outside Services",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "ITTower": {
                        "type": "string",
                        "enum": [
                            "End User",
                            "Application",
                            "Delivery",
                            "Security & Compliance",
                            "IT Management",
                            "Data Center",
                            "Network",
                            "Compute",
                            "Storage",
                            "Platform",
                            "Output",
                            ""
                        ],
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council",
                        "nullable": true
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "001-00-9004",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated\nwith a given ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Internal Funding",
                            "Contributions"
                        ],
                        "example": "Internal Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'",
                        "nullable": true
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All",
                            "Budget Authority"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field. Budget Authority requests must include the same set of fields as Funding\nSource request, however, Budget Authority submissions do not count toward the aggregate funding total of an\ninvestment."
                    },
                    "alternateBureau": {
                        "type": "string",
                        "format": "number",
                        "example": "10",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Alternate Bureau (string) - 2 digit code\nEnter the Bureau who controls spending for this ledger entry",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "LedgerHistoryFeed-ledgerHistoryFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "timePeriodId": {
                        "type": "string"
                    },
                    "currentUII": {
                        "type": "string",
                        "format": "string",
                        "example": "018-000000123",
                        "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2022,
                        "description": "A Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "costPool": {
                        "type": "string",
                        "enum": [
                            "Internal Labor",
                            "External Labor",
                            "Outside Services",
                            "Hardware",
                            "Software",
                            "Facilities & Power",
                            "Telecom",
                            "Other",
                            "Internal Services",
                            ""
                        ],
                        "example": "Outside Services",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
                    },
                    "ITTower": {
                        "type": "string",
                        "enum": [
                            "End User",
                            "Application",
                            "Delivery",
                            "Security & Compliance",
                            "IT Management",
                            "Data Center",
                            "Network",
                            "Compute",
                            "Storage",
                            "Platform",
                            "Output",
                            ""
                        ],
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "001-00-9004",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated\nwith a given ledger item."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.<br/>O&M: Operations & Maintenance Costs refers to the expenses\nrequired to operate and maintain an IT asset that is operating in a production environment.<br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.",
                        "nullable": true
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Internal Funding",
                            "Contributions"
                        ],
                        "example": "Internal Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'",
                        "nullable": true
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    },
                    "agency": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    }
                }
            },
            "LedgerHistoryFeed.jsonld-ledgerHistoryFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "agencyId": {
                        "description": "A unique identifier for the document provided by the submitting user.",
                        "type": "string"
                    },
                    "timePeriodId": {
                        "type": "string"
                    },
                    "currentUII": {
                        "type": "string",
                        "format": "string",
                        "example": "018-000000123",
                        "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2022,
                        "description": "A Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "costPool": {
                        "type": "string",
                        "enum": [
                            "Internal Labor",
                            "External Labor",
                            "Outside Services",
                            "Hardware",
                            "Software",
                            "Facilities & Power",
                            "Telecom",
                            "Other",
                            "Internal Services",
                            ""
                        ],
                        "example": "Outside Services",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
                    },
                    "ITTower": {
                        "type": "string",
                        "enum": [
                            "End User",
                            "Application",
                            "Delivery",
                            "Security & Compliance",
                            "IT Management",
                            "Data Center",
                            "Network",
                            "Compute",
                            "Storage",
                            "Platform",
                            "Output",
                            ""
                        ],
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "001-00-9004",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated\nwith a given ledger item."
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.<br/>O&M: Operations & Maintenance Costs refers to the expenses\nrequired to operate and maintain an IT asset that is operating in a production environment.<br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.",
                        "nullable": true
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Internal Funding",
                            "Contributions"
                        ],
                        "example": "Internal Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'",
                        "nullable": true
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    },
                    "agency": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    }
                }
            },
            "LongitudinalReport.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Metric-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Enter a required Unique ID provided by Agency for the metric"
                    },
                    "serviceAgencyId": {
                        "type": "string",
                        "example": "Service22304",
                        "description": "Enter the Service ID of the investment that this performance metric applies to here"
                    },
                    "agency": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "005",
                            "006",
                            "007",
                            "009",
                            "010",
                            "011",
                            "012",
                            "014",
                            "015",
                            "016",
                            "018",
                            "019",
                            "020",
                            "021",
                            "023",
                            "024",
                            "025",
                            "026",
                            "027",
                            "028",
                            "029",
                            "100",
                            "184",
                            "202",
                            "393",
                            "422",
                            "429"
                        ],
                        "example": "018",
                        "description": "The three digit agency code."
                    },
                    "description": {
                        "type": "string",
                        "example": "Percent of Time System is Available for End Users",
                        "description": "Enter a description to help the user understand what is being measured. In this field, describe the units\nused, any calculation algorithm used, and the definition or limits of the population or “universe” measured"
                    },
                    "performanceMeasurementCategory": {
                        "type": "string",
                        "enum": [
                            "Customer Satisfaction",
                            "Strategic and Business Results",
                            "Financial Performance",
                            "Innovation"
                        ],
                        "example": "Customer Satisfaction",
                        "description": "Identify the measurement category of this metric"
                    },
                    "agencyPriorityGoalCode": {
                        "type": "string",
                        "example": "012APG200161",
                        "description": "Provide the Agency Strategic Objective or Priority Goal code for this metric.",
                        "nullable": true
                    },
                    "reportingFrequency": {
                        "type": "string",
                        "enum": [
                            "Monthly",
                            "Quarterly",
                            "Semi-Annual",
                            "Annual"
                        ],
                        "example": "Monthly",
                        "description": "Indicate how often actual measurements will be reported (monthly, quarterly, semi-annually, or annually).\nAnnual reporting frequencies are reserved for annual operating cost measures, performance measures associated\nwith the Agency’s annual performance plan, or other measures that can only be appropriately measured on an\nannual basis."
                    },
                    "measurementCondition": {
                        "type": "string",
                        "enum": [
                            "Over target",
                            "Under target"
                        ],
                        "example": "Over target",
                        "description": "Indicate whether a desired result would be “Over target,” indicating that the trend should maintain\nor increase, or “Under target,” indicating that the trend should maintain or decrease."
                    },
                    "previousYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Enter the metric target value from FY 2022, relative to the reporting frequency.",
                        "nullable": true
                    },
                    "currentYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Enter the metric target value from FY 2023, relative to the reporting frequency.",
                        "nullable": true
                    },
                    "baselineCapability": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99,
                        "description": "What was the quantitative value of your Agency’s capability per this metric prior to this\nInvestment’s life cycle. If your Agency has not measured this capability before, you may leave this field\nblank; otherwise, provide the numeric value of the historic capability measurement.",
                        "nullable": true
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "format": "string",
                        "example": "Percent",
                        "description": "Enter a brief indication of what quantity is measured (e.g., number, percentage, dollar value)\nfor each metric"
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public."
                    },
                    "rebaseLines": {
                        "type": "array",
                        "example": [
                            "018git -000001234"
                        ],
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Set this value to true when this performance metrics is no longer useful for investment management."
                    }
                }
            },
            "Metric-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Enter a required Unique ID provided by Agency for the metric"
                    },
                    "serviceAgencyId": {
                        "type": "string",
                        "example": "Service22304",
                        "description": "Enter the Service ID of the investment that this performance metric applies to here"
                    },
                    "agency": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "005",
                            "006",
                            "007",
                            "009",
                            "010",
                            "011",
                            "012",
                            "014",
                            "015",
                            "016",
                            "018",
                            "019",
                            "020",
                            "021",
                            "023",
                            "024",
                            "025",
                            "026",
                            "027",
                            "028",
                            "029",
                            "100",
                            "184",
                            "202",
                            "393",
                            "422",
                            "429"
                        ],
                        "example": "018",
                        "description": "The three digit agency code."
                    },
                    "actual": {
                        "description": "* @var ArrayCollection Embedded MetricActual Objects",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MetricActual-readItem_readItemSubRes_supService"
                        }
                    },
                    "rebaseLines": {
                        "type": "array",
                        "example": [
                            "018git -000001234"
                        ],
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Set this value to true when this performance metrics is no longer useful for investment management."
                    }
                }
            },
            "Metric-read_readItemSubRes": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Enter a required Unique ID provided by Agency for the metric"
                    },
                    "serviceAgencyId": {
                        "type": "string",
                        "example": "Service22304",
                        "description": "Enter the Service ID of the investment that this performance metric applies to here"
                    },
                    "agency": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "005",
                            "006",
                            "007",
                            "009",
                            "010",
                            "011",
                            "012",
                            "014",
                            "015",
                            "016",
                            "018",
                            "019",
                            "020",
                            "021",
                            "023",
                            "024",
                            "025",
                            "026",
                            "027",
                            "028",
                            "029",
                            "100",
                            "184",
                            "202",
                            "393",
                            "422",
                            "429"
                        ],
                        "example": "018",
                        "description": "The three digit agency code."
                    },
                    "description": {
                        "type": "string",
                        "example": "Percent of Time System is Available for End Users",
                        "description": "Enter a description to help the user understand what is being measured. In this field, describe the units\nused, any calculation algorithm used, and the definition or limits of the population or “universe” measured"
                    },
                    "performanceMeasurementCategory": {
                        "type": "string",
                        "enum": [
                            "Customer Satisfaction",
                            "Strategic and Business Results",
                            "Financial Performance",
                            "Innovation"
                        ],
                        "example": "Customer Satisfaction",
                        "description": "Identify the measurement category of this metric"
                    },
                    "agencyPriorityGoalCode": {
                        "type": "string",
                        "example": "012APG200161",
                        "description": "Provide the Agency Strategic Objective or Priority Goal code for this metric.",
                        "nullable": true
                    },
                    "reportingFrequency": {
                        "type": "string",
                        "enum": [
                            "Monthly",
                            "Quarterly",
                            "Semi-Annual",
                            "Annual"
                        ],
                        "example": "Monthly",
                        "description": "Indicate how often actual measurements will be reported (monthly, quarterly, semi-annually, or annually).\nAnnual reporting frequencies are reserved for annual operating cost measures, performance measures associated\nwith the Agency’s annual performance plan, or other measures that can only be appropriately measured on an\nannual basis."
                    },
                    "measurementCondition": {
                        "type": "string",
                        "enum": [
                            "Over target",
                            "Under target"
                        ],
                        "example": "Over target",
                        "description": "Indicate whether a desired result would be “Over target,” indicating that the trend should maintain\nor increase, or “Under target,” indicating that the trend should maintain or decrease."
                    },
                    "previousYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Enter the metric target value from FY 2022, relative to the reporting frequency.",
                        "nullable": true
                    },
                    "currentYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Enter the metric target value from FY 2023, relative to the reporting frequency.",
                        "nullable": true
                    },
                    "baselineCapability": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99,
                        "description": "What was the quantitative value of your Agency’s capability per this metric prior to this\nInvestment’s life cycle. If your Agency has not measured this capability before, you may leave this field\nblank; otherwise, provide the numeric value of the historic capability measurement.",
                        "nullable": true
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "format": "string",
                        "example": "Percent",
                        "description": "Enter a brief indication of what quantity is measured (e.g., number, percentage, dollar value)\nfor each metric"
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public."
                    },
                    "actual": {
                        "description": "* @var ArrayCollection Embedded MetricActual Objects",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MetricActual-read_readItemSubRes"
                        }
                    },
                    "rebaseLines": {
                        "type": "array",
                        "example": [
                            "018git -000001234"
                        ],
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Set this value to true when this performance metrics is no longer useful for investment management."
                    }
                }
            },
            "Metric.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Enter a required Unique ID provided by Agency for the metric"
                    },
                    "serviceAgencyId": {
                        "type": "string",
                        "example": "Service22304",
                        "description": "Enter the Service ID of the investment that this performance metric applies to here"
                    },
                    "agency": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "005",
                            "006",
                            "007",
                            "009",
                            "010",
                            "011",
                            "012",
                            "014",
                            "015",
                            "016",
                            "018",
                            "019",
                            "020",
                            "021",
                            "023",
                            "024",
                            "025",
                            "026",
                            "027",
                            "028",
                            "029",
                            "100",
                            "184",
                            "202",
                            "393",
                            "422",
                            "429"
                        ],
                        "example": "018",
                        "description": "The three digit agency code."
                    },
                    "description": {
                        "type": "string",
                        "example": "Percent of Time System is Available for End Users",
                        "description": "Enter a description to help the user understand what is being measured. In this field, describe the units\nused, any calculation algorithm used, and the definition or limits of the population or “universe” measured"
                    },
                    "performanceMeasurementCategory": {
                        "type": "string",
                        "enum": [
                            "Customer Satisfaction",
                            "Strategic and Business Results",
                            "Financial Performance",
                            "Innovation"
                        ],
                        "example": "Customer Satisfaction",
                        "description": "Identify the measurement category of this metric"
                    },
                    "agencyPriorityGoalCode": {
                        "type": "string",
                        "example": "012APG200161",
                        "description": "Provide the Agency Strategic Objective or Priority Goal code for this metric.",
                        "nullable": true
                    },
                    "reportingFrequency": {
                        "type": "string",
                        "enum": [
                            "Monthly",
                            "Quarterly",
                            "Semi-Annual",
                            "Annual"
                        ],
                        "example": "Monthly",
                        "description": "Indicate how often actual measurements will be reported (monthly, quarterly, semi-annually, or annually).\nAnnual reporting frequencies are reserved for annual operating cost measures, performance measures associated\nwith the Agency’s annual performance plan, or other measures that can only be appropriately measured on an\nannual basis."
                    },
                    "measurementCondition": {
                        "type": "string",
                        "enum": [
                            "Over target",
                            "Under target"
                        ],
                        "example": "Over target",
                        "description": "Indicate whether a desired result would be “Over target,” indicating that the trend should maintain\nor increase, or “Under target,” indicating that the trend should maintain or decrease."
                    },
                    "previousYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Enter the metric target value from FY 2022, relative to the reporting frequency.",
                        "nullable": true
                    },
                    "currentYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Enter the metric target value from FY 2023, relative to the reporting frequency.",
                        "nullable": true
                    },
                    "baselineCapability": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99,
                        "description": "What was the quantitative value of your Agency’s capability per this metric prior to this\nInvestment’s life cycle. If your Agency has not measured this capability before, you may leave this field\nblank; otherwise, provide the numeric value of the historic capability measurement.",
                        "nullable": true
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "format": "string",
                        "example": "Percent",
                        "description": "Enter a brief indication of what quantity is measured (e.g., number, percentage, dollar value)\nfor each metric"
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public."
                    },
                    "rebaseLines": {
                        "type": "array",
                        "example": [
                            "018git -000001234"
                        ],
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Set this value to true when this performance metrics is no longer useful for investment management."
                    }
                }
            },
            "Metric.jsonld-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Enter a required Unique ID provided by Agency for the metric"
                    },
                    "serviceAgencyId": {
                        "type": "string",
                        "example": "Service22304",
                        "description": "Enter the Service ID of the investment that this performance metric applies to here"
                    },
                    "agency": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "005",
                            "006",
                            "007",
                            "009",
                            "010",
                            "011",
                            "012",
                            "014",
                            "015",
                            "016",
                            "018",
                            "019",
                            "020",
                            "021",
                            "023",
                            "024",
                            "025",
                            "026",
                            "027",
                            "028",
                            "029",
                            "100",
                            "184",
                            "202",
                            "393",
                            "422",
                            "429"
                        ],
                        "example": "018",
                        "description": "The three digit agency code."
                    },
                    "actual": {
                        "description": "* @var ArrayCollection Embedded MetricActual Objects",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MetricActual.jsonld-readItem_readItemSubRes_supService"
                        }
                    },
                    "rebaseLines": {
                        "type": "array",
                        "example": [
                            "018git -000001234"
                        ],
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Set this value to true when this performance metrics is no longer useful for investment management."
                    }
                }
            },
            "Metric.jsonld-read_readItemSubRes": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Enter a required Unique ID provided by Agency for the metric"
                    },
                    "serviceAgencyId": {
                        "type": "string",
                        "example": "Service22304",
                        "description": "Enter the Service ID of the investment that this performance metric applies to here"
                    },
                    "agency": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "005",
                            "006",
                            "007",
                            "009",
                            "010",
                            "011",
                            "012",
                            "014",
                            "015",
                            "016",
                            "018",
                            "019",
                            "020",
                            "021",
                            "023",
                            "024",
                            "025",
                            "026",
                            "027",
                            "028",
                            "029",
                            "100",
                            "184",
                            "202",
                            "393",
                            "422",
                            "429"
                        ],
                        "example": "018",
                        "description": "The three digit agency code."
                    },
                    "description": {
                        "type": "string",
                        "example": "Percent of Time System is Available for End Users",
                        "description": "Enter a description to help the user understand what is being measured. In this field, describe the units\nused, any calculation algorithm used, and the definition or limits of the population or “universe” measured"
                    },
                    "performanceMeasurementCategory": {
                        "type": "string",
                        "enum": [
                            "Customer Satisfaction",
                            "Strategic and Business Results",
                            "Financial Performance",
                            "Innovation"
                        ],
                        "example": "Customer Satisfaction",
                        "description": "Identify the measurement category of this metric"
                    },
                    "agencyPriorityGoalCode": {
                        "type": "string",
                        "example": "012APG200161",
                        "description": "Provide the Agency Strategic Objective or Priority Goal code for this metric.",
                        "nullable": true
                    },
                    "reportingFrequency": {
                        "type": "string",
                        "enum": [
                            "Monthly",
                            "Quarterly",
                            "Semi-Annual",
                            "Annual"
                        ],
                        "example": "Monthly",
                        "description": "Indicate how often actual measurements will be reported (monthly, quarterly, semi-annually, or annually).\nAnnual reporting frequencies are reserved for annual operating cost measures, performance measures associated\nwith the Agency’s annual performance plan, or other measures that can only be appropriately measured on an\nannual basis."
                    },
                    "measurementCondition": {
                        "type": "string",
                        "enum": [
                            "Over target",
                            "Under target"
                        ],
                        "example": "Over target",
                        "description": "Indicate whether a desired result would be “Over target,” indicating that the trend should maintain\nor increase, or “Under target,” indicating that the trend should maintain or decrease."
                    },
                    "previousYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Enter the metric target value from FY 2022, relative to the reporting frequency.",
                        "nullable": true
                    },
                    "currentYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Enter the metric target value from FY 2023, relative to the reporting frequency.",
                        "nullable": true
                    },
                    "baselineCapability": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99,
                        "description": "What was the quantitative value of your Agency’s capability per this metric prior to this\nInvestment’s life cycle. If your Agency has not measured this capability before, you may leave this field\nblank; otherwise, provide the numeric value of the historic capability measurement.",
                        "nullable": true
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "format": "string",
                        "example": "Percent",
                        "description": "Enter a brief indication of what quantity is measured (e.g., number, percentage, dollar value)\nfor each metric"
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public."
                    },
                    "actual": {
                        "description": "* @var ArrayCollection Embedded MetricActual Objects",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MetricActual.jsonld-read_readItemSubRes"
                        }
                    },
                    "rebaseLines": {
                        "type": "array",
                        "example": [
                            "018git -000001234"
                        ],
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Set this value to true when this performance metrics is no longer useful for investment management."
                    }
                }
            },
            "MetricActual-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "result": {
                        "type": "number",
                        "format": "decimal",
                        "description": "Enter the actual result measured",
                        "example": 100
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of Actual Result Enter the end date of the most recent reporting period",
                        "example": "2020-09-30"
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "September 2020 result",
                        "description": "Provide a comment for results that have not met their target"
                    },
                    "metTarget": {
                        "type": "string",
                        "formate": "string",
                        "example": "MET",
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": "N/A"
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MetricActual-readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "result": {
                        "type": "number",
                        "format": "decimal",
                        "description": "Enter the actual result measured",
                        "example": 100
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of Actual Result Enter the end date of the most recent reporting period",
                        "example": "2020-09-30"
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "September 2020 result",
                        "description": "Provide a comment for results that have not met their target"
                    },
                    "metTarget": {
                        "type": "string",
                        "formate": "string",
                        "example": "MET",
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": "N/A"
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MetricActual-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "result": {
                        "type": "number",
                        "format": "decimal",
                        "description": "Enter the actual result measured",
                        "example": 100
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of Actual Result Enter the end date of the most recent reporting period",
                        "example": "2020-09-30"
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "September 2020 result",
                        "description": "Provide a comment for results that have not met their target"
                    },
                    "metTarget": {
                        "type": "string",
                        "formate": "string",
                        "example": "MET",
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": "N/A"
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MetricActual-read_readItemSubRes": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "result": {
                        "type": "number",
                        "format": "decimal",
                        "description": "Enter the actual result measured",
                        "example": 100
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of Actual Result Enter the end date of the most recent reporting period",
                        "example": "2020-09-30"
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "September 2020 result",
                        "description": "Provide a comment for results that have not met their target"
                    },
                    "metTarget": {
                        "type": "string",
                        "formate": "string",
                        "example": "MET",
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": "N/A"
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MetricActual.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "result": {
                        "type": "number",
                        "format": "decimal",
                        "description": "Enter the actual result measured",
                        "example": 100
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of Actual Result Enter the end date of the most recent reporting period",
                        "example": "2020-09-30"
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "September 2020 result",
                        "description": "Provide a comment for results that have not met their target"
                    },
                    "metTarget": {
                        "type": "string",
                        "formate": "string",
                        "example": "MET",
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": "N/A"
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MetricActual.jsonld-readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "result": {
                        "type": "number",
                        "format": "decimal",
                        "description": "Enter the actual result measured",
                        "example": 100
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of Actual Result Enter the end date of the most recent reporting period",
                        "example": "2020-09-30"
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "September 2020 result",
                        "description": "Provide a comment for results that have not met their target"
                    },
                    "metTarget": {
                        "type": "string",
                        "formate": "string",
                        "example": "MET",
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": "N/A"
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MetricActual.jsonld-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "result": {
                        "type": "number",
                        "format": "decimal",
                        "description": "Enter the actual result measured",
                        "example": 100
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of Actual Result Enter the end date of the most recent reporting period",
                        "example": "2020-09-30"
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "September 2020 result",
                        "description": "Provide a comment for results that have not met their target"
                    },
                    "metTarget": {
                        "type": "string",
                        "formate": "string",
                        "example": "MET",
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": "N/A"
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MetricActual.jsonld-read_readItemSubRes": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "result": {
                        "type": "number",
                        "format": "decimal",
                        "description": "Enter the actual result measured",
                        "example": 100
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of Actual Result Enter the end date of the most recent reporting period",
                        "example": "2020-09-30"
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "September 2020 result",
                        "description": "Provide a comment for results that have not met their target"
                    },
                    "metTarget": {
                        "type": "string",
                        "formate": "string",
                        "example": "MET",
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": "N/A"
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MetricActualFeed-metricActualFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "serviceId": {
                        "readOnly": true,
                        "description": "The agencyId of the associated service document",
                        "type": "string"
                    },
                    "metricId": {
                        "readOnly": true,
                        "description": "The Metric agencyId",
                        "type": "string"
                    },
                    "agency": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "unitOfMeasure": {
                        "readOnly": true,
                        "description": "The Metric unitOfMeasure",
                        "type": "string"
                    },
                    "previousYearTarget": {
                        "readOnly": true,
                        "description": "The Metric PY Target",
                        "type": "string"
                    },
                    "currentYearTarget": {
                        "readOnly": true,
                        "description": "The Metric CY Target",
                        "type": "string"
                    },
                    "measurementCondition": {
                        "readOnly": true,
                        "description": "The Metric measurementCondition",
                        "type": "string"
                    },
                    "reportingFrequency": {
                        "readOnly": true,
                        "description": "The Metric reportingFrequency",
                        "type": "string"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "result": {
                        "type": "number",
                        "format": "decimal",
                        "description": "Enter the actual result measured",
                        "example": 100
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of Actual Result Enter the end date of the most recent reporting period",
                        "example": "2020-09-30"
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "September 2020 result",
                        "description": "Provide a comment for results that have not met their target"
                    },
                    "metTarget": {
                        "type": "string",
                        "formate": "string",
                        "example": "MET",
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": "N/A"
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "MetricActualFeed.jsonld-metricActualFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "serviceId": {
                        "readOnly": true,
                        "description": "The agencyId of the associated service document",
                        "type": "string"
                    },
                    "metricId": {
                        "readOnly": true,
                        "description": "The Metric agencyId",
                        "type": "string"
                    },
                    "agency": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "unitOfMeasure": {
                        "readOnly": true,
                        "description": "The Metric unitOfMeasure",
                        "type": "string"
                    },
                    "previousYearTarget": {
                        "readOnly": true,
                        "description": "The Metric PY Target",
                        "type": "string"
                    },
                    "currentYearTarget": {
                        "readOnly": true,
                        "description": "The Metric CY Target",
                        "type": "string"
                    },
                    "measurementCondition": {
                        "readOnly": true,
                        "description": "The Metric measurementCondition",
                        "type": "string"
                    },
                    "reportingFrequency": {
                        "readOnly": true,
                        "description": "The Metric reportingFrequency",
                        "type": "string"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "result": {
                        "type": "number",
                        "format": "decimal",
                        "description": "Enter the actual result measured",
                        "example": 100
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of Actual Result Enter the end date of the most recent reporting period",
                        "example": "2020-09-30"
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "September 2020 result",
                        "description": "Provide a comment for results that have not met their target"
                    },
                    "metTarget": {
                        "type": "string",
                        "formate": "string",
                        "example": "MET",
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": "N/A"
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "MetricActualsCountReport.jsonld-metricActualsCount": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "agency": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "meetingTarget": {
                        "type": "number",
                        "format": "integer",
                        "example": 1,
                        "readOnly": true,
                        "description": "Total Count of Cost Variance Scores between: -10% and 10%"
                    },
                    "missingTarget": {
                        "type": "number",
                        "format": "integer",
                        "example": 1,
                        "readOnly": true,
                        "description": "Total Count of Cost Variance Scores between: -30% and -10% OR 10% and 30%"
                    }
                }
            },
            "MetricFeed-metricFeed_readItem": {
                "type": "object",
                "description": "",
                "properties": {
                    "serviceId": {
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "type": "string"
                    },
                    "metTarget": {
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": "null",
                        "example": "null",
                        "type": "string"
                    },
                    "actualResult": {
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "type": "number"
                    },
                    "actualDate": {
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": "null",
                        "example": "null",
                        "type": "string"
                    },
                    "rebaseLines": {
                        "type": "array",
                        "example": [
                            "018-000001234"
                        ],
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Enter a required Unique ID provided by Agency for the metric"
                    },
                    "serviceAgencyId": {
                        "type": "string",
                        "example": "Service22304",
                        "description": "Enter the Service ID of the investment that this performance metric applies to here"
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Set this value to true when this performance metrics is no longer useful for investment management."
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "MetricFeed.jsonld-metricFeed_readItem": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "serviceId": {
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "type": "string"
                    },
                    "metTarget": {
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": "null",
                        "example": "null",
                        "type": "string"
                    },
                    "actualResult": {
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "type": "number"
                    },
                    "actualDate": {
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": "null",
                        "example": "null",
                        "type": "string"
                    },
                    "rebaseLines": {
                        "type": "array",
                        "example": [
                            "018-000001234"
                        ],
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "Enter a required Unique ID provided by Agency for the metric"
                    },
                    "serviceAgencyId": {
                        "type": "string",
                        "example": "Service22304",
                        "description": "Enter the Service ID of the investment that this performance metric applies to here"
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Set this value to true when this performance metrics is no longer useful for investment management."
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "OperationalAnalysis-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "The date [YYYY-MM-DD] that the operational analysis is submitted"
                    },
                    "analysisResults": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the analysis results",
                        "description": "The results of the operational analysis"
                    },
                    "analysisConclusion": {
                        "type": "string",
                        "enum": [
                            "continue as-is",
                            "initiate remediation action",
                            "initiate innovation action",
                            "initiate modernization/replacement action",
                            "initiate disposal action"
                        ],
                        "example": "continue as-is",
                        "description": "The conclusion of the operational analysis"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                },
                "required": [
                    "date",
                    "analysisResults"
                ]
            },
            "OperationalAnalysis-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "The date [YYYY-MM-DD] that the operational analysis is submitted"
                    },
                    "analysisResults": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the analysis results",
                        "description": "The results of the operational analysis"
                    },
                    "analysisConclusion": {
                        "type": "string",
                        "enum": [
                            "continue as-is",
                            "initiate remediation action",
                            "initiate innovation action",
                            "initiate modernization/replacement action",
                            "initiate disposal action"
                        ],
                        "example": "continue as-is",
                        "description": "The conclusion of the operational analysis"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                },
                "required": [
                    "date",
                    "analysisResults"
                ]
            },
            "OperationalAnalysis.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "The date [YYYY-MM-DD] that the operational analysis is submitted"
                    },
                    "analysisResults": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the analysis results",
                        "description": "The results of the operational analysis"
                    },
                    "analysisConclusion": {
                        "type": "string",
                        "enum": [
                            "continue as-is",
                            "initiate remediation action",
                            "initiate innovation action",
                            "initiate modernization/replacement action",
                            "initiate disposal action"
                        ],
                        "example": "continue as-is",
                        "description": "The conclusion of the operational analysis"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                },
                "required": [
                    "date",
                    "analysisResults"
                ]
            },
            "OperationalAnalysis.jsonld-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "The date [YYYY-MM-DD] that the operational analysis is submitted"
                    },
                    "analysisResults": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the analysis results",
                        "description": "The results of the operational analysis"
                    },
                    "analysisConclusion": {
                        "type": "string",
                        "enum": [
                            "continue as-is",
                            "initiate remediation action",
                            "initiate innovation action",
                            "initiate modernization/replacement action",
                            "initiate disposal action"
                        ],
                        "example": "continue as-is",
                        "description": "The conclusion of the operational analysis"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                },
                "required": [
                    "date",
                    "analysisResults"
                ]
            },
            "OperationalAnalysisFeed-operAnalysisFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "serviceId": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "agency": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "The date [YYYY-MM-DD] that the operational analysis is submitted"
                    },
                    "analysisResults": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the analysis results",
                        "description": "The results of the operational analysis"
                    },
                    "analysisConclusion": {
                        "type": "string",
                        "enum": [
                            "continue as-is",
                            "initiate remediation action",
                            "initiate innovation action",
                            "initiate modernization/replacement action",
                            "initiate disposal action"
                        ],
                        "example": "continue as-is",
                        "description": "The conclusion of the operational analysis"
                    }
                },
                "required": [
                    "date",
                    "analysisResults"
                ]
            },
            "OperationalAnalysisFeed.jsonld-operAnalysisFeed_read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "serviceId": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "agency": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "The date [YYYY-MM-DD] that the operational analysis is submitted"
                    },
                    "analysisResults": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the analysis results",
                        "description": "The results of the operational analysis"
                    },
                    "analysisConclusion": {
                        "type": "string",
                        "enum": [
                            "continue as-is",
                            "initiate remediation action",
                            "initiate innovation action",
                            "initiate modernization/replacement action",
                            "initiate disposal action"
                        ],
                        "example": "continue as-is",
                        "description": "The conclusion of the operational analysis"
                    }
                },
                "required": [
                    "date",
                    "analysisResults"
                ]
            },
            "PerformanceGovId.jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "performanceGovId": {
                        "type": "string",
                        "example": "012APG200161",
                        "description": "Agency Strategic Objective/Priority Goal Provide at least one Agency Strategic Objective code\n(A-11 Section 230) and/or Agency Priority Goal code (A-11 Section 250) that this Investment aligns to\non performance.gov. If this Investment aligns to more than one Agency strategic objective code and/or\nAgency Priority goal code, list all that apply. You may locate the full list of current Agency and/or\nAgency Priority Goal alphanumeric identifier codes by downloading the spreadsheet available on\nperformance.gov. Agencies should provide as many entries as applicable."
                    },
                    "agencyCode": {
                        "type": "string",
                        "example": "012",
                        "description": "digits are your Agency code (See: Appendix C of OMB Circular No. A-11)."
                    },
                    "agencyName": {
                        "type": "string",
                        "example": "Department of Labor",
                        "description": "Name of the Agency."
                    },
                    "description": {
                        "type": "string",
                        "example": "Worker Safety: Reduce Trenching and Excavation Hazards",
                        "description": "Description for each Agency Performance. This description should briefly explain the purpose of the\nperformance and what agency it supports."
                    },
                    "agencyCategory": {
                        "type": "string",
                        "enum": [
                            [
                                "ASO",
                                "APG",
                                ""
                            ]
                        ],
                        "example": "APG",
                        "description": "Agency Strategic Objective or Priority Goal Each Investment must have at least one active metric in\nthe Strategic and Business Results category (of any reporting frequency) tied to the foremost Agency strategic\nobjective (ASO), or Agency priority goal (APG) (as required by A-11 Section 230 and Section 250 respectively).\nProvide that code for the associated metric using the appropriate alphanumeric identifier provided by\nperformance.gov."
                    }
                }
            },
            "PerformanceGovId.jsonld-readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Projects-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "projectId": {
                        "type": "string",
                        "format": "string",
                        "example": "GSAProj1",
                        "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
                    },
                    "projectName": {
                        "type": "string",
                        "format": "string",
                        "example": "API Submissions Development",
                        "maxLength": 100,
                        "description": "Name used by the Agency to refer specifically to the project."
                    },
                    "projectGoal": {
                        "type": "string",
                        "format": "string",
                        "example": "Develop a mechanism to collect CPIC data",
                        "maxLength": 250,
                        "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment\nupon completion. This field is masked from public view."
                    },
                    "plannedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the planned start date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline",
                        "nullable": true
                    },
                    "projectedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the projected start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the actual start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the planned end date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the projected end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the actual end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the planned total cost of this project in millions.\n[$mm] Modifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the projected total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "actualTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1100,
                        "description": "Enter the actual total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "softwareProject": {
                        "type": "bool",
                        "example": false,
                        "description": "Enter whether this project is developing or deploying software solutions\nas a primary focus of this project.",
                        "nullable": true
                    },
                    "tmfInitiative": {
                        "type": "string",
                        "format": "string",
                        "example": "",
                        "description": "Enter a valid and existing tmfInitiative from the TMF Initiatives collection."
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "incrementalDevelopment": {
                        "type": "bool",
                        "example": false,
                        "description": "Are information technology investments adequately implementing incremental development methodology?",
                        "nullable": true
                    },
                    "iterationFrequencyAmount": {
                        "type": "number",
                        "format": "float",
                        "example": 2.5,
                        "description": "Enter the frequency of the incremental development release iterations",
                        "nullable": true
                    },
                    "iterationFrequencyUnits": {
                        "type": "string",
                        "enum": [
                            "Days",
                            "Weeks",
                            "Months",
                            "Years"
                        ],
                        "example": "Weeks",
                        "description": "Select the frequency of incremental development release iterations units",
                        "nullable": true
                    },
                    "iterativeDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "This Project deploys following all two week sprint intervals",
                        "maxLength": 500,
                        "description": "Please briefly describe the iterative development methodology being employed.",
                        "nullable": true
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "costVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Project Variance Score."
                    },
                    "costVarianceMonetaryAmount": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "The Dollar amount for costVariance (numerator in costVariance calculation)."
                    },
                    "scheduleVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Schedule Variance Score."
                    },
                    "scheduleVarianceDayAmount": {
                        "type": "int",
                        "format": "int",
                        "example": 0,
                        "description": "Schedule Variance Day amount (numerator in schedule variance score calculation)."
                    },
                    "projectStatus": {
                        "type": "string",
                        "enum": [
                            "Not Started",
                            "In Progress",
                            "Completed",
                            "Deferred",
                            "Canceled"
                        ],
                        "example": "In Progress",
                        "description": "Enter the project's current status",
                        "nullable": true
                    },
                    "archiveProjectStatus": {
                        "description": "Enter the project's current status",
                        "type": "string",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "Projects-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "projectId": {
                        "type": "string",
                        "format": "string",
                        "example": "GSAProj1",
                        "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
                    },
                    "projectName": {
                        "type": "string",
                        "format": "string",
                        "example": "API Submissions Development",
                        "maxLength": 100,
                        "description": "Name used by the Agency to refer specifically to the project."
                    },
                    "projectGoal": {
                        "type": "string",
                        "format": "string",
                        "example": "Develop a mechanism to collect CPIC data",
                        "maxLength": 250,
                        "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment\nupon completion. This field is masked from public view."
                    },
                    "plannedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the planned start date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline",
                        "nullable": true
                    },
                    "projectedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the projected start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the actual start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the planned end date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the projected end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the actual end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the planned total cost of this project in millions.\n[$mm] Modifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the projected total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "actualTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1100,
                        "description": "Enter the actual total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "softwareProject": {
                        "type": "bool",
                        "example": false,
                        "description": "Enter whether this project is developing or deploying software solutions\nas a primary focus of this project.",
                        "nullable": true
                    },
                    "tmfInitiative": {
                        "type": "string",
                        "format": "string",
                        "example": "",
                        "description": "Enter a valid and existing tmfInitiative from the TMF Initiatives collection."
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "iterationFrequencyUnits": {
                        "type": "string",
                        "enum": [
                            "Days",
                            "Weeks",
                            "Months",
                            "Years"
                        ],
                        "example": "Weeks",
                        "description": "Select the frequency of incremental development release iterations units",
                        "nullable": true
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "costVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Project Variance Score."
                    },
                    "costVarianceMonetaryAmount": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "The Dollar amount for costVariance (numerator in costVariance calculation)."
                    },
                    "scheduleVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Schedule Variance Score."
                    },
                    "scheduleVarianceDayAmount": {
                        "type": "int",
                        "format": "int",
                        "example": 0,
                        "description": "Schedule Variance Day amount (numerator in schedule variance score calculation)."
                    },
                    "projectStatus": {
                        "type": "string",
                        "enum": [
                            "Not Started",
                            "In Progress",
                            "Completed",
                            "Deferred",
                            "Canceled"
                        ],
                        "example": "In Progress",
                        "description": "Enter the project's current status",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "Projects-read_readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "properties": {
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "projectId": {
                        "type": "string",
                        "format": "string",
                        "example": "GSAProj1",
                        "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
                    },
                    "projectName": {
                        "type": "string",
                        "format": "string",
                        "example": "API Submissions Development",
                        "maxLength": 100,
                        "description": "Name used by the Agency to refer specifically to the project."
                    },
                    "projectGoal": {
                        "type": "string",
                        "format": "string",
                        "example": "Develop a mechanism to collect CPIC data",
                        "maxLength": 250,
                        "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment\nupon completion. This field is masked from public view."
                    },
                    "plannedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the planned start date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline",
                        "nullable": true
                    },
                    "projectedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the projected start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the actual start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the planned end date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the projected end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the actual end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the planned total cost of this project in millions.\n[$mm] Modifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the projected total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "actualTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1100,
                        "description": "Enter the actual total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "softwareProject": {
                        "type": "bool",
                        "example": false,
                        "description": "Enter whether this project is developing or deploying software solutions\nas a primary focus of this project.",
                        "nullable": true
                    },
                    "tmfInitiative": {
                        "type": "string",
                        "format": "string",
                        "example": "",
                        "description": "Enter a valid and existing tmfInitiative from the TMF Initiatives collection."
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "incrementalDevelopment": {
                        "type": "bool",
                        "example": false,
                        "description": "Are information technology investments adequately implementing incremental development methodology?",
                        "nullable": true
                    },
                    "iterationFrequencyAmount": {
                        "type": "number",
                        "format": "float",
                        "example": 2.5,
                        "description": "Enter the frequency of the incremental development release iterations",
                        "nullable": true
                    },
                    "iterationFrequencyUnits": {
                        "type": "string",
                        "enum": [
                            "Days",
                            "Weeks",
                            "Months",
                            "Years"
                        ],
                        "example": "Weeks",
                        "description": "Select the frequency of incremental development release iterations units",
                        "nullable": true
                    },
                    "iterativeDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "This Project deploys following all two week sprint intervals",
                        "maxLength": 500,
                        "description": "Please briefly describe the iterative development methodology being employed.",
                        "nullable": true
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "costVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Project Variance Score."
                    },
                    "costVarianceMonetaryAmount": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "The Dollar amount for costVariance (numerator in costVariance calculation)."
                    },
                    "scheduleVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Schedule Variance Score."
                    },
                    "scheduleVarianceDayAmount": {
                        "type": "int",
                        "format": "int",
                        "example": 0,
                        "description": "Schedule Variance Day amount (numerator in schedule variance score calculation)."
                    },
                    "projectStatus": {
                        "type": "string",
                        "enum": [
                            "Not Started",
                            "In Progress",
                            "Completed",
                            "Deferred",
                            "Canceled"
                        ],
                        "example": "In Progress",
                        "description": "Enter the project's current status",
                        "nullable": true
                    },
                    "archiveProjectStatus": {
                        "description": "Enter the project's current status",
                        "type": "string",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "Projects.jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "projectId": {
                        "type": "string",
                        "format": "string",
                        "example": "GSAProj1",
                        "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
                    },
                    "projectName": {
                        "type": "string",
                        "format": "string",
                        "example": "API Submissions Development",
                        "maxLength": 100,
                        "description": "Name used by the Agency to refer specifically to the project."
                    },
                    "projectGoal": {
                        "type": "string",
                        "format": "string",
                        "example": "Develop a mechanism to collect CPIC data",
                        "maxLength": 250,
                        "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment\nupon completion. This field is masked from public view."
                    },
                    "plannedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the planned start date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline",
                        "nullable": true
                    },
                    "projectedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the projected start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the actual start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the planned end date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the projected end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the actual end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the planned total cost of this project in millions.\n[$mm] Modifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the projected total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "actualTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1100,
                        "description": "Enter the actual total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "softwareProject": {
                        "type": "bool",
                        "example": false,
                        "description": "Enter whether this project is developing or deploying software solutions\nas a primary focus of this project.",
                        "nullable": true
                    },
                    "tmfInitiative": {
                        "type": "string",
                        "format": "string",
                        "example": "",
                        "description": "Enter a valid and existing tmfInitiative from the TMF Initiatives collection."
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "incrementalDevelopment": {
                        "type": "bool",
                        "example": false,
                        "description": "Are information technology investments adequately implementing incremental development methodology?",
                        "nullable": true
                    },
                    "iterationFrequencyAmount": {
                        "type": "number",
                        "format": "float",
                        "example": 2.5,
                        "description": "Enter the frequency of the incremental development release iterations",
                        "nullable": true
                    },
                    "iterationFrequencyUnits": {
                        "type": "string",
                        "enum": [
                            "Days",
                            "Weeks",
                            "Months",
                            "Years"
                        ],
                        "example": "Weeks",
                        "description": "Select the frequency of incremental development release iterations units",
                        "nullable": true
                    },
                    "iterativeDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "This Project deploys following all two week sprint intervals",
                        "maxLength": 500,
                        "description": "Please briefly describe the iterative development methodology being employed.",
                        "nullable": true
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "costVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Project Variance Score."
                    },
                    "costVarianceMonetaryAmount": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "The Dollar amount for costVariance (numerator in costVariance calculation)."
                    },
                    "scheduleVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Schedule Variance Score."
                    },
                    "scheduleVarianceDayAmount": {
                        "type": "int",
                        "format": "int",
                        "example": 0,
                        "description": "Schedule Variance Day amount (numerator in schedule variance score calculation)."
                    },
                    "projectStatus": {
                        "type": "string",
                        "enum": [
                            "Not Started",
                            "In Progress",
                            "Completed",
                            "Deferred",
                            "Canceled"
                        ],
                        "example": "In Progress",
                        "description": "Enter the project's current status",
                        "nullable": true
                    },
                    "archiveProjectStatus": {
                        "description": "Enter the project's current status",
                        "type": "string",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "Projects.jsonld-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "projectId": {
                        "type": "string",
                        "format": "string",
                        "example": "GSAProj1",
                        "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
                    },
                    "projectName": {
                        "type": "string",
                        "format": "string",
                        "example": "API Submissions Development",
                        "maxLength": 100,
                        "description": "Name used by the Agency to refer specifically to the project."
                    },
                    "projectGoal": {
                        "type": "string",
                        "format": "string",
                        "example": "Develop a mechanism to collect CPIC data",
                        "maxLength": 250,
                        "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment\nupon completion. This field is masked from public view."
                    },
                    "plannedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the planned start date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline",
                        "nullable": true
                    },
                    "projectedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the projected start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the actual start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the planned end date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the projected end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the actual end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the planned total cost of this project in millions.\n[$mm] Modifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the projected total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "actualTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1100,
                        "description": "Enter the actual total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "softwareProject": {
                        "type": "bool",
                        "example": false,
                        "description": "Enter whether this project is developing or deploying software solutions\nas a primary focus of this project.",
                        "nullable": true
                    },
                    "tmfInitiative": {
                        "type": "string",
                        "format": "string",
                        "example": "",
                        "description": "Enter a valid and existing tmfInitiative from the TMF Initiatives collection."
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "iterationFrequencyUnits": {
                        "type": "string",
                        "enum": [
                            "Days",
                            "Weeks",
                            "Months",
                            "Years"
                        ],
                        "example": "Weeks",
                        "description": "Select the frequency of incremental development release iterations units",
                        "nullable": true
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "costVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Project Variance Score."
                    },
                    "costVarianceMonetaryAmount": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "The Dollar amount for costVariance (numerator in costVariance calculation)."
                    },
                    "scheduleVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Schedule Variance Score."
                    },
                    "scheduleVarianceDayAmount": {
                        "type": "int",
                        "format": "int",
                        "example": 0,
                        "description": "Schedule Variance Day amount (numerator in schedule variance score calculation)."
                    },
                    "projectStatus": {
                        "type": "string",
                        "enum": [
                            "Not Started",
                            "In Progress",
                            "Completed",
                            "Deferred",
                            "Canceled"
                        ],
                        "example": "In Progress",
                        "description": "Enter the project's current status",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "Projects.jsonld-read_readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "projectId": {
                        "type": "string",
                        "format": "string",
                        "example": "GSAProj1",
                        "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
                    },
                    "projectName": {
                        "type": "string",
                        "format": "string",
                        "example": "API Submissions Development",
                        "maxLength": 100,
                        "description": "Name used by the Agency to refer specifically to the project."
                    },
                    "projectGoal": {
                        "type": "string",
                        "format": "string",
                        "example": "Develop a mechanism to collect CPIC data",
                        "maxLength": 250,
                        "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment\nupon completion. This field is masked from public view."
                    },
                    "plannedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the planned start date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline",
                        "nullable": true
                    },
                    "projectedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the projected start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the actual start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the planned end date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the projected end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the actual end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the planned total cost of this project in millions.\n[$mm] Modifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the projected total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "actualTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1100,
                        "description": "Enter the actual total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "softwareProject": {
                        "type": "bool",
                        "example": false,
                        "description": "Enter whether this project is developing or deploying software solutions\nas a primary focus of this project.",
                        "nullable": true
                    },
                    "tmfInitiative": {
                        "type": "string",
                        "format": "string",
                        "example": "",
                        "description": "Enter a valid and existing tmfInitiative from the TMF Initiatives collection."
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "incrementalDevelopment": {
                        "type": "bool",
                        "example": false,
                        "description": "Are information technology investments adequately implementing incremental development methodology?",
                        "nullable": true
                    },
                    "iterationFrequencyAmount": {
                        "type": "number",
                        "format": "float",
                        "example": 2.5,
                        "description": "Enter the frequency of the incremental development release iterations",
                        "nullable": true
                    },
                    "iterationFrequencyUnits": {
                        "type": "string",
                        "enum": [
                            "Days",
                            "Weeks",
                            "Months",
                            "Years"
                        ],
                        "example": "Weeks",
                        "description": "Select the frequency of incremental development release iterations units",
                        "nullable": true
                    },
                    "iterativeDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "This Project deploys following all two week sprint intervals",
                        "maxLength": 500,
                        "description": "Please briefly describe the iterative development methodology being employed.",
                        "nullable": true
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "costVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Project Variance Score."
                    },
                    "costVarianceMonetaryAmount": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "The Dollar amount for costVariance (numerator in costVariance calculation)."
                    },
                    "scheduleVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Schedule Variance Score."
                    },
                    "scheduleVarianceDayAmount": {
                        "type": "int",
                        "format": "int",
                        "example": 0,
                        "description": "Schedule Variance Day amount (numerator in schedule variance score calculation)."
                    },
                    "projectStatus": {
                        "type": "string",
                        "enum": [
                            "Not Started",
                            "In Progress",
                            "Completed",
                            "Deferred",
                            "Canceled"
                        ],
                        "example": "In Progress",
                        "description": "Enter the project's current status",
                        "nullable": true
                    },
                    "archiveProjectStatus": {
                        "description": "Enter the project's current status",
                        "type": "string",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "ProjectsFeed-projectsFeed_readItem": {
                "type": "object",
                "description": "",
                "properties": {
                    "serviceId": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "projectId": {
                        "type": "string",
                        "format": "string",
                        "example": "GSAProj1",
                        "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
                    },
                    "projectName": {
                        "type": "string",
                        "format": "string",
                        "example": "API Submissions Development",
                        "maxLength": 100,
                        "description": "Name used by the Agency to refer specifically to the project."
                    },
                    "projectGoal": {
                        "type": "string",
                        "format": "string",
                        "example": "Develop a mechanism to collect CPIC data",
                        "maxLength": 250,
                        "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment\nupon completion. This field is masked from public view."
                    },
                    "plannedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the planned start date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline",
                        "nullable": true
                    },
                    "projectedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the projected start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the actual start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the planned end date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the projected end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the actual end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the planned total cost of this project in millions.\n[$mm] Modifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the projected total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "actualTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1100,
                        "description": "Enter the actual total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "softwareProject": {
                        "type": "bool",
                        "example": false,
                        "description": "Enter whether this project is developing or deploying software solutions\nas a primary focus of this project.",
                        "nullable": true
                    },
                    "tmfInitiative": {
                        "type": "string",
                        "format": "string",
                        "example": "",
                        "description": "Enter a valid and existing tmfInitiative from the TMF Initiatives collection."
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "incrementalDevelopment": {
                        "type": "bool",
                        "example": false,
                        "description": "Are information technology investments adequately implementing incremental development methodology?",
                        "nullable": true
                    },
                    "iterationFrequencyAmount": {
                        "type": "number",
                        "format": "float",
                        "example": 2.5,
                        "description": "Enter the frequency of the incremental development release iterations",
                        "nullable": true
                    },
                    "iterationFrequencyUnits": {
                        "type": "string",
                        "enum": [
                            "Days",
                            "Weeks",
                            "Months",
                            "Years"
                        ],
                        "example": "Weeks",
                        "description": "Select the frequency of incremental development release iterations units",
                        "nullable": true
                    },
                    "iterativeDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "This Project deploys following all two week sprint intervals",
                        "maxLength": 500,
                        "description": "Please briefly describe the iterative development methodology being employed.",
                        "nullable": true
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "costVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Project Variance Score."
                    },
                    "costVarianceMonetaryAmount": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "The Dollar amount for costVariance (numerator in costVariance calculation)."
                    },
                    "scheduleVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Schedule Variance Score."
                    },
                    "scheduleVarianceDayAmount": {
                        "type": "int",
                        "format": "int",
                        "example": 0,
                        "description": "Schedule Variance Day amount (numerator in schedule variance score calculation)."
                    },
                    "projectStatus": {
                        "type": "string",
                        "enum": [
                            "Not Started",
                            "In Progress",
                            "Completed",
                            "Deferred",
                            "Canceled"
                        ],
                        "example": "In Progress",
                        "description": "Enter the project's current status",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "ProjectsFeed.jsonld-projectsFeed_readItem": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "serviceId": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 64,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "projectId": {
                        "type": "string",
                        "format": "string",
                        "example": "GSAProj1",
                        "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
                    },
                    "projectName": {
                        "type": "string",
                        "format": "string",
                        "example": "API Submissions Development",
                        "maxLength": 100,
                        "description": "Name used by the Agency to refer specifically to the project."
                    },
                    "projectGoal": {
                        "type": "string",
                        "format": "string",
                        "example": "Develop a mechanism to collect CPIC data",
                        "maxLength": 250,
                        "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment\nupon completion. This field is masked from public view."
                    },
                    "plannedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the planned start date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline",
                        "nullable": true
                    },
                    "projectedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the projected start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-08-15",
                        "description": "Enter the actual start date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the planned end date [YYYY-MM-DD] of this project.\nModifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the projected end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "actualEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-11-20",
                        "description": "Enter the actual end date [YYYY-MM-DD] of this project.",
                        "nullable": true
                    },
                    "plannedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the planned total cost of this project in millions.\n[$mm] Modifying this field via PUT or PATCH operation will require a rebaseline.",
                        "nullable": true
                    },
                    "projectedTotalCost": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Enter the projected total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "actualTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1100,
                        "description": "Enter the actual total cost of this project in millions. [$mm]",
                        "nullable": true
                    },
                    "softwareProject": {
                        "type": "bool",
                        "example": false,
                        "description": "Enter whether this project is developing or deploying software solutions\nas a primary focus of this project.",
                        "nullable": true
                    },
                    "tmfInitiative": {
                        "type": "string",
                        "format": "string",
                        "example": "",
                        "description": "Enter a valid and existing tmfInitiative from the TMF Initiatives collection."
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "incrementalDevelopment": {
                        "type": "bool",
                        "example": false,
                        "description": "Are information technology investments adequately implementing incremental development methodology?",
                        "nullable": true
                    },
                    "iterationFrequencyAmount": {
                        "type": "number",
                        "format": "float",
                        "example": 2.5,
                        "description": "Enter the frequency of the incremental development release iterations",
                        "nullable": true
                    },
                    "iterationFrequencyUnits": {
                        "type": "string",
                        "enum": [
                            "Days",
                            "Weeks",
                            "Months",
                            "Years"
                        ],
                        "example": "Weeks",
                        "description": "Select the frequency of incremental development release iterations units",
                        "nullable": true
                    },
                    "iterativeDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "This Project deploys following all two week sprint intervals",
                        "maxLength": 500,
                        "description": "Please briefly describe the iterative development methodology being employed.",
                        "nullable": true
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "costVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Project Variance Score."
                    },
                    "costVarianceMonetaryAmount": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "The Dollar amount for costVariance (numerator in costVariance calculation)."
                    },
                    "scheduleVariance": {
                        "type": "float",
                        "format": "float",
                        "example": "0.0",
                        "description": "Schedule Variance Score."
                    },
                    "scheduleVarianceDayAmount": {
                        "type": "int",
                        "format": "int",
                        "example": 0,
                        "description": "Schedule Variance Day amount (numerator in schedule variance score calculation)."
                    },
                    "projectStatus": {
                        "type": "string",
                        "enum": [
                            "Not Started",
                            "In Progress",
                            "Completed",
                            "Deferred",
                            "Canceled"
                        ],
                        "example": "In Progress",
                        "description": "Enter the project's current status",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "ReadinessProbe.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Services-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "currentUII": {
                        "type": "string",
                        "format": "string",
                        "example": "018-000000123",
                        "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
                    },
                    "agency": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "005",
                            "006",
                            "007",
                            "009",
                            "010",
                            "011",
                            "012",
                            "014",
                            "015",
                            "016",
                            "018",
                            "019",
                            "020",
                            "021",
                            "023",
                            "024",
                            "025",
                            "026",
                            "027",
                            "028",
                            "029",
                            "100",
                            "184",
                            "202",
                            "393",
                            "422",
                            "429"
                        ],
                        "example": "018",
                        "description": "The three digit agency code."
                    },
                    "title": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
                    },
                    "description": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the IT Dashboard modernization process.",
                        "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public."
                    },
                    "changeInStatus": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            "10",
                            "11"
                        ],
                        "example": "11",
                        "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:\n\n- 01: Upgraded from non-major to major IT Investment\n- 02: Downgraded from major to non-major IT Investment\n- 03: Split into multiple Investments\n- 04: Consolidation of Investments\n- 05: Reorganization\n- 06: Eliminated by funding\n- 07: Eliminated by split\n- 08: Eliminated by consolidation\n- 09: Eliminated by reorganization\n- 10: New\n- 11: No Change in Status"
                    },
                    "changeInStatusDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "New Service",
                        "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates.",
                        "nullable": true
                    },
                    "previousUIIs": {
                        "type": "array",
                        "example": [
                            "018-000001234"
                        ],
                        "description": "Previous UIIs\nEnter an identifier depicting Agency Code and unique investment number\nused to report the Investment in the previous BY 2022 Agency IT Portfolio\nSummary submission to OMB Array of UIIs must correspond with either active\nor formerly active UIIs in IT Collect. All Investments where Change in\nStatus does not equal “new” must provide Previous UII data.",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "sharedServiceCode": {
                        "type": "digit",
                        "format": "string",
                        "enum": [
                            "00",
                            "24",
                            "48"
                        ],
                        "example": "00",
                        "description": "Shared Services Code, 2 digit - 00, 24, or 48\n\n- 00: Code for all Investments other than those coded “24” or “48.”\n- 24: E-Gov initiatives or an individual Agency's participation in one of the EGov/LoB initiatives listed in\nAppendix B.\n- 48: Any Multi-Agency (Inter- or Intra-Agency) IT collaboration or an individual Agency’s participation\nin one of these initiatives, such as use of a centralized FOIA portal."
                    },
                    "sharedServiceId": {
                        "type": "digit",
                        "format": "string",
                        "example": "0024",
                        "minLength": 1,
                        "maxLength": 4,
                        "description": "Shared Services Identifier - 4 digits\nThese four digits are applicable for all Investments with a Shared Services Category of 24 or 48. A code will be\nspecifically assigned for all E-Gov/LoB shared services in Appendix B, while Agencies should assign their own\nfour digit unique codes for Multi-Agency initiatives using the “48” shared services category.\n\nThis code represents the same 4-digit identifier previously provided in the last nine digits of the UII for\nInvestments starting with xxx-99999XXXX.",
                        "nullable": true
                    },
                    "missionSupportCategories": {
                        "type": "array",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            ""
                        ],
                        "example": [
                            "01"
                        ],
                        "externalDocs": {
                            "url": "https://ussm.gsa.gov/fibf/"
                        },
                        "description": "Mission Support Category - 2 digit code - 01, 02, 03, 04, 05, 06, 07, 08, or 09\nThese two digits indicate the category of common Mission Support Services\nInvestments by Federal Integrated Business Framework (FIBF) Service Area(s).\nAll non-Mission Support Services Investments should use Category 01. Mission\nSupport Services Investments may select more than one code where applicable:\n\n- 01: Not Applicable\n- 02: Financial Management\n- 03: Human Resources\n- 04: Procurement\n- 05: Travel / Transportation\n- 06: Grants Management\n- 07: Electronic Records Management\n- 08: Cybersecurity Services\n- 09: Other",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "bureauCode": {
                        "type": "string",
                        "format": "number",
                        "example": "00",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Bureau Code (string) - 2 digit code\nThe two digits indicate the bureau code of the Investment (see Appendix C of OMB Circular No. A-11).\nIf this is a department-level or an Agency-wide  activity, use “00” as your bureau code."
                    },
                    "partOfAITPS": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03"
                        ],
                        "example": "01",
                        "description": "Part of AITPS (string) - 2 digit code - 01, 02, or 03\nThese two digits indicate one of the three parts of the Agency IT Portfolio\nSummary, to which the Investment belongs:\n\n- 01: Part 1. IT Investments for Mission Delivery\n- 02: Part 2. IT Investments for Mission Support Services\n- 03: Part 3. IT Investments for IT Infrastructure, IT Security, and IT Management"
                    },
                    "standardIdCategory": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            "10"
                        ],
                        "example": "01",
                        "description": "Standard IT Infrastructure and Management Category\n2 digit code - 01, 02, 03, 04, 05, 06, 07 ,08, 09, or 10\nThese two digits indicate the sub-category of Investments identified as Part 3:\nIT Investments for IT Infrastructure, IT Security, and IT Management. For the\nFY 2021 reporting cycle, the four previous optional Standard Investments\nOutput, Application, Delivery, and Platform will now be required.\n\nAll Part 3 Investments should select one of the following codes other than “01: Not\nApplicable,” while all Part 1 and 2 Investments should select “01: Not Applicable.”\n\n- 01: Not Applicable\n- 02: IT Security and Compliance\n- 03: IT Management\n- 04: Network\n- 05: Data Center and Cloud\n- 06: End User\n- 07: Output\n- 08: Application\n- 09: Delivery\n- 10: Platform"
                    },
                    "missionSupportArea": {
                        "type": "string",
                        "format": "numeric",
                        "example": "00",
                        "minLength": 2,
                        "maxLength": 2,
                        "description": "Mission Delivery and Management Support Area  - 2 digit code\nThese two digits indicate the mission delivery and management support areas.\nAgencies should assign a unique code for each mission delivery and\nmanagement support area reported.",
                        "nullable": true
                    },
                    "investmentType": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05"
                        ],
                        "example": "01",
                        "description": "Type of Investment - 2 digit code - 01, 02, 03, 04, or 05\nThese two digits indicate the type of Investment being reported as follows:\n\n- 01: Major IT Investments\n- 02: Non-major IT Investments\n- 03: IT Migration Investment: The portion of a larger asset and for which there is an existing Business Case\nfor the overall asset. The description of the IT Investment should indicate the UII of the major asset Investment\nof the managing partner.\n- 04: Funding Transfer Investments: These are primarily used to indicate the partner contribution to a Lead\nAgency Investment through inter- or intraAgency transfers. The description of the IT Investment should indicate\nthe UII of the Lead Agency’s Investment.\n- 05: Standard IT Infrastructure Investments in Part 3: IT Infrastructure, IT  Security, IT Management\nInvestments (IT Security and Compliance, IT Management, Network, Data Center and Cloud, End User, Output,\nApplication, Delivery, and Platform)."
                    },
                    "returnOnInvestment": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of a return on an investment.",
                        "description": "- Return on investment",
                        "nullable": true
                    },
                    "nssId": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02"
                        ],
                        "example": "01",
                        "description": "National Security Systems Identifier - 2 digit code - 01 or 02\nThese two digits indicate whether the Investment is a National Security System the Federal Information Security\nManagement Act of 2002 (FISMA), 44 U.S.C. 3542(b)(2) as follows:\n\n- 01: Non-National Security System Investment\n- 02: National Security System Investment (these investments will not be publicly viewable on the IT Dashboard)"
                    },
                    "publicUrls": {
                        "type": "array",
                        "example": [
                            "https://example.gov"
                        ],
                        "description": "Public URL(s) List any website or digital service that is supported primarily by this Investment.\nSupply an array of strings (URLS).",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "timePeriodId": {
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "lastModifiedTimePeriod": {
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "lastModifiedBudgetYear": {
                        "type": "integer",
                        "format": "string",
                        "example": ""
                    },
                    "createdTimePeriod": {
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "retiredTimePeriod": {
                        "type": "string",
                        "format": "string",
                        "example": "",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "projects": {
                        "description": "Embed Project Objects",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Projects-readItem_readItemSubRes_supService"
                        }
                    },
                    "cioRatings": {
                        "description": "Embedded CIO Ratings",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CioRating-readItem_readItemSubRes_supService"
                        }
                    },
                    "ledgers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ledger-readItem_readItemSubRes_supService"
                        }
                    },
                    "contracts": {
                        "description": "Contract Embedded CONTRACTS",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contract-readItem_readItemSubRes_supService"
                        }
                    },
                    "metrics": {
                        "description": "Metrics. Referenced Metric Documents--not embedded",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Metric-readItem_readItemSubRes_supService"
                        }
                    },
                    "operationalAnalysis": {
                        "description": "Embedded OperationalAnalysis",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperationalAnalysis-readItem_readItemSubRes_supService"
                        }
                    }
                }
            },
            "Services-read_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "currentUII": {
                        "type": "string",
                        "format": "string",
                        "example": "018-000000123",
                        "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
                    },
                    "agency": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "005",
                            "006",
                            "007",
                            "009",
                            "010",
                            "011",
                            "012",
                            "014",
                            "015",
                            "016",
                            "018",
                            "019",
                            "020",
                            "021",
                            "023",
                            "024",
                            "025",
                            "026",
                            "027",
                            "028",
                            "029",
                            "100",
                            "184",
                            "202",
                            "393",
                            "422",
                            "429"
                        ],
                        "example": "018",
                        "description": "The three digit agency code."
                    },
                    "title": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
                    },
                    "description": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the IT Dashboard modernization process.",
                        "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public."
                    },
                    "changeInStatus": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            "10",
                            "11"
                        ],
                        "example": "11",
                        "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:\n\n- 01: Upgraded from non-major to major IT Investment\n- 02: Downgraded from major to non-major IT Investment\n- 03: Split into multiple Investments\n- 04: Consolidation of Investments\n- 05: Reorganization\n- 06: Eliminated by funding\n- 07: Eliminated by split\n- 08: Eliminated by consolidation\n- 09: Eliminated by reorganization\n- 10: New\n- 11: No Change in Status"
                    },
                    "changeInStatusDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "New Service",
                        "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates.",
                        "nullable": true
                    },
                    "previousUIIs": {
                        "type": "array",
                        "example": [
                            "018-000001234"
                        ],
                        "description": "Previous UIIs\nEnter an identifier depicting Agency Code and unique investment number\nused to report the Investment in the previous BY 2022 Agency IT Portfolio\nSummary submission to OMB Array of UIIs must correspond with either active\nor formerly active UIIs in IT Collect. All Investments where Change in\nStatus does not equal “new” must provide Previous UII data.",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "sharedServiceCode": {
                        "type": "digit",
                        "format": "string",
                        "enum": [
                            "00",
                            "24",
                            "48"
                        ],
                        "example": "00",
                        "description": "Shared Services Code, 2 digit - 00, 24, or 48\n\n- 00: Code for all Investments other than those coded “24” or “48.”\n- 24: E-Gov initiatives or an individual Agency's participation in one of the EGov/LoB initiatives listed in\nAppendix B.\n- 48: Any Multi-Agency (Inter- or Intra-Agency) IT collaboration or an individual Agency’s participation\nin one of these initiatives, such as use of a centralized FOIA portal."
                    },
                    "sharedServiceId": {
                        "type": "digit",
                        "format": "string",
                        "example": "0024",
                        "minLength": 1,
                        "maxLength": 4,
                        "description": "Shared Services Identifier - 4 digits\nThese four digits are applicable for all Investments with a Shared Services Category of 24 or 48. A code will be\nspecifically assigned for all E-Gov/LoB shared services in Appendix B, while Agencies should assign their own\nfour digit unique codes for Multi-Agency initiatives using the “48” shared services category.\n\nThis code represents the same 4-digit identifier previously provided in the last nine digits of the UII for\nInvestments starting with xxx-99999XXXX.",
                        "nullable": true
                    },
                    "missionSupportCategories": {
                        "type": "array",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            ""
                        ],
                        "example": [
                            "01"
                        ],
                        "externalDocs": {
                            "url": "https://ussm.gsa.gov/fibf/"
                        },
                        "description": "Mission Support Category - 2 digit code - 01, 02, 03, 04, 05, 06, 07, 08, or 09\nThese two digits indicate the category of common Mission Support Services\nInvestments by Federal Integrated Business Framework (FIBF) Service Area(s).\nAll non-Mission Support Services Investments should use Category 01. Mission\nSupport Services Investments may select more than one code where applicable:\n\n- 01: Not Applicable\n- 02: Financial Management\n- 03: Human Resources\n- 04: Procurement\n- 05: Travel / Transportation\n- 06: Grants Management\n- 07: Electronic Records Management\n- 08: Cybersecurity Services\n- 09: Other",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "bureauCode": {
                        "type": "string",
                        "format": "number",
                        "example": "00",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Bureau Code (string) - 2 digit code\nThe two digits indicate the bureau code of the Investment (see Appendix C of OMB Circular No. A-11).\nIf this is a department-level or an Agency-wide  activity, use “00” as your bureau code."
                    },
                    "partOfAITPS": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03"
                        ],
                        "example": "01",
                        "description": "Part of AITPS (string) - 2 digit code - 01, 02, or 03\nThese two digits indicate one of the three parts of the Agency IT Portfolio\nSummary, to which the Investment belongs:\n\n- 01: Part 1. IT Investments for Mission Delivery\n- 02: Part 2. IT Investments for Mission Support Services\n- 03: Part 3. IT Investments for IT Infrastructure, IT Security, and IT Management"
                    },
                    "standardIdCategory": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            "10"
                        ],
                        "example": "01",
                        "description": "Standard IT Infrastructure and Management Category\n2 digit code - 01, 02, 03, 04, 05, 06, 07 ,08, 09, or 10\nThese two digits indicate the sub-category of Investments identified as Part 3:\nIT Investments for IT Infrastructure, IT Security, and IT Management. For the\nFY 2021 reporting cycle, the four previous optional Standard Investments\nOutput, Application, Delivery, and Platform will now be required.\n\nAll Part 3 Investments should select one of the following codes other than “01: Not\nApplicable,” while all Part 1 and 2 Investments should select “01: Not Applicable.”\n\n- 01: Not Applicable\n- 02: IT Security and Compliance\n- 03: IT Management\n- 04: Network\n- 05: Data Center and Cloud\n- 06: End User\n- 07: Output\n- 08: Application\n- 09: Delivery\n- 10: Platform"
                    },
                    "missionSupportArea": {
                        "type": "string",
                        "format": "numeric",
                        "example": "00",
                        "minLength": 2,
                        "maxLength": 2,
                        "description": "Mission Delivery and Management Support Area  - 2 digit code\nThese two digits indicate the mission delivery and management support areas.\nAgencies should assign a unique code for each mission delivery and\nmanagement support area reported.",
                        "nullable": true
                    },
                    "investmentType": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05"
                        ],
                        "example": "01",
                        "description": "Type of Investment - 2 digit code - 01, 02, 03, 04, or 05\nThese two digits indicate the type of Investment being reported as follows:\n\n- 01: Major IT Investments\n- 02: Non-major IT Investments\n- 03: IT Migration Investment: The portion of a larger asset and for which there is an existing Business Case\nfor the overall asset. The description of the IT Investment should indicate the UII of the major asset Investment\nof the managing partner.\n- 04: Funding Transfer Investments: These are primarily used to indicate the partner contribution to a Lead\nAgency Investment through inter- or intraAgency transfers. The description of the IT Investment should indicate\nthe UII of the Lead Agency’s Investment.\n- 05: Standard IT Infrastructure Investments in Part 3: IT Infrastructure, IT  Security, IT Management\nInvestments (IT Security and Compliance, IT Management, Network, Data Center and Cloud, End User, Output,\nApplication, Delivery, and Platform)."
                    },
                    "returnOnInvestment": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of a return on an investment.",
                        "description": "- Return on investment",
                        "nullable": true
                    },
                    "nssId": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02"
                        ],
                        "example": "01",
                        "description": "National Security Systems Identifier - 2 digit code - 01 or 02\nThese two digits indicate whether the Investment is a National Security System the Federal Information Security\nManagement Act of 2002 (FISMA), 44 U.S.C. 3542(b)(2) as follows:\n\n- 01: Non-National Security System Investment\n- 02: National Security System Investment (these investments will not be publicly viewable on the IT Dashboard)"
                    },
                    "publicUrls": {
                        "type": "array",
                        "example": [
                            "https://example.gov"
                        ],
                        "description": "Public URL(s) List any website or digital service that is supported primarily by this Investment.\nSupply an array of strings (URLS).",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    },
                    "timePeriodId": {
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "lastModifiedTimePeriod": {
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "lastModifiedBudgetYear": {
                        "type": "integer",
                        "format": "string",
                        "example": ""
                    },
                    "createdTimePeriod": {
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "retiredTimePeriod": {
                        "type": "string",
                        "format": "string",
                        "example": "",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Services.jsonld-readItem_readItemSubRes_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "currentUII": {
                        "type": "string",
                        "format": "string",
                        "example": "018-000000123",
                        "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
                    },
                    "agency": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "005",
                            "006",
                            "007",
                            "009",
                            "010",
                            "011",
                            "012",
                            "014",
                            "015",
                            "016",
                            "018",
                            "019",
                            "020",
                            "021",
                            "023",
                            "024",
                            "025",
                            "026",
                            "027",
                            "028",
                            "029",
                            "100",
                            "184",
                            "202",
                            "393",
                            "422",
                            "429"
                        ],
                        "example": "018",
                        "description": "The three digit agency code."
                    },
                    "title": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
                    },
                    "description": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the IT Dashboard modernization process.",
                        "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public."
                    },
                    "changeInStatus": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            "10",
                            "11"
                        ],
                        "example": "11",
                        "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:\n\n- 01: Upgraded from non-major to major IT Investment\n- 02: Downgraded from major to non-major IT Investment\n- 03: Split into multiple Investments\n- 04: Consolidation of Investments\n- 05: Reorganization\n- 06: Eliminated by funding\n- 07: Eliminated by split\n- 08: Eliminated by consolidation\n- 09: Eliminated by reorganization\n- 10: New\n- 11: No Change in Status"
                    },
                    "changeInStatusDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "New Service",
                        "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates.",
                        "nullable": true
                    },
                    "previousUIIs": {
                        "type": "array",
                        "example": [
                            "018-000001234"
                        ],
                        "description": "Previous UIIs\nEnter an identifier depicting Agency Code and unique investment number\nused to report the Investment in the previous BY 2022 Agency IT Portfolio\nSummary submission to OMB Array of UIIs must correspond with either active\nor formerly active UIIs in IT Collect. All Investments where Change in\nStatus does not equal “new” must provide Previous UII data.",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "sharedServiceCode": {
                        "type": "digit",
                        "format": "string",
                        "enum": [
                            "00",
                            "24",
                            "48"
                        ],
                        "example": "00",
                        "description": "Shared Services Code, 2 digit - 00, 24, or 48\n\n- 00: Code for all Investments other than those coded “24” or “48.”\n- 24: E-Gov initiatives or an individual Agency's participation in one of the EGov/LoB initiatives listed in\nAppendix B.\n- 48: Any Multi-Agency (Inter- or Intra-Agency) IT collaboration or an individual Agency’s participation\nin one of these initiatives, such as use of a centralized FOIA portal."
                    },
                    "sharedServiceId": {
                        "type": "digit",
                        "format": "string",
                        "example": "0024",
                        "minLength": 1,
                        "maxLength": 4,
                        "description": "Shared Services Identifier - 4 digits\nThese four digits are applicable for all Investments with a Shared Services Category of 24 or 48. A code will be\nspecifically assigned for all E-Gov/LoB shared services in Appendix B, while Agencies should assign their own\nfour digit unique codes for Multi-Agency initiatives using the “48” shared services category.\n\nThis code represents the same 4-digit identifier previously provided in the last nine digits of the UII for\nInvestments starting with xxx-99999XXXX.",
                        "nullable": true
                    },
                    "missionSupportCategories": {
                        "type": "array",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            ""
                        ],
                        "example": [
                            "01"
                        ],
                        "externalDocs": {
                            "url": "https://ussm.gsa.gov/fibf/"
                        },
                        "description": "Mission Support Category - 2 digit code - 01, 02, 03, 04, 05, 06, 07, 08, or 09\nThese two digits indicate the category of common Mission Support Services\nInvestments by Federal Integrated Business Framework (FIBF) Service Area(s).\nAll non-Mission Support Services Investments should use Category 01. Mission\nSupport Services Investments may select more than one code where applicable:\n\n- 01: Not Applicable\n- 02: Financial Management\n- 03: Human Resources\n- 04: Procurement\n- 05: Travel / Transportation\n- 06: Grants Management\n- 07: Electronic Records Management\n- 08: Cybersecurity Services\n- 09: Other",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "bureauCode": {
                        "type": "string",
                        "format": "number",
                        "example": "00",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Bureau Code (string) - 2 digit code\nThe two digits indicate the bureau code of the Investment (see Appendix C of OMB Circular No. A-11).\nIf this is a department-level or an Agency-wide  activity, use “00” as your bureau code."
                    },
                    "partOfAITPS": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03"
                        ],
                        "example": "01",
                        "description": "Part of AITPS (string) - 2 digit code - 01, 02, or 03\nThese two digits indicate one of the three parts of the Agency IT Portfolio\nSummary, to which the Investment belongs:\n\n- 01: Part 1. IT Investments for Mission Delivery\n- 02: Part 2. IT Investments for Mission Support Services\n- 03: Part 3. IT Investments for IT Infrastructure, IT Security, and IT Management"
                    },
                    "standardIdCategory": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            "10"
                        ],
                        "example": "01",
                        "description": "Standard IT Infrastructure and Management Category\n2 digit code - 01, 02, 03, 04, 05, 06, 07 ,08, 09, or 10\nThese two digits indicate the sub-category of Investments identified as Part 3:\nIT Investments for IT Infrastructure, IT Security, and IT Management. For the\nFY 2021 reporting cycle, the four previous optional Standard Investments\nOutput, Application, Delivery, and Platform will now be required.\n\nAll Part 3 Investments should select one of the following codes other than “01: Not\nApplicable,” while all Part 1 and 2 Investments should select “01: Not Applicable.”\n\n- 01: Not Applicable\n- 02: IT Security and Compliance\n- 03: IT Management\n- 04: Network\n- 05: Data Center and Cloud\n- 06: End User\n- 07: Output\n- 08: Application\n- 09: Delivery\n- 10: Platform"
                    },
                    "missionSupportArea": {
                        "type": "string",
                        "format": "numeric",
                        "example": "00",
                        "minLength": 2,
                        "maxLength": 2,
                        "description": "Mission Delivery and Management Support Area  - 2 digit code\nThese two digits indicate the mission delivery and management support areas.\nAgencies should assign a unique code for each mission delivery and\nmanagement support area reported.",
                        "nullable": true
                    },
                    "investmentType": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05"
                        ],
                        "example": "01",
                        "description": "Type of Investment - 2 digit code - 01, 02, 03, 04, or 05\nThese two digits indicate the type of Investment being reported as follows:\n\n- 01: Major IT Investments\n- 02: Non-major IT Investments\n- 03: IT Migration Investment: The portion of a larger asset and for which there is an existing Business Case\nfor the overall asset. The description of the IT Investment should indicate the UII of the major asset Investment\nof the managing partner.\n- 04: Funding Transfer Investments: These are primarily used to indicate the partner contribution to a Lead\nAgency Investment through inter- or intraAgency transfers. The description of the IT Investment should indicate\nthe UII of the Lead Agency’s Investment.\n- 05: Standard IT Infrastructure Investments in Part 3: IT Infrastructure, IT  Security, IT Management\nInvestments (IT Security and Compliance, IT Management, Network, Data Center and Cloud, End User, Output,\nApplication, Delivery, and Platform)."
                    },
                    "returnOnInvestment": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of a return on an investment.",
                        "description": "- Return on investment",
                        "nullable": true
                    },
                    "nssId": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02"
                        ],
                        "example": "01",
                        "description": "National Security Systems Identifier - 2 digit code - 01 or 02\nThese two digits indicate whether the Investment is a National Security System the Federal Information Security\nManagement Act of 2002 (FISMA), 44 U.S.C. 3542(b)(2) as follows:\n\n- 01: Non-National Security System Investment\n- 02: National Security System Investment (these investments will not be publicly viewable on the IT Dashboard)"
                    },
                    "publicUrls": {
                        "type": "array",
                        "example": [
                            "https://example.gov"
                        ],
                        "description": "Public URL(s) List any website or digital service that is supported primarily by this Investment.\nSupply an array of strings (URLS).",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "timePeriodId": {
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "lastModifiedTimePeriod": {
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "lastModifiedBudgetYear": {
                        "type": "integer",
                        "format": "string",
                        "example": ""
                    },
                    "createdTimePeriod": {
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "retiredTimePeriod": {
                        "type": "string",
                        "format": "string",
                        "example": "",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    },
                    "projects": {
                        "description": "Embed Project Objects",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Projects.jsonld-readItem_readItemSubRes_supService"
                        }
                    },
                    "cioRatings": {
                        "description": "Embedded CIO Ratings",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CioRating.jsonld-readItem_readItemSubRes_supService"
                        }
                    },
                    "ledgers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ledger.jsonld-readItem_readItemSubRes_supService"
                        }
                    },
                    "contracts": {
                        "description": "Contract Embedded CONTRACTS",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contract.jsonld-readItem_readItemSubRes_supService"
                        }
                    },
                    "metrics": {
                        "description": "Metrics. Referenced Metric Documents--not embedded",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Metric.jsonld-readItem_readItemSubRes_supService"
                        }
                    },
                    "operationalAnalysis": {
                        "description": "Embedded OperationalAnalysis",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperationalAnalysis.jsonld-readItem_readItemSubRes_supService"
                        }
                    }
                }
            },
            "Services.jsonld-read_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "currentUII": {
                        "type": "string",
                        "format": "string",
                        "example": "018-000000123",
                        "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
                    },
                    "agency": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "005",
                            "006",
                            "007",
                            "009",
                            "010",
                            "011",
                            "012",
                            "014",
                            "015",
                            "016",
                            "018",
                            "019",
                            "020",
                            "021",
                            "023",
                            "024",
                            "025",
                            "026",
                            "027",
                            "028",
                            "029",
                            "100",
                            "184",
                            "202",
                            "393",
                            "422",
                            "429"
                        ],
                        "example": "018",
                        "description": "The three digit agency code."
                    },
                    "title": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
                    },
                    "description": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the IT Dashboard modernization process.",
                        "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public."
                    },
                    "changeInStatus": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            "10",
                            "11"
                        ],
                        "example": "11",
                        "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:\n\n- 01: Upgraded from non-major to major IT Investment\n- 02: Downgraded from major to non-major IT Investment\n- 03: Split into multiple Investments\n- 04: Consolidation of Investments\n- 05: Reorganization\n- 06: Eliminated by funding\n- 07: Eliminated by split\n- 08: Eliminated by consolidation\n- 09: Eliminated by reorganization\n- 10: New\n- 11: No Change in Status"
                    },
                    "changeInStatusDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "New Service",
                        "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates.",
                        "nullable": true
                    },
                    "previousUIIs": {
                        "type": "array",
                        "example": [
                            "018-000001234"
                        ],
                        "description": "Previous UIIs\nEnter an identifier depicting Agency Code and unique investment number\nused to report the Investment in the previous BY 2022 Agency IT Portfolio\nSummary submission to OMB Array of UIIs must correspond with either active\nor formerly active UIIs in IT Collect. All Investments where Change in\nStatus does not equal “new” must provide Previous UII data.",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "sharedServiceCode": {
                        "type": "digit",
                        "format": "string",
                        "enum": [
                            "00",
                            "24",
                            "48"
                        ],
                        "example": "00",
                        "description": "Shared Services Code, 2 digit - 00, 24, or 48\n\n- 00: Code for all Investments other than those coded “24” or “48.”\n- 24: E-Gov initiatives or an individual Agency's participation in one of the EGov/LoB initiatives listed in\nAppendix B.\n- 48: Any Multi-Agency (Inter- or Intra-Agency) IT collaboration or an individual Agency’s participation\nin one of these initiatives, such as use of a centralized FOIA portal."
                    },
                    "sharedServiceId": {
                        "type": "digit",
                        "format": "string",
                        "example": "0024",
                        "minLength": 1,
                        "maxLength": 4,
                        "description": "Shared Services Identifier - 4 digits\nThese four digits are applicable for all Investments with a Shared Services Category of 24 or 48. A code will be\nspecifically assigned for all E-Gov/LoB shared services in Appendix B, while Agencies should assign their own\nfour digit unique codes for Multi-Agency initiatives using the “48” shared services category.\n\nThis code represents the same 4-digit identifier previously provided in the last nine digits of the UII for\nInvestments starting with xxx-99999XXXX.",
                        "nullable": true
                    },
                    "missionSupportCategories": {
                        "type": "array",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            ""
                        ],
                        "example": [
                            "01"
                        ],
                        "externalDocs": {
                            "url": "https://ussm.gsa.gov/fibf/"
                        },
                        "description": "Mission Support Category - 2 digit code - 01, 02, 03, 04, 05, 06, 07, 08, or 09\nThese two digits indicate the category of common Mission Support Services\nInvestments by Federal Integrated Business Framework (FIBF) Service Area(s).\nAll non-Mission Support Services Investments should use Category 01. Mission\nSupport Services Investments may select more than one code where applicable:\n\n- 01: Not Applicable\n- 02: Financial Management\n- 03: Human Resources\n- 04: Procurement\n- 05: Travel / Transportation\n- 06: Grants Management\n- 07: Electronic Records Management\n- 08: Cybersecurity Services\n- 09: Other",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "bureauCode": {
                        "type": "string",
                        "format": "number",
                        "example": "00",
                        "minLength": "2",
                        "maxLength": "2",
                        "description": "Bureau Code (string) - 2 digit code\nThe two digits indicate the bureau code of the Investment (see Appendix C of OMB Circular No. A-11).\nIf this is a department-level or an Agency-wide  activity, use “00” as your bureau code."
                    },
                    "partOfAITPS": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03"
                        ],
                        "example": "01",
                        "description": "Part of AITPS (string) - 2 digit code - 01, 02, or 03\nThese two digits indicate one of the three parts of the Agency IT Portfolio\nSummary, to which the Investment belongs:\n\n- 01: Part 1. IT Investments for Mission Delivery\n- 02: Part 2. IT Investments for Mission Support Services\n- 03: Part 3. IT Investments for IT Infrastructure, IT Security, and IT Management"
                    },
                    "standardIdCategory": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            "10"
                        ],
                        "example": "01",
                        "description": "Standard IT Infrastructure and Management Category\n2 digit code - 01, 02, 03, 04, 05, 06, 07 ,08, 09, or 10\nThese two digits indicate the sub-category of Investments identified as Part 3:\nIT Investments for IT Infrastructure, IT Security, and IT Management. For the\nFY 2021 reporting cycle, the four previous optional Standard Investments\nOutput, Application, Delivery, and Platform will now be required.\n\nAll Part 3 Investments should select one of the following codes other than “01: Not\nApplicable,” while all Part 1 and 2 Investments should select “01: Not Applicable.”\n\n- 01: Not Applicable\n- 02: IT Security and Compliance\n- 03: IT Management\n- 04: Network\n- 05: Data Center and Cloud\n- 06: End User\n- 07: Output\n- 08: Application\n- 09: Delivery\n- 10: Platform"
                    },
                    "missionSupportArea": {
                        "type": "string",
                        "format": "numeric",
                        "example": "00",
                        "minLength": 2,
                        "maxLength": 2,
                        "description": "Mission Delivery and Management Support Area  - 2 digit code\nThese two digits indicate the mission delivery and management support areas.\nAgencies should assign a unique code for each mission delivery and\nmanagement support area reported.",
                        "nullable": true
                    },
                    "investmentType": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05"
                        ],
                        "example": "01",
                        "description": "Type of Investment - 2 digit code - 01, 02, 03, 04, or 05\nThese two digits indicate the type of Investment being reported as follows:\n\n- 01: Major IT Investments\n- 02: Non-major IT Investments\n- 03: IT Migration Investment: The portion of a larger asset and for which there is an existing Business Case\nfor the overall asset. The description of the IT Investment should indicate the UII of the major asset Investment\nof the managing partner.\n- 04: Funding Transfer Investments: These are primarily used to indicate the partner contribution to a Lead\nAgency Investment through inter- or intraAgency transfers. The description of the IT Investment should indicate\nthe UII of the Lead Agency’s Investment.\n- 05: Standard IT Infrastructure Investments in Part 3: IT Infrastructure, IT  Security, IT Management\nInvestments (IT Security and Compliance, IT Management, Network, Data Center and Cloud, End User, Output,\nApplication, Delivery, and Platform)."
                    },
                    "returnOnInvestment": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of a return on an investment.",
                        "description": "- Return on investment",
                        "nullable": true
                    },
                    "nssId": {
                        "type": "string",
                        "format": "numeric",
                        "enum": [
                            "01",
                            "02"
                        ],
                        "example": "01",
                        "description": "National Security Systems Identifier - 2 digit code - 01 or 02\nThese two digits indicate whether the Investment is a National Security System the Federal Information Security\nManagement Act of 2002 (FISMA), 44 U.S.C. 3542(b)(2) as follows:\n\n- 01: Non-National Security System Investment\n- 02: National Security System Investment (these investments will not be publicly viewable on the IT Dashboard)"
                    },
                    "publicUrls": {
                        "type": "array",
                        "example": [
                            "https://example.gov"
                        ],
                        "description": "Public URL(s) List any website or digital service that is supported primarily by this Investment.\nSupply an array of strings (URLS).",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "isMasked": {
                        "type": "bool",
                        "example": true,
                        "readOnly": true,
                        "description": "A readonly boolean indicating whether the document is masked from the public.",
                        "default": true
                    },
                    "isRetired": {
                        "type": "bool",
                        "example": false,
                        "description": "Boolean indicating if the document has been retired"
                    },
                    "timePeriodId": {
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "lastModifiedTimePeriod": {
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "lastModifiedBudgetYear": {
                        "type": "integer",
                        "format": "string",
                        "example": ""
                    },
                    "createdTimePeriod": {
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "retiredTimePeriod": {
                        "type": "string",
                        "format": "string",
                        "example": "",
                        "nullable": true
                    },
                    "rebaseLines": {
                        "type": "array",
                        "readOnly": true,
                        "description": "A list of associated rebaseLine IDs",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SupplementalServicesFeed-supplementalServicesFeed_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "projectLifecycleCosts": {
                        "type": "string"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "currentUII": {
                        "type": "string",
                        "format": "string",
                        "example": "018-000000123",
                        "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
                    },
                    "title": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
                    }
                }
            },
            "SupplementalServicesFeed.jsonld-supplementalServicesFeed_supService": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "projectLifecycleCosts": {
                        "type": "string"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    },
                    "agencyId": {
                        "type": "string",
                        "format": "alphanumeric",
                        "minLength": 1,
                        "maxLength": 32,
                        "description": "A unique identifier for the document provided by the submitting user."
                    },
                    "currentUII": {
                        "type": "string",
                        "format": "string",
                        "example": "018-000000123",
                        "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
                    },
                    "title": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
                    }
                }
            },
            "TimePeriods.jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "budgetYear": {
                        "type": "number",
                        "format": "year",
                        "example": 2021,
                        "description": "The budget year"
                    },
                    "currentYear": {
                        "type": "number",
                        "format": "year",
                        "example": 2021,
                        "description": "The current year"
                    },
                    "previousYear": {
                        "type": "number",
                        "format": "year",
                        "example": 2021,
                        "description": "The previous year"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-08-24T14:15:22Z",
                        "description": "The start date as a date-time string for the budget year"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-08-24T14:15:22Z",
                        "description": "The end date as a date-time string for the budget year"
                    },
                    "fiscalYearEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-08-24",
                        "description": "The end date as a date-time string for the budget year"
                    },
                    "isReleasable": {
                        "type": "boolean"
                    },
                    "stage": {
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "example": 1,
                        "default": 1
                    },
                    "isActive": {
                        "type": "enum",
                        "enum": [
                            true,
                            false
                        ],
                        "example": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "TimePeriods.jsonld-readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "budgetYear": {
                        "type": "number",
                        "format": "year",
                        "example": 2021,
                        "description": "The budget year"
                    },
                    "currentYear": {
                        "type": "number",
                        "format": "year",
                        "example": 2021,
                        "description": "The current year"
                    },
                    "previousYear": {
                        "type": "number",
                        "format": "year",
                        "example": 2021,
                        "description": "The previous year"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-08-24T14:15:22Z",
                        "description": "The start date as a date-time string for the budget year"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-08-24T14:15:22Z",
                        "description": "The end date as a date-time string for the budget year"
                    },
                    "fiscalYearEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-08-24",
                        "description": "The end date as a date-time string for the budget year"
                    },
                    "isReleasable": {
                        "type": "boolean"
                    },
                    "stage": {
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "example": 1,
                        "default": 1
                    },
                    "isActive": {
                        "type": "enum",
                        "enum": [
                            true,
                            false
                        ],
                        "example": true
                    },
                    "created": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Created date/time"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "timestamp",
                        "example": "2020-01-01 15:00:00",
                        "readOnly": true,
                        "description": "Last modified date/time"
                    },
                    "agencyCode": {
                        "type": "string",
                        "format": "string",
                        "example": "018",
                        "description": "The agency code of the user who created the record"
                    }
                }
            },
            "UiiLongitudinalReport.jsonld-read": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "VarianceScoresCountReport.jsonld-varianceScoresCount": {
                "type": "object",
                "description": "",
                "additionalProperties": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "agency": {
                        "readOnly": true,
                        "description": "The three digit agency code.",
                        "type": "string"
                    },
                    "projectsWithLowCostVariance": {
                        "type": "number",
                        "format": "integer",
                        "example": 1,
                        "readOnly": true,
                        "description": "Total Count of Cost Variance Scores between: -10% and 10%"
                    },
                    "projectsWithMediumCostVariance": {
                        "type": "number",
                        "format": "integer",
                        "example": 1,
                        "readOnly": true,
                        "description": "Total Count of Cost Variance Scores between: -30% and -10% OR 10% and 30%"
                    },
                    "projectsWithHighCostVariance": {
                        "type": "number",
                        "format": "integer",
                        "example": 1,
                        "readOnly": true,
                        "description": "Total Count of Cost Variance Scores less than -30% OR greater than 30%"
                    },
                    "projectsWithLowScheduleVariance": {
                        "type": "number",
                        "format": "integer",
                        "example": 1,
                        "readOnly": true,
                        "description": "Total Count of Schedule Variance Scores between: -10% and 10%"
                    },
                    "projectsWithMediumScheduleVariance": {
                        "type": "number",
                        "format": "integer",
                        "example": 1,
                        "readOnly": true,
                        "description": "Total Count of Schedule Variance Scores between: -30% and -10% OR 10% and 30%",
                        "nullable": true
                    },
                    "projectsWithHighScheduleVariance": {
                        "type": "number",
                        "format": "integer",
                        "example": 1,
                        "readOnly": true,
                        "description": "Total Count of Schedule Variance Scores less than -30% OR greater than 30%",
                        "nullable": true
                    }
                }
            }
        },
        "responses": {},
        "parameters": {},
        "examples": {},
        "requestBodies": {},
        "headers": {}
    },
    "tags": [
        {
            "name": "Services"
        },
        {
            "name": "Projects"
        },
        {
            "name": "Ledger"
        },
        {
            "name": "CioRating"
        },
        {
            "name": "Contract"
        },
        {
            "name": "Metric"
        },
        {
            "name": "MetricActual"
        },
        {
            "name": "OperationalAnalysis"
        },
        {
            "name": "CioAuthority"
        },
        {
            "name": "ProjectsFeed"
        },
        {
            "name": "BudgetAuthorityFeed"
        },
        {
            "name": "CostPoolFeed"
        },
        {
            "name": "FundingSourceFeed"
        },
        {
            "name": "ItTowerFeed"
        },
        {
            "name": "CioRatingsFeed"
        },
        {
            "name": "ContractsFeed"
        },
        {
            "name": "OperationalAnalysisFeed"
        }
    ]
}
