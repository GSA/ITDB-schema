{
  "openapi": "3.0.2",
  "info": {
    "title": "IT Collect",
    "version": "0.0.3-beta",
    "description": "The IT Dashboard team aims to build a modern API that acts as the center-piece of a modular IT data reporting ecosystem. This OpenAPI spec shows the initial direction of ITCollect data architecture and is aimed at providing real-time updates to the IT Collect API. It will serve as living documentation of the latest changes.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "x-logo": {
      "url": "images/logo-gsa.svg",
      "backgroundColor": "#FFFFFF",
      "altText": "U.S General Services Administration"
    }
  },
  "paths": {
    "/v1/rebaselines": {
      "get": {
        "tags": [
          "Rebaseline"
        ],
        "operationId": "getRebaselineCollection",
        "summary": "Retrieves the collection of Rebaseline resources.",
        "responses": {
          "200": {
            "description": "Rebaseline collection response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Rebaseline:jsonld-read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Rebaseline"
        ],
        "operationId": "postRebaselineCollection",
        "summary": "Creates a Rebaseline resource.",
        "responses": {
          "201": {
            "description": "Rebaseline resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Rebaseline:jsonld"
                }
              }
            },
            "links": {
              "GetRebaselineItem": {
                "parameters": {
                  "agencyId": "$response.body#/agencyId"
                },
                "operationId": "getRebaselineItem",
                "description": "The `agencyId` value returned in the response can be used as the `agencyId` parameter in `GET /v1/rebaselines/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Rebaseline:jsonld-write"
              }
            }
          },
          "description": "The new Rebaseline resource"
        },
        "parameters": [
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/v1/rebaselines/{id}": {
      "get": {
        "tags": [
          "Rebaseline"
        ],
        "operationId": "getRebaselineItem",
        "summary": "Retrieves a Rebaseline resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rebaseline resource response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Rebaseline:jsonld-read_readItem_rebaseline-readItem"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Rebaseline"
        ],
        "operationId": "putRebaselineItem",
        "summary": "Replaces the Rebaseline resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rebaseline resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Rebaseline:jsonld"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Rebaseline:jsonld-write"
              }
            }
          },
          "description": "The updated Rebaseline resource"
        }
      },
      "patch": {
        "tags": [
          "Rebaseline"
        ],
        "operationId": "patchRebaselineItem",
        "summary": "Updates the Rebaseline resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rebaseline resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Rebaseline:jsonld"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Rebaseline-write"
              }
            }
          },
          "description": "The updated Rebaseline resource"
        }
      },
      "delete": {
        "tags": [
          "Rebaseline"
        ],
        "operationId": "deleteRebaselineItem",
        "summary": "Removes the Rebaseline resource.",
        "responses": {
          "204": {
            "description": "Rebaseline resource deleted"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/v1/services": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "getServicesCollection",
        "summary": "Retrieves the collection of Services resources.",
        "responses": {
          "200": {
            "description": "Services collection response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Services:jsonld-read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Services"
        ],
        "operationId": "postServicesCollection",
        "summary": "Creates a Services resource.",
        "responses": {
          "201": {
            "description": "Services resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Services:jsonld"
                }
              }
            },
            "links": {
              "GetServicesItem": {
                "parameters": {
                  "agencyId": "$response.body#/agencyId"
                },
                "operationId": "getServicesItem",
                "description": "The `agencyId` value returned in the response can be used as the `agencyId` parameter in `GET /v1/services/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Services:jsonld-write"
              }
            }
          },
          "description": "The new Services resource"
        },
        "parameters": [
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "description": "<details><summary><b>Validations</b></summary><ul><ul></details>"
      }
    },
    "/v1/services/{id}": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "getServicesItem",
        "summary": "Retrieves a Services resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Services resource response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Services:jsonld-readItem_readItemSubRes"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Services"
        ],
        "operationId": "putServicesItem",
        "summary": "Replaces the Services resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Services resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Services:jsonld"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Services:jsonld-write"
              }
            }
          },
          "description": "The updated Services resource"
        },
        "description": "<details><summary><b>Validations</b></summary><ul><ul></details>"
      },
      "patch": {
        "tags": [
          "Services"
        ],
        "operationId": "patchServicesItem",
        "summary": "Updates the Services resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Services resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Services:jsonld"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Services-write"
              }
            }
          },
          "description": "The updated Services resource"
        },
        "description": "<details><summary><b>Validations</b></summary><ul><ul></details>"
      },
      "delete": {
        "tags": [
          "Services"
        ],
        "operationId": "deleteServicesItem",
        "summary": "Removes the Services resource.",
        "responses": {
          "204": {
            "description": "Services resource deleted"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/v1/services/{service}/cio-ratings": {
      "get": {
        "tags": [
          "CioRating"
        ],
        "operationId": "getCioRatingCollection",
        "summary": "Retrieves the collection of CioRating resources.",
        "responses": {
          "200": {
            "description": "CioRating collection response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CioRating:jsonld-read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ]
      },
      "post": {
        "tags": [
          "CioRating"
        ],
        "operationId": "postCioRatingCollection",
        "summary": "Creates a CioRating resource.",
        "responses": {
          "201": {
            "description": "CioRating resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CioRating:jsonld"
                }
              }
            },
            "links": {
              "GetCioRatingItem": {
                "parameters": {
                  "agencyId": "$response.body#/agencyId"
                },
                "operationId": "getCioRatingItem",
                "description": "The `agencyId` value returned in the response can be used as the `agencyId` parameter in `GET /v1/services/{service}/cio-ratings/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/CioRating:jsonld-write"
              }
            }
          },
          "description": "The new CioRating resource"
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/v1/services/{service}/cio-ratings/{id}": {
      "get": {
        "tags": [
          "CioRating"
        ],
        "operationId": "getCioRatingItem",
        "summary": "Retrieves a CioRating resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CioRating resource response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CioRating:jsonld-readItem_readItemSubRes"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CioRating"
        ],
        "operationId": "putCioRatingItem",
        "summary": "Replaces the CioRating resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CioRating resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CioRating:jsonld"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/CioRating:jsonld-readItem_readItemSubRes_write"
              }
            }
          },
          "description": "The updated CioRating resource"
        }
      },
      "patch": {
        "tags": [
          "CioRating"
        ],
        "operationId": "patchCioRatingItem",
        "summary": "Updates the CioRating resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CioRating resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CioRating:jsonld"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CioRating-readItem_readItemSubRes_write"
              }
            }
          },
          "description": "The updated CioRating resource"
        }
      },
      "delete": {
        "tags": [
          "CioRating"
        ],
        "operationId": "deleteCioRatingItem",
        "summary": "Removes the CioRating resource.",
        "responses": {
          "204": {
            "description": "CioRating resource deleted"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/v1/services/{service}/contracts": {
      "get": {
        "tags": [
          "Contract"
        ],
        "operationId": "getContractCollection",
        "summary": "Retrieves the collection of Contract resources.",
        "responses": {
          "200": {
            "description": "Contract collection response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contract:jsonld-read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Contract"
        ],
        "operationId": "postContractCollection",
        "summary": "Creates a Contract resource.",
        "responses": {
          "201": {
            "description": "Contract resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract:jsonld"
                }
              }
            },
            "links": {
              "GetContractItem": {
                "parameters": {
                  "agencyId": "$response.body#/agencyId"
                },
                "operationId": "getContractItem",
                "description": "The `agencyId` value returned in the response can be used as the `agencyId` parameter in `GET /v1/services/{service}/contracts/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Contract:jsonld-write"
              }
            }
          },
          "description": "The new Contract resource"
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/v1/services/{service}/contracts/{id}": {
      "get": {
        "tags": [
          "Contract"
        ],
        "operationId": "getContractItem",
        "summary": "Retrieves a Contract resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contract resource response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract:jsonld-readItem_readItemSubRes"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contract"
        ],
        "operationId": "putContractItem",
        "summary": "Replaces the Contract resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contract resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract:jsonld"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Contract:jsonld-readItem_readItemSubRes_write"
              }
            }
          },
          "description": "The updated Contract resource"
        }
      },
      "patch": {
        "tags": [
          "Contract"
        ],
        "operationId": "patchContractItem",
        "summary": "Updates the Contract resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contract resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract:jsonld"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Contract-readItem_readItemSubRes_write"
              }
            }
          },
          "description": "The updated Contract resource"
        }
      },
      "delete": {
        "tags": [
          "Contract"
        ],
        "operationId": "deleteContractItem",
        "summary": "Removes the Contract resource.",
        "responses": {
          "204": {
            "description": "Contract resource deleted"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/v1/services/{service}/ledgers": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "operationId": "getLedgerCollection",
        "summary": "Retrieves the collection of Ledger resources.",
        "responses": {
          "200": {
            "description": "Ledger collection response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Ledger:jsonld-read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Ledger"
        ],
        "operationId": "postLedgerCollection",
        "summary": "Creates a Ledger resource.",
        "responses": {
          "201": {
            "description": "Ledger resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger:jsonld"
                }
              }
            },
            "links": {
              "GetLedgerItem": {
                "parameters": {
                  "agencyId": "$response.body#/agencyId"
                },
                "operationId": "getLedgerItem",
                "description": "The `agencyId` value returned in the response can be used as the `agencyId` parameter in `GET /v1/services/{service}/ledgers/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Ledger:jsonld-write"
              }
            }
          },
          "description": "The new Ledger resource"
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "description": "<details><summary><b>Validations</b></summary><ul><ul></details>"
      }
    },
    "/v1/services/{service}/ledgers/{id}": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "operationId": "getLedgerItem",
        "summary": "Retrieves a Ledger resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ledger resource response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger:jsonld-read_readItemSubRes"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ledger"
        ],
        "operationId": "putLedgerItem",
        "summary": "Replaces the Ledger resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ledger resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger:jsonld"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Ledger:jsonld-write"
              }
            }
          },
          "description": "The updated Ledger resource"
        },
        "description": "<details><summary><b>Validations</b></summary><ul><ul></details>"
      },
      "patch": {
        "tags": [
          "Ledger"
        ],
        "operationId": "patchLedgerItem",
        "summary": "Updates the Ledger resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ledger resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger:jsonld"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Ledger-write"
              }
            }
          },
          "description": "The updated Ledger resource"
        },
        "description": "<details><summary><b>Validations</b></summary><ul><ul></details>"
      },
      "delete": {
        "tags": [
          "Ledger"
        ],
        "operationId": "deleteLedgerItem",
        "summary": "Removes the Ledger resource.",
        "responses": {
          "204": {
            "description": "Ledger resource deleted"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/v1/services/{service}/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "operationId": "getProjectsCollection",
        "summary": "Retrieves the collection of Projects resources.",
        "responses": {
          "200": {
            "description": "Projects collection response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Projects:jsonld-read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "operationId": "postProjectsCollection",
        "summary": "Creates a Projects resource.",
        "responses": {
          "201": {
            "description": "Projects resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Projects:jsonld"
                }
              }
            },
            "links": {
              "GetProjectsItem": {
                "parameters": {
                  "agencyId": "$response.body#/agencyId"
                },
                "operationId": "getProjectsItem",
                "description": "The `agencyId` value returned in the response can be used as the `agencyId` parameter in `GET /v1/services/{service}/projects/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Projects:jsonld-write"
              }
            }
          },
          "description": "The new Projects resource"
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "description": "<details><summary><b>Validations</b></summary><ul><li>The field {{ field_name }} is a baselined field. A valid rebaseLineId is required to modify this field during PUT and PATCH operations.</li><ul></details>"
      }
    },
    "/v1/services/{service}/projects/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "operationId": "getProjectsItem",
        "summary": "Retrieves a Projects resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Projects resource response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Projects:jsonld-readItem_readItemSubRes"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "operationId": "putProjectsItem",
        "summary": "Replaces the Projects resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Projects resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Projects:jsonld"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Projects:jsonld-write"
              }
            }
          },
          "description": "The updated Projects resource"
        },
        "description": "<details><summary><b>Validations</b></summary><ul><li>The field {{ field_name }} is a baselined field. A valid rebaseLineId is required to modify this field during PUT and PATCH operations.</li><ul></details>"
      },
      "patch": {
        "tags": [
          "Projects"
        ],
        "operationId": "patchProjectsItem",
        "summary": "Updates the Projects resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Projects resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Projects:jsonld"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Projects-write"
              }
            }
          },
          "description": "The updated Projects resource"
        },
        "description": "<details><summary><b>Validations</b></summary><ul><li>The field {{ field_name }} is a baselined field. A valid rebaseLineId is required to modify this field during PUT and PATCH operations.</li><ul></details>"
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "operationId": "deleteProjectsItem",
        "summary": "Removes the Projects resource.",
        "responses": {
          "204": {
            "description": "Projects resource deleted"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/v1/services/{service}/projects/{project}/activities": {
      "get": {
        "tags": [
          "Activity"
        ],
        "operationId": "getActivityCollection",
        "summary": "Retrieves the collection of Activity resources.",
        "responses": {
          "200": {
            "description": "Activity collection response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Activity:jsonld-read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Activity"
        ],
        "operationId": "postActivityCollection",
        "summary": "Creates a Activity resource.",
        "responses": {
          "201": {
            "description": "Activity resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity:jsonld"
                }
              }
            },
            "links": {
              "GetActivityItem": {
                "parameters": {
                  "agencyId": "$response.body#/agencyId"
                },
                "operationId": "getActivityItem",
                "description": "The `agencyId` value returned in the response can be used as the `agencyId` parameter in `GET /v1/services/{service}/projects/{project}/activities/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Activity:jsonld-write"
              }
            }
          },
          "description": "The new Activity resource"
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "description": "<details><summary><b>Validations</b></summary><ul><li>Project activity actual start date {{ start_date }} is a future date. Actual start date must be a date equal to or less than today's date</li><li>Project activity actual start date {{ start_date }} cannot be a date after actual end date {{ end_date }}</li><li>Project activity planned start date {{ start_date }} cannot be a date after planned completion date {{ end_date }}.</li><li>Project activity projected start date {{ start_date }} cannot be a date after projected completion date {{ end_date }}.</li><li>The field {{ field_name }} is a baselined field. A valid rebaseLineId is required to modify this field during PUT and PATCH operations.</li><ul></details>"
      }
    },
    "/v1/services/{service}/projects/{project}/activities/{id}": {
      "get": {
        "tags": [
          "Activity"
        ],
        "operationId": "getActivityItem",
        "summary": "Retrieves a Activity resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity resource response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity:jsonld-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Activity"
        ],
        "operationId": "putActivityItem",
        "summary": "Replaces the Activity resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity:jsonld"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Activity:jsonld-write"
              }
            }
          },
          "description": "The updated Activity resource"
        },
        "description": "<details><summary><b>Validations</b></summary><ul><li>Project activity actual start date {{ start_date }} is a future date. Actual start date must be a date equal to or less than today's date</li><li>Project activity actual start date {{ start_date }} cannot be a date after actual end date {{ end_date }}</li><li>Project activity planned start date {{ start_date }} cannot be a date after planned completion date {{ end_date }}.</li><li>Project activity projected start date {{ start_date }} cannot be a date after projected completion date {{ end_date }}.</li><li>The field {{ field_name }} is a baselined field. A valid rebaseLineId is required to modify this field during PUT and PATCH operations.</li><ul></details>"
      },
      "patch": {
        "tags": [
          "Activity"
        ],
        "operationId": "patchActivityItem",
        "summary": "Updates the Activity resource.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity:jsonld"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/ConstraintViolationList"
                    },
                    "@type": {
                      "type": "string",
                      "example": "ConstraintViolationList"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "Validation Errors Encountered"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Found `2` constraint violations"
                    },
                    "violations": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": "The request could not be understood by the server due to malformed syntax, invalid request framing, or deceptive request routing."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "example": "propertyName"
                            },
                            "message": {
                              "type": "string",
                              "example": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Activity-write"
              }
            }
          },
          "description": "The updated Activity resource"
        },
        "description": "<details><summary><b>Validations</b></summary><ul><li>Project activity actual start date {{ start_date }} is a future date. Actual start date must be a date equal to or less than today's date</li><li>Project activity actual start date {{ start_date }} cannot be a date after actual end date {{ end_date }}</li><li>Project activity planned start date {{ start_date }} cannot be a date after planned completion date {{ end_date }}.</li><li>Project activity projected start date {{ start_date }} cannot be a date after projected completion date {{ end_date }}.</li><li>The field {{ field_name }} is a baselined field. A valid rebaseLineId is required to modify this field during PUT and PATCH operations.</li><ul></details>"
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "operationId": "deleteActivityItem",
        "summary": "Removes the Activity resource.",
        "responses": {
          "204": {
            "description": "Activity resource deleted"
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "NotFoundHttpException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string",
                      "example": "/contexts/Error"
                    },
                    "@type": {
                      "type": "string",
                      "example": "hydra:Error"
                    },
                    "hydra:title": {
                      "type": "string",
                      "example": "InternalServerErrorException"
                    },
                    "hydra:description": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITCOLLECT-VALIDATE-ONLY",
            "description": "No data will be modified when set to `true`",
            "default": "false",
            "in": "header",
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    }
  },
  "security": [
    {
      "oauth": []
    }
  ],
  "components": {
    "schemas": {
      "Activity-write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.<details><summary><b>Validations</b></summary><ul><li>Property '{{ value }}' already exists in IT Collect.\n     *     Please use a different value.</li></ul></details>",
            "type": "string"
          },
          "activityName": {
            "type": "string",
            "format": "string",
            "example": "Authentication Configuration",
            "maxLength": 100,
            "description": "A short description consistent with the critical steps within the Agency project management\nmethodology.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "description": {
            "type": "string",
            "format": "string",
            "example": "Allow relevant users to access CPIC data",
            "maxLength": 250,
            "description": "Brief description of primary goal/outcome the activity is planning to provide for the Investment upon\ncompletion.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "plannedStartDate": {
            "type": "string",
            "format": "date",
            "example": "2020-05-13",
            "description": "The planned start date (YYYY-MM-DD) for the activity. This is a baseline field.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>This value is not a valid date.</li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "plannedEndDate": {
            "type": "string",
            "format": "date",
            "example": "2022-07-30",
            "description": "The planned completion date (YYYY-MM-DD) for the activity. This is a baseline field.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>This value is not a valid date.</li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "projectedStartDate": {
            "type": "string",
            "format": "date",
            "example": "2020-06-15",
            "description": "If the activity has not yet started, enter the current projected start date (YYYY-MM-DD) of\nthe activity.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>This value is not a valid date.</li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "projectedEndDate": {
            "type": "string",
            "format": "date",
            "example": "2022-08-19",
            "description": "If the activity has not yet completed, enter the current planned completion date (YYYY-MM-DD)\nof the activity.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>This value is not a valid date.</li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "actualStartDate": {
            "type": "string",
            "format": "date",
            "example": "2020-06-15",
            "description": "When the activity starts, enter the actual start date (YYYY-MM-DD) here.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>This value is not a valid date.</li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "actualEndDate": {
            "type": "string",
            "format": "date",
            "example": "2022-08-21",
            "description": "When the activity ends, enter the actual completion date (YYYY-MM-DD) here.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>This value is not a valid date.</li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "plannedTotalCost": {
            "type": "number",
            "format": "float",
            "example": 900,
            "description": "The planned total cost for the activity. [$M] Note: For programs that are\nemploying earned value management, Agencies should reflect \"budget at completion\" in the \"Total Costs Planned\"\nColumn 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12. This is a baseline field.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>This value should be positive.</li></ul></details>"
          },
          "actualTotalCost": {
            "type": "number",
            "format": "float",
            "example": 1100,
            "description": "When the activity ends, enter the total actual costs for the activity here."
          },
          "projectedTotalCost": {
            "type": "number",
            "format": "float",
            "example": 1000,
            "description": "if the activity is not yet completed, enter the current planned total cost of the activity. [$M]\nNote: For programs that are employing earned value management, Agencies should reflect \"budget at completion\"\nin the \"Total Costs Planned\" Column 11 and “estimated at completion” in the \"Total Costs Projected\" Column 12.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>This value should be positive.</li></ul></details>"
          },
          "structureId": {
            "type": "string",
            "example": "GSAProj1.1",
            "description": "Agency-specified identifier that indicates the work breakdown structure (WBS) the Agency uses to\nassociate the activity with other activities or a project. Provide this in the format of \"x.x.x.x.x\" where the\nfirst string is the Unique Project ID and each following string (separated by periods) matches the structure ID\nof a parent activity. See below for more guidance about parent and child activities expressed through this\nstructure. [x.x.x.x.x]<details><summary><b>Validations</b></summary><ul><li>Property '{{ value }}' already exists in IT Collect. Please use a different value.</li><li>This value should not be blank.</li><li>The structureId, {{ structureId }} you have provided does not contain a valid {{ missingValue }}. Please provide a proper value</li></ul></details>"
          },
          "rebaseLineId": {
            "type": "string",
            "format": "string",
            "example": "",
            "description": "Baseline fields include:\n\n- plannedStartDate\n- plannedEndDate\n- plannedEndDate\n\nA valid rebaseLineId is required if your are modifying baseline fields.<details><summary><b>Validations</b></summary><ul><li>The rebaseLineId you submitted is invalid: {{rebaseLineId}}. A rebaseLineId must exist and be associated with your agency: {{agency_code}}</li></ul></details>"
          }
        }
      },
      "Activity:jsonld": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "activityName": {
            "type": "string",
            "format": "string",
            "example": "Authentication Configuration",
            "maxLength": 100,
            "description": "A short description consistent with the critical steps within the Agency project management\nmethodology."
          },
          "description": {
            "type": "string",
            "format": "string",
            "example": "Allow relevant users to access CPIC data",
            "maxLength": 250,
            "description": "Brief description of primary goal/outcome the activity is planning to provide for the Investment upon\ncompletion."
          },
          "plannedStartDate": {
            "type": "string",
            "format": "date",
            "example": "2020-05-13",
            "description": "The planned start date (YYYY-MM-DD) for the activity. This is a baseline field.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "projectedStartDate": {
            "type": "string",
            "format": "date",
            "example": "2020-06-15",
            "description": "If the activity has not yet started, enter the current projected start date (YYYY-MM-DD) of\nthe activity.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "actualStartDate": {
            "type": "string",
            "format": "date",
            "example": "2020-06-15",
            "description": "When the activity starts, enter the actual start date (YYYY-MM-DD) here.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "plannedEndDate": {
            "type": "string",
            "format": "date",
            "example": "2022-07-30",
            "description": "The planned completion date (YYYY-MM-DD) for the activity. This is a baseline field.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "projectedEndDate": {
            "type": "string",
            "format": "date",
            "example": "2022-08-19",
            "description": "If the activity has not yet completed, enter the current planned completion date (YYYY-MM-DD)\nof the activity.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "actualEndDate": {
            "type": "string",
            "format": "date",
            "example": "2022-08-21",
            "description": "When the activity ends, enter the actual completion date (YYYY-MM-DD) here.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "plannedTotalCost": {
            "type": "number",
            "format": "float",
            "example": 900,
            "description": "The planned total cost for the activity. [$M] Note: For programs that are\nemploying earned value management, Agencies should reflect \"budget at completion\" in the \"Total Costs Planned\"\nColumn 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12. This is a baseline field."
          },
          "actualTotalCost": {
            "type": "number",
            "format": "float",
            "example": 1100,
            "description": "When the activity ends, enter the total actual costs for the activity here."
          },
          "projectedTotalCost": {
            "type": "number",
            "format": "float",
            "example": 1000,
            "description": "if the activity is not yet completed, enter the current planned total cost of the activity. [$M]\nNote: For programs that are employing earned value management, Agencies should reflect \"budget at completion\"\nin the \"Total Costs Planned\" Column 11 and “estimated at completion” in the \"Total Costs Projected\" Column 12."
          },
          "structureId": {
            "type": "string",
            "example": "GSAProj1.1",
            "description": "Agency-specified identifier that indicates the work breakdown structure (WBS) the Agency uses to\nassociate the activity with other activities or a project. Provide this in the format of \"x.x.x.x.x\" where the\nfirst string is the Unique Project ID and each following string (separated by periods) matches the structure ID\nof a parent activity. See below for more guidance about parent and child activities expressed through this\nstructure. [x.x.x.x.x]"
          },
          "rebaseLines": {
            "type": "array",
            "readOnly": true,
            "description": "A list of associated rebaseLine IDs",
            "items": {
              "type": "string"
            }
          },
          "rebaseLineId": {
            "type": "string",
            "format": "string",
            "example": "",
            "description": "Baseline fields include:\n\n- plannedStartDate\n- plannedEndDate\n- plannedEndDate\n\nA valid rebaseLineId is required if your are modifying baseline fields."
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "activityName",
          "description",
          "plannedStartDate",
          "projectedStartDate",
          "actualStartDate",
          "plannedEndDate",
          "projectedEndDate",
          "actualEndDate",
          "plannedTotalCost",
          "projectedTotalCost",
          "structureId"
        ]
      },
      "Activity:jsonld-read": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "activityName": {
            "type": "string",
            "format": "string",
            "example": "Authentication Configuration",
            "maxLength": 100,
            "description": "A short description consistent with the critical steps within the Agency project management\nmethodology."
          },
          "description": {
            "type": "string",
            "format": "string",
            "example": "Allow relevant users to access CPIC data",
            "maxLength": 250,
            "description": "Brief description of primary goal/outcome the activity is planning to provide for the Investment upon\ncompletion."
          },
          "plannedStartDate": {
            "type": "string",
            "format": "date",
            "example": "2020-05-13",
            "description": "The planned start date (YYYY-MM-DD) for the activity. This is a baseline field.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "plannedEndDate": {
            "type": "string",
            "format": "date",
            "example": "2022-07-30",
            "description": "The planned completion date (YYYY-MM-DD) for the activity. This is a baseline field.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "projectedStartDate": {
            "type": "string",
            "format": "date",
            "example": "2020-06-15",
            "description": "If the activity has not yet started, enter the current projected start date (YYYY-MM-DD) of\nthe activity.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "projectedEndDate": {
            "type": "string",
            "format": "date",
            "example": "2022-08-19",
            "description": "If the activity has not yet completed, enter the current planned completion date (YYYY-MM-DD)\nof the activity.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "actualStartDate": {
            "type": "string",
            "format": "date",
            "example": "2020-06-15",
            "description": "When the activity starts, enter the actual start date (YYYY-MM-DD) here.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "actualEndDate": {
            "type": "string",
            "format": "date",
            "example": "2022-08-21",
            "description": "When the activity ends, enter the actual completion date (YYYY-MM-DD) here.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "plannedTotalCost": {
            "type": "number",
            "format": "float",
            "example": 900,
            "description": "The planned total cost for the activity. [$M] Note: For programs that are\nemploying earned value management, Agencies should reflect \"budget at completion\" in the \"Total Costs Planned\"\nColumn 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12. This is a baseline field."
          },
          "actualTotalCost": {
            "type": "number",
            "format": "float",
            "example": 1100,
            "description": "When the activity ends, enter the total actual costs for the activity here."
          },
          "projectedTotalCost": {
            "type": "number",
            "format": "float",
            "example": 1000,
            "description": "if the activity is not yet completed, enter the current planned total cost of the activity. [$M]\nNote: For programs that are employing earned value management, Agencies should reflect \"budget at completion\"\nin the \"Total Costs Planned\" Column 11 and “estimated at completion” in the \"Total Costs Projected\" Column 12."
          },
          "structureId": {
            "type": "string",
            "example": "GSAProj1.1",
            "description": "Agency-specified identifier that indicates the work breakdown structure (WBS) the Agency uses to\nassociate the activity with other activities or a project. Provide this in the format of \"x.x.x.x.x\" where the\nfirst string is the Unique Project ID and each following string (separated by periods) matches the structure ID\nof a parent activity. See below for more guidance about parent and child activities expressed through this\nstructure. [x.x.x.x.x]"
          },
          "rebaseLines": {
            "type": "array",
            "readOnly": true,
            "description": "A list of associated rebaseLine IDs",
            "items": {
              "type": "string"
            }
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "activityName",
          "description",
          "plannedStartDate",
          "plannedEndDate",
          "projectedStartDate",
          "projectedEndDate",
          "actualStartDate",
          "actualEndDate",
          "plannedTotalCost",
          "projectedTotalCost",
          "structureId"
        ]
      },
      "Activity:jsonld-write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.<details><summary><b>Validations</b></summary><ul><li>Property '{{ value }}' already exists in IT Collect.\n     *     Please use a different value.</li></ul></details>",
            "type": "string"
          },
          "activityName": {
            "type": "string",
            "format": "string",
            "example": "Authentication Configuration",
            "maxLength": 100,
            "description": "A short description consistent with the critical steps within the Agency project management\nmethodology.<details><summary><b>Validations</b></summary><ul><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "description": {
            "type": "string",
            "format": "string",
            "example": "Allow relevant users to access CPIC data",
            "maxLength": 250,
            "description": "Brief description of primary goal/outcome the activity is planning to provide for the Investment upon\ncompletion.<details><summary><b>Validations</b></summary><ul><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "plannedStartDate": {
            "type": "string",
            "format": "date",
            "example": "2020-05-13",
            "description": "The planned start date (YYYY-MM-DD) for the activity. This is a baseline field.<details><summary><b>Validations</b></summary><ul><li>This value is not a valid date.</li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "plannedEndDate": {
            "type": "string",
            "format": "date",
            "example": "2022-07-30",
            "description": "The planned completion date (YYYY-MM-DD) for the activity. This is a baseline field.<details><summary><b>Validations</b></summary><ul><li>This value is not a valid date.</li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "projectedStartDate": {
            "type": "string",
            "format": "date",
            "example": "2020-06-15",
            "description": "If the activity has not yet started, enter the current projected start date (YYYY-MM-DD) of\nthe activity.<details><summary><b>Validations</b></summary><ul><li>This value is not a valid date.</li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "projectedEndDate": {
            "type": "string",
            "format": "date",
            "example": "2022-08-19",
            "description": "If the activity has not yet completed, enter the current planned completion date (YYYY-MM-DD)\nof the activity.<details><summary><b>Validations</b></summary><ul><li>This value is not a valid date.</li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "actualStartDate": {
            "type": "string",
            "format": "date",
            "example": "2020-06-15",
            "description": "When the activity starts, enter the actual start date (YYYY-MM-DD) here.<details><summary><b>Validations</b></summary><ul><li>This value is not a valid date.</li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "actualEndDate": {
            "type": "string",
            "format": "date",
            "example": "2022-08-21",
            "description": "When the activity ends, enter the actual completion date (YYYY-MM-DD) here.<details><summary><b>Validations</b></summary><ul><li>This value is not a valid date.</li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "plannedTotalCost": {
            "type": "number",
            "format": "float",
            "example": 900,
            "description": "The planned total cost for the activity. [$M] Note: For programs that are\nemploying earned value management, Agencies should reflect \"budget at completion\" in the \"Total Costs Planned\"\nColumn 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12. This is a baseline field.<details><summary><b>Validations</b></summary><ul><li>This value should be positive.</li></ul></details>"
          },
          "actualTotalCost": {
            "type": "number",
            "format": "float",
            "example": 1100,
            "description": "When the activity ends, enter the total actual costs for the activity here."
          },
          "projectedTotalCost": {
            "type": "number",
            "format": "float",
            "example": 1000,
            "description": "if the activity is not yet completed, enter the current planned total cost of the activity. [$M]\nNote: For programs that are employing earned value management, Agencies should reflect \"budget at completion\"\nin the \"Total Costs Planned\" Column 11 and “estimated at completion” in the \"Total Costs Projected\" Column 12.<details><summary><b>Validations</b></summary><ul><li>This value should be positive.</li></ul></details>"
          },
          "structureId": {
            "type": "string",
            "example": "GSAProj1.1",
            "description": "Agency-specified identifier that indicates the work breakdown structure (WBS) the Agency uses to\nassociate the activity with other activities or a project. Provide this in the format of \"x.x.x.x.x\" where the\nfirst string is the Unique Project ID and each following string (separated by periods) matches the structure ID\nof a parent activity. See below for more guidance about parent and child activities expressed through this\nstructure. [x.x.x.x.x]<details><summary><b>Validations</b></summary><ul><li>Property '{{ value }}' already exists in IT Collect. Please use a different value.</li><li>The structureId, {{ structureId }} you have provided does not contain a valid {{ missingValue }}. Please provide a proper value</li></ul></details>"
          },
          "rebaseLineId": {
            "type": "string",
            "format": "string",
            "example": "",
            "description": "Baseline fields include:\n\n- plannedStartDate\n- plannedEndDate\n- plannedEndDate\n\nA valid rebaseLineId is required if your are modifying baseline fields.<details><summary><b>Validations</b></summary><ul><li>The rebaseLineId you submitted is invalid: {{rebaseLineId}}. A rebaseLineId must exist and be associated with your agency: {{agency_code}}</li></ul></details>"
          }
        },
        "required": [
          "activityName",
          "description",
          "plannedStartDate",
          "plannedEndDate",
          "projectedStartDate",
          "projectedEndDate",
          "actualStartDate",
          "actualEndDate",
          "plannedTotalCost",
          "projectedTotalCost",
          "structureId"
        ]
      },
      "AuditDoc:jsonld": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "number",
            "format": "integer",
            "example": "01AN4Z07BY79KA1307SR9X4MV3",
            "description": "Primary key"
          },
          "changedFields": {
            "type": "object",
            "format": "object",
            "description": "The change fields, this is set internally",
            "items": {
              "type": "string"
            }
          },
          "docType": {
            "type": "string",
            "format": "string",
            "example": "App\\Document\\Services",
            "description": "The MongoDb document"
          },
          "sourceId": {
            "type": "number",
            "format": "string",
            "example": "01AN4Z07BY79KA1307SR9X4MV3",
            "description": "The primary key of the source document."
          },
          "parentSourceId": {
            "type": "number",
            "format": "string",
            "example": "01AN4Z07BY79KA1307SR9X4MV3",
            "description": "The primary key of an embedded documents parent document. Only applicable on embedded documents."
          },
          "requestUrl": {
            "type": "string",
            "format": "url",
            "example": "/v1/services",
            "description": "The endpoint the request occurred on."
          },
          "version": {
            "type": "number",
            "format": "integer",
            "example": 1,
            "description": "The version of the document must be greater than or equal to 1"
          },
          "auditUser": {
            "type": "string",
            "format": "email",
            "example": "admin@itcollect.docksal",
            "description": "The user who made the change"
          },
          "auditDateTime": {
            "type": "string",
            "format": "date",
            "example": "2020-01-01",
            "description": "The date/time of the change",
            "externalDocs": {
              "url": "http://schema.org/DateTime"
            }
          },
          "auditAction": {
            "type": "string",
            "format": "string",
            "enum": [
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "description": "The audit action such as POST, PUT, PATCH or DELETE"
          },
          "document": {
            "type": "object",
            "format": "object",
            "description": "Full version of the document minus child documents, this is set internally.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "docType",
          "auditAction"
        ]
      },
      "AuditDoc:jsonld-read_readItem_rebaseline-readItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "document": {
            "type": "object",
            "format": "object",
            "description": "Full version of the document minus child documents, this is set internally.",
            "items": {
              "type": "string"
            }
          },
          "changedFields": {
            "type": "object",
            "format": "object",
            "description": "The change fields, this is set internally",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CioRating-readItem_readItemSubRes_write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "rating": {
            "type": "number",
            "format": "integer",
            "example": 5,
            "minimum": 1,
            "maximum": 5,
            "description": "CIO’s best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n1 represents the lowest possible score and 5 represent the highest possible score."
          },
          "comment": {
            "type": "string",
            "format": "string",
            "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
            "description": "Explanation and/or additional details regarding this reported value"
          },
          "date": {
            "type": "date",
            "format": "string",
            "example": "2020-10-01",
            "description": "Provide the date of CIO Evaluation",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "rating",
          "comment",
          "date"
        ]
      },
      "CioRating:jsonld": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "rating": {
            "type": "number",
            "format": "integer",
            "example": 5,
            "minimum": 1,
            "maximum": 5,
            "description": "CIO’s best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n1 represents the lowest possible score and 5 represent the highest possible score."
          },
          "comment": {
            "type": "string",
            "format": "string",
            "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
            "description": "Explanation and/or additional details regarding this reported value"
          },
          "date": {
            "type": "date",
            "format": "string",
            "example": "2020-10-01",
            "description": "Provide the date of CIO Evaluation",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "rating",
          "comment",
          "date"
        ]
      },
      "CioRating:jsonld-read": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "rating": {
            "type": "number",
            "format": "integer",
            "example": 5,
            "minimum": 1,
            "maximum": 5,
            "description": "CIO’s best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n1 represents the lowest possible score and 5 represent the highest possible score."
          },
          "comment": {
            "type": "string",
            "format": "string",
            "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
            "description": "Explanation and/or additional details regarding this reported value"
          },
          "date": {
            "type": "date",
            "format": "string",
            "example": "2020-10-01",
            "description": "Provide the date of CIO Evaluation",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "rating",
          "comment",
          "date"
        ]
      },
      "CioRating:jsonld-readItem_readItemSubRes": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "rating": {
            "type": "number",
            "format": "integer",
            "example": 5,
            "minimum": 1,
            "maximum": 5,
            "description": "CIO’s best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n1 represents the lowest possible score and 5 represent the highest possible score."
          },
          "comment": {
            "type": "string",
            "format": "string",
            "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
            "description": "Explanation and/or additional details regarding this reported value"
          },
          "date": {
            "type": "date",
            "format": "string",
            "example": "2020-10-01",
            "description": "Provide the date of CIO Evaluation",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "rating",
          "comment",
          "date"
        ]
      },
      "CioRating:jsonld-readItem_readItemSubRes_write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "rating": {
            "type": "number",
            "format": "integer",
            "example": 5,
            "minimum": 1,
            "maximum": 5,
            "description": "CIO’s best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n1 represents the lowest possible score and 5 represent the highest possible score."
          },
          "comment": {
            "type": "string",
            "format": "string",
            "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
            "description": "Explanation and/or additional details regarding this reported value"
          },
          "date": {
            "type": "date",
            "format": "string",
            "example": "2020-10-01",
            "description": "Provide the date of CIO Evaluation",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "rating",
          "comment",
          "date"
        ]
      },
      "CioRating:jsonld-write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.<details><summary><b>Validations</b></summary><ul><li>Property '{{ value }}' already exists in IT Collect.\n     *     Please use a different value.</li></ul></details>",
            "type": "string"
          },
          "rating": {
            "type": "number",
            "format": "integer",
            "example": 5,
            "minimum": 1,
            "maximum": 5,
            "description": "CIO’s best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n1 represents the lowest possible score and 5 represent the highest possible score.<details><summary><b>Validations</b></summary><ul><li>One of the following Range errors: <br/> 1) This value should be {{ limit }} or more.. <br/> 2) This value should be {{ limit }} or less.. <br/> 3) This value should be a valid number.. <br/> 4) Rating should be greater than or equal to 1 or, less than or equal to 5. <br/></li></ul></details>"
          },
          "comment": {
            "type": "string",
            "format": "string",
            "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
            "description": "Explanation and/or additional details regarding this reported value<details><summary><b>Validations</b></summary><ul><li>Comment must not exceed {{ limit }} characters. Current length: {{ length }}.</li></ul></details>"
          },
          "date": {
            "type": "date",
            "format": "string",
            "example": "2020-10-01",
            "description": "Provide the date of CIO Evaluation<details><summary><b>Validations</b></summary><ul><li>This value is not a valid date.</li><li>The date {{value}} entered is a future date. The date should be current or before today's date: {{now}}.</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          }
        },
        "required": [
          "rating",
          "comment",
          "date"
        ]
      },
      "Contract-readItem_readItemSubRes_write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "PIID": {
            "type": "string",
            "format": "string",
            "example": "IT-00-000-00",
            "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
          },
          "referencePIID": {
            "type": "string",
            "format": "string",
            "example": "IT-123-000",
            "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c."
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "PIID"
        ]
      },
      "Contract:jsonld": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "PIID": {
            "type": "string",
            "format": "string",
            "example": "IT-00-000-00",
            "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
          },
          "referencePIID": {
            "type": "string",
            "format": "string",
            "example": "IT-123-000",
            "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c."
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "PIID"
        ]
      },
      "Contract:jsonld-read": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "PIID": {
            "type": "string",
            "format": "string",
            "example": "IT-00-000-00",
            "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
          },
          "referencePIID": {
            "type": "string",
            "format": "string",
            "example": "IT-123-000",
            "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c."
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "PIID"
        ]
      },
      "Contract:jsonld-readItem_readItemSubRes": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "PIID": {
            "type": "string",
            "format": "string",
            "example": "IT-00-000-00",
            "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
          },
          "referencePIID": {
            "type": "string",
            "format": "string",
            "example": "IT-123-000",
            "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c."
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "PIID"
        ]
      },
      "Contract:jsonld-readItem_readItemSubRes_write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "PIID": {
            "type": "string",
            "format": "string",
            "example": "IT-00-000-00",
            "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
          },
          "referencePIID": {
            "type": "string",
            "format": "string",
            "example": "IT-123-000",
            "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c."
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "PIID"
        ]
      },
      "Contract:jsonld-write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.<details><summary><b>Validations</b></summary><ul><li>Property '{{ value }}' already exists in IT Collect.\n     *     Please use a different value.</li></ul></details>",
            "type": "string"
          },
          "PIID": {
            "type": "string",
            "format": "string",
            "example": "IT-00-000-00",
            "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
          },
          "referencePIID": {
            "type": "string",
            "format": "string",
            "example": "IT-123-000",
            "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c."
          }
        },
        "required": [
          "PIID"
        ]
      },
      "Ledger-write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.<details><summary><b>Validations</b></summary><ul><li>Property '{{ value }}' already exists in IT Collect.\n     *     Please use a different value.</li></ul></details>",
            "type": "string"
          },
          "costItem": {
            "type": "string",
            "example": "IT Dashboard Infrastructure Expense",
            "description": "Optional descriptive name detailing the type of funding information provided within  given ledger\nitem"
          },
          "year": {
            "type": "number",
            "format": "year",
            "example": 2022,
            "description": "A Fiscal year associated with the funding in a given ledger item<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>The Fiscal Year format is invalid, the year must be four digit integer formatted: 'YYYY' .</li><li>The Fiscal year: {{fiscalYear}} must occur within +10 or -10 of Budget Year: {{budgetYear}}. Fiscal Year should be more than the past year: {{past}} and less than future Year: {{future}}.</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/DateTime"
            }
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "example": 100,
            "description": "Funding amount for a ledger item<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li></ul></details>"
          },
          "type": {
            "type": "string",
            "enum": [
              "O&M",
              "DME"
            ],
            "example": "O&M",
            "description": "Select either O&M or DME.  <br/>O&M: Operations & Maintenance Costs refers to the expenses required\nto operate and maintain an IT asset that is operating in a production environment.  <br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.<details><summary><b>Validations</b></summary><ul><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "costPool": {
            "type": "string",
            "enum": [
              "Internal Labor",
              "External Labor",
              "Outside Services",
              "Hardware",
              "Software",
              "Facilities & Power",
              "Telecom",
              "Other",
              "Internal Services",
              ""
            ],
            "example": "Outside Services",
            "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council<details><summary><b>Validations</b></summary><ul><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "ITTower": {
            "type": "string",
            "enum": [
              "End User",
              "Application",
              "Delivery",
              "Security & Compliance",
              "IT Management",
              "Data Center",
              "Network",
              "Compute",
              "Storage",
              "Platform",
              "Output",
              ""
            ],
            "example": "Data Center",
            "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council<details><summary><b>Validations</b></summary><ul><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "fundingSource": {
            "type": "string",
            "example": "001-00-9004",
            "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated with a\ngiven ledger item."
          },
          "source": {
            "type": "string",
            "enum": [
              "Internal Funding",
              "Contributions"
            ],
            "example": "Internal Funding",
            "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'<details><summary><b>Validations</b></summary><ul><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "ledgerElementStyle": {
            "type": "string",
            "enum": [
              "Funding Sources Only",
              "TBM Only",
              "All"
            ],
            "example": "TBM Only",
            "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field.<details><summary><b>Validations</b></summary><ul><li>The value you selected is not a valid choice.</li><li>This value should not be blank.</li></ul></details>"
          },
          "rebaseLineId": {
            "type": "string",
            "format": "string",
            "example": "",
            "description": "Baseline fields include:\n\n- isRetired\n\nA valid rebaseLineId is required if your are modifying baseline fields.<details><summary><b>Validations</b></summary><ul><li>The rebaseLineId you submitted is invalid: {{rebaseLineId}}. A rebaseLineId must exist and be associated with your agency: {{agency_code}}</li></ul></details>"
          },
          "isRetired": {
            "type": "bool",
            "example": false,
            "description": "Boolean indicating if the document has been retired"
          }
        }
      },
      "Ledger:jsonld": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "costItem": {
            "type": "string",
            "example": "IT Dashboard Infrastructure Expense",
            "description": "Optional descriptive name detailing the type of funding information provided within  given ledger\nitem"
          },
          "year": {
            "type": "number",
            "format": "year",
            "example": 2022,
            "description": "A Fiscal year associated with the funding in a given ledger item",
            "externalDocs": {
              "url": "http://schema.org/DateTime"
            }
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "example": 100,
            "description": "Funding amount for a ledger item"
          },
          "type": {
            "type": "string",
            "enum": [
              "O&M",
              "DME"
            ],
            "example": "O&M",
            "description": "Select either O&M or DME.  <br/>O&M: Operations & Maintenance Costs refers to the expenses required\nto operate and maintain an IT asset that is operating in a production environment.  <br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle."
          },
          "costPool": {
            "type": "string",
            "enum": [
              "Internal Labor",
              "External Labor",
              "Outside Services",
              "Hardware",
              "Software",
              "Facilities & Power",
              "Telecom",
              "Other",
              "Internal Services",
              ""
            ],
            "example": "Outside Services",
            "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
          },
          "ITTower": {
            "type": "string",
            "enum": [
              "End User",
              "Application",
              "Delivery",
              "Security & Compliance",
              "IT Management",
              "Data Center",
              "Network",
              "Compute",
              "Storage",
              "Platform",
              "Output",
              ""
            ],
            "example": "Data Center",
            "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
          },
          "timePeriodId": {
            "readOnly": true,
            "type": "string"
          },
          "budgetYear": {
            "readOnly": true,
            "type": "integer",
            "nullable": true
          },
          "fundingSource": {
            "type": "string",
            "example": "001-00-9004",
            "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated with a\ngiven ledger item."
          },
          "source": {
            "type": "string",
            "enum": [
              "Internal Funding",
              "Contributions"
            ],
            "example": "Internal Funding",
            "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'"
          },
          "ledgerElementStyle": {
            "type": "string",
            "enum": [
              "Funding Sources Only",
              "TBM Only",
              "All"
            ],
            "example": "TBM Only",
            "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field."
          },
          "isMasked": {
            "type": "bool",
            "example": true,
            "readOnly": true,
            "description": "A readonly boolean indicating whether the document is masked from the public."
          },
          "rebaseLineId": {
            "type": "string",
            "format": "string",
            "example": "",
            "description": "Baseline fields include:\n\n- isRetired\n\nA valid rebaseLineId is required if your are modifying baseline fields."
          },
          "rebaseLines": {
            "type": "array",
            "readOnly": true,
            "description": "A list of associated rebaseLine IDs",
            "items": {
              "type": "string"
            }
          },
          "isRetired": {
            "type": "bool",
            "example": false,
            "description": "Boolean indicating if the document has been retired"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "year",
          "amount",
          "ledgerElementStyle"
        ]
      },
      "Ledger:jsonld-read": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "costItem": {
            "type": "string",
            "example": "IT Dashboard Infrastructure Expense",
            "description": "Optional descriptive name detailing the type of funding information provided within  given ledger\nitem"
          },
          "year": {
            "type": "number",
            "format": "year",
            "example": 2022,
            "description": "A Fiscal year associated with the funding in a given ledger item",
            "externalDocs": {
              "url": "http://schema.org/DateTime"
            }
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "example": 100,
            "description": "Funding amount for a ledger item"
          },
          "type": {
            "type": "string",
            "enum": [
              "O&M",
              "DME"
            ],
            "example": "O&M",
            "description": "Select either O&M or DME.  <br/>O&M: Operations & Maintenance Costs refers to the expenses required\nto operate and maintain an IT asset that is operating in a production environment.  <br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle."
          },
          "costPool": {
            "type": "string",
            "enum": [
              "Internal Labor",
              "External Labor",
              "Outside Services",
              "Hardware",
              "Software",
              "Facilities & Power",
              "Telecom",
              "Other",
              "Internal Services",
              ""
            ],
            "example": "Outside Services",
            "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
          },
          "ITTower": {
            "type": "string",
            "enum": [
              "End User",
              "Application",
              "Delivery",
              "Security & Compliance",
              "IT Management",
              "Data Center",
              "Network",
              "Compute",
              "Storage",
              "Platform",
              "Output",
              ""
            ],
            "example": "Data Center",
            "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
          },
          "fundingSource": {
            "type": "string",
            "example": "001-00-9004",
            "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated with a\ngiven ledger item."
          },
          "source": {
            "type": "string",
            "enum": [
              "Internal Funding",
              "Contributions"
            ],
            "example": "Internal Funding",
            "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'"
          },
          "ledgerElementStyle": {
            "type": "string",
            "enum": [
              "Funding Sources Only",
              "TBM Only",
              "All"
            ],
            "example": "TBM Only",
            "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field."
          },
          "rebaseLines": {
            "type": "array",
            "readOnly": true,
            "description": "A list of associated rebaseLine IDs",
            "items": {
              "type": "string"
            }
          },
          "isMasked": {
            "type": "bool",
            "example": true,
            "description": "A readonly boolean indicating whether the document is masked from the public."
          },
          "isRetired": {
            "type": "bool",
            "example": false,
            "description": "Boolean indicating if the document has been retired"
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "year",
          "amount",
          "ledgerElementStyle"
        ]
      },
      "Ledger:jsonld-readItem_readItemSubRes": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "rebaseLines": {
            "type": "array",
            "readOnly": true,
            "description": "A list of associated rebaseLine IDs",
            "items": {
              "type": "string"
            }
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        }
      },
      "Ledger:jsonld-read_readItemSubRes": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "costItem": {
            "type": "string",
            "example": "IT Dashboard Infrastructure Expense",
            "description": "Optional descriptive name detailing the type of funding information provided within  given ledger\nitem"
          },
          "year": {
            "type": "number",
            "format": "year",
            "example": 2022,
            "description": "A Fiscal year associated with the funding in a given ledger item",
            "externalDocs": {
              "url": "http://schema.org/DateTime"
            }
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "example": 100,
            "description": "Funding amount for a ledger item"
          },
          "type": {
            "type": "string",
            "enum": [
              "O&M",
              "DME"
            ],
            "example": "O&M",
            "description": "Select either O&M or DME.  <br/>O&M: Operations & Maintenance Costs refers to the expenses required\nto operate and maintain an IT asset that is operating in a production environment.  <br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle."
          },
          "costPool": {
            "type": "string",
            "enum": [
              "Internal Labor",
              "External Labor",
              "Outside Services",
              "Hardware",
              "Software",
              "Facilities & Power",
              "Telecom",
              "Other",
              "Internal Services",
              ""
            ],
            "example": "Outside Services",
            "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
          },
          "ITTower": {
            "type": "string",
            "enum": [
              "End User",
              "Application",
              "Delivery",
              "Security & Compliance",
              "IT Management",
              "Data Center",
              "Network",
              "Compute",
              "Storage",
              "Platform",
              "Output",
              ""
            ],
            "example": "Data Center",
            "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
          },
          "fundingSource": {
            "type": "string",
            "example": "001-00-9004",
            "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated with a\ngiven ledger item."
          },
          "source": {
            "type": "string",
            "enum": [
              "Internal Funding",
              "Contributions"
            ],
            "example": "Internal Funding",
            "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'"
          },
          "ledgerElementStyle": {
            "type": "string",
            "enum": [
              "Funding Sources Only",
              "TBM Only",
              "All"
            ],
            "example": "TBM Only",
            "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field."
          },
          "rebaseLines": {
            "type": "array",
            "readOnly": true,
            "description": "A list of associated rebaseLine IDs",
            "items": {
              "type": "string"
            }
          },
          "isMasked": {
            "type": "bool",
            "example": true,
            "description": "A readonly boolean indicating whether the document is masked from the public."
          },
          "isRetired": {
            "type": "bool",
            "example": false,
            "description": "Boolean indicating if the document has been retired"
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "year",
          "amount",
          "ledgerElementStyle"
        ]
      },
      "Ledger:jsonld-write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.<details><summary><b>Validations</b></summary><ul><li>Property '{{ value }}' already exists in IT Collect.\n     *     Please use a different value.</li></ul></details>",
            "type": "string"
          },
          "costItem": {
            "type": "string",
            "example": "IT Dashboard Infrastructure Expense",
            "description": "Optional descriptive name detailing the type of funding information provided within  given ledger\nitem"
          },
          "year": {
            "type": "number",
            "format": "year",
            "example": 2022,
            "description": "A Fiscal year associated with the funding in a given ledger item<details><summary><b>Validations</b></summary><ul><li>The Fiscal Year format is invalid, the year must be four digit integer formatted: 'YYYY' .</li><li>The Fiscal year: {{fiscalYear}} must occur within +10 or -10 of Budget Year: {{budgetYear}}. Fiscal Year should be more than the past year: {{past}} and less than future Year: {{future}}.</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/DateTime"
            }
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "example": 100,
            "description": "Funding amount for a ledger item"
          },
          "type": {
            "type": "string",
            "enum": [
              "O&M",
              "DME"
            ],
            "example": "O&M",
            "description": "Select either O&M or DME.  <br/>O&M: Operations & Maintenance Costs refers to the expenses required\nto operate and maintain an IT asset that is operating in a production environment.  <br/>DME: Development,\nModernization, and Enhancement refers to projects and activities leading to new IT assets/systems, as well as\nprojects and activities that change or modify existing IT assets to substantively improve capability or\nperformance, implement legislative or regulatory requirements, or meet an Agency leadership request. DME activity\nmay occur at any time during a program’s life cycle.<details><summary><b>Validations</b></summary><ul><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "costPool": {
            "type": "string",
            "enum": [
              "Internal Labor",
              "External Labor",
              "Outside Services",
              "Hardware",
              "Software",
              "Facilities & Power",
              "Telecom",
              "Other",
              "Internal Services",
              ""
            ],
            "example": "Outside Services",
            "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council<details><summary><b>Validations</b></summary><ul><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "ITTower": {
            "type": "string",
            "enum": [
              "End User",
              "Application",
              "Delivery",
              "Security & Compliance",
              "IT Management",
              "Data Center",
              "Network",
              "Compute",
              "Storage",
              "Platform",
              "Output",
              ""
            ],
            "example": "Data Center",
            "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council<details><summary><b>Validations</b></summary><ul><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "fundingSource": {
            "type": "string",
            "example": "001-00-9004",
            "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated with a\ngiven ledger item."
          },
          "source": {
            "type": "string",
            "enum": [
              "Internal Funding",
              "Contributions"
            ],
            "example": "Internal Funding",
            "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'<details><summary><b>Validations</b></summary><ul><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "ledgerElementStyle": {
            "type": "string",
            "enum": [
              "Funding Sources Only",
              "TBM Only",
              "All"
            ],
            "example": "TBM Only",
            "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field.<details><summary><b>Validations</b></summary><ul><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "rebaseLineId": {
            "type": "string",
            "format": "string",
            "example": "",
            "description": "Baseline fields include:\n\n- isRetired\n\nA valid rebaseLineId is required if your are modifying baseline fields.<details><summary><b>Validations</b></summary><ul><li>The rebaseLineId you submitted is invalid: {{rebaseLineId}}. A rebaseLineId must exist and be associated with your agency: {{agency_code}}</li></ul></details>"
          },
          "isRetired": {
            "type": "bool",
            "example": false,
            "description": "Boolean indicating if the document has been retired"
          }
        },
        "required": [
          "year",
          "amount",
          "ledgerElementStyle"
        ]
      },
      "Projects-write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.<details><summary><b>Validations</b></summary><ul><li>Property '{{ value }}' already exists in IT Collect.\n     *     Please use a different value.</li></ul></details>",
            "type": "string"
          },
          "projectId": {
            "type": "string",
            "format": "string",
            "example": "GSAProj1",
            "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li></ul></details>"
          },
          "projectName": {
            "type": "string",
            "format": "string",
            "example": "API Submissions Development",
            "maxLength": 100,
            "description": "Name used by the Agency to refer specifically to the project.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "projectGoal": {
            "type": "string",
            "format": "string",
            "example": "Develop a mechanism to collect CPIC data",
            "maxLength": 250,
            "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment\nupon completion. This field is masked from public view.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2020-08-15",
            "description": "Planned start date [YYYY-MM-DD] of in-progress projects or planned start of projects that have not\nyet begun (may be before the current FY or activities listed in Table C.2). Modifying this field via PUT or\nPATCH operations will require a rebaseLineId.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>This value is not a valid date.</li><li>The project's Start Date cannot exceed the Completion Date. The Start Date is \"%startDate%\". The End Date is \"%endDate%\" </li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2020-11-20",
            "description": "Planned date [YYYY-MM-DD] of completion of in-progress projects or actual completion date of projects\nthat have been completed (may be after BY or completion date of activities listed in activities Table C.2).\nModifying this field via PUT or PATCH operations will require a rebaseLineId.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>This value is not a valid date.</li><li>The project's Start Date cannot exceed the Completion Date. The Start Date is \"%startDate%\". The End Date is \"%endDate%\" </li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "totalCost": {
            "type": "number",
            "format": "float",
            "example": 100,
            "description": "The planned total cost for the activity. This is the baseline value. [$M]  Note: For programs that are\nemploying earned value management, Agencies should reflect \"budget at completion\" in the \"Total Costs Planned\"\nColumn 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12. Modifying this field via PUT\nor PATCH operations will require a rebaseLineId.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li></ul></details>"
          },
          "softwareProject": {
            "type": "string",
            "enum": [
              "Yes",
              "No"
            ],
            "example": "Yes",
            "description": "<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "rebaseLineId": {
            "type": "string",
            "format": "string",
            "example": "",
            "description": "Baseline fields include:\n\n- startDate\n- endDate\n- totalCost\n\nA valid rebaseLineId is required if your are modifying baseline fields.<details><summary><b>Validations</b></summary><ul><li>The rebaseLineId you submitted is invalid: {{rebaseLineId}}. A rebaseLineId must exist and be associated with your agency: {{agency_code}}</li></ul></details>"
          },
          "id": {
            "description": "<details><summary><b>Validations</b></summary><ul><li>Property \"{{ property }}\" with value \"{{ value }}\" is already in use.  The property \"{{ property }}\" must be unique.</li></ul></details>"
          }
        }
      },
      "Projects:jsonld": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "projectId": {
            "type": "string",
            "format": "string",
            "example": "GSAProj1",
            "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
          },
          "projectName": {
            "type": "string",
            "format": "string",
            "example": "API Submissions Development",
            "maxLength": 100,
            "description": "Name used by the Agency to refer specifically to the project."
          },
          "projectGoal": {
            "type": "string",
            "format": "string",
            "example": "Develop a mechanism to collect CPIC data",
            "maxLength": 250,
            "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment\nupon completion. This field is masked from public view."
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2020-08-15",
            "description": "Planned start date [YYYY-MM-DD] of in-progress projects or planned start of projects that have not\nyet begun (may be before the current FY or activities listed in Table C.2). Modifying this field via PUT or\nPATCH operations will require a rebaseLineId.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2020-11-20",
            "description": "Planned date [YYYY-MM-DD] of completion of in-progress projects or actual completion date of projects\nthat have been completed (may be after BY or completion date of activities listed in activities Table C.2).\nModifying this field via PUT or PATCH operations will require a rebaseLineId.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "totalCost": {
            "type": "number",
            "format": "float",
            "example": 100,
            "description": "The planned total cost for the activity. This is the baseline value. [$M]  Note: For programs that are\nemploying earned value management, Agencies should reflect \"budget at completion\" in the \"Total Costs Planned\"\nColumn 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12. Modifying this field via PUT\nor PATCH operations will require a rebaseLineId."
          },
          "softwareProject": {
            "type": "string",
            "enum": [
              "Yes",
              "No"
            ],
            "example": "Yes"
          },
          "activities": {
            "readOnly": true,
            "description": "Embedded Project Objects",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "rebaseLines": {
            "type": "array",
            "readOnly": true,
            "description": "A list of associated rebaseLine IDs",
            "items": {
              "type": "string"
            }
          },
          "rebaseLineId": {
            "type": "string",
            "format": "string",
            "example": "",
            "description": "Baseline fields include:\n\n- startDate\n- endDate\n- totalCost\n\nA valid rebaseLineId is required if your are modifying baseline fields."
          },
          "isMasked": {
            "type": "bool",
            "example": true,
            "readOnly": true,
            "description": "A readonly boolean indicating whether the document is masked from the public."
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "projectId",
          "projectName",
          "projectGoal",
          "startDate",
          "endDate",
          "totalCost",
          "softwareProject"
        ]
      },
      "Projects:jsonld-read": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "projectId": {
            "type": "string",
            "format": "string",
            "example": "GSAProj1",
            "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
          },
          "projectName": {
            "type": "string",
            "format": "string",
            "example": "API Submissions Development",
            "maxLength": 100,
            "description": "Name used by the Agency to refer specifically to the project."
          },
          "projectGoal": {
            "type": "string",
            "format": "string",
            "example": "Develop a mechanism to collect CPIC data",
            "maxLength": 250,
            "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment\nupon completion. This field is masked from public view."
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2020-08-15",
            "description": "Planned start date [YYYY-MM-DD] of in-progress projects or planned start of projects that have not\nyet begun (may be before the current FY or activities listed in Table C.2). Modifying this field via PUT or\nPATCH operations will require a rebaseLineId.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2020-11-20",
            "description": "Planned date [YYYY-MM-DD] of completion of in-progress projects or actual completion date of projects\nthat have been completed (may be after BY or completion date of activities listed in activities Table C.2).\nModifying this field via PUT or PATCH operations will require a rebaseLineId.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "totalCost": {
            "type": "number",
            "format": "float",
            "example": 100,
            "description": "The planned total cost for the activity. This is the baseline value. [$M]  Note: For programs that are\nemploying earned value management, Agencies should reflect \"budget at completion\" in the \"Total Costs Planned\"\nColumn 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12. Modifying this field via PUT\nor PATCH operations will require a rebaseLineId."
          },
          "softwareProject": {
            "type": "string",
            "enum": [
              "Yes",
              "No"
            ],
            "example": "Yes"
          },
          "rebaseLines": {
            "type": "array",
            "readOnly": true,
            "description": "A list of associated rebaseLine IDs",
            "items": {
              "type": "string"
            }
          },
          "isMasked": {
            "type": "bool",
            "example": true,
            "description": "A readonly boolean indicating whether the document is masked from the public."
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "projectId",
          "projectName",
          "projectGoal",
          "startDate",
          "endDate",
          "totalCost",
          "softwareProject"
        ]
      },
      "Projects:jsonld-readItem_readItemSubRes": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "projectId": {
            "type": "string",
            "format": "string",
            "example": "GSAProj1",
            "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
          },
          "projectName": {
            "type": "string",
            "format": "string",
            "example": "API Submissions Development",
            "maxLength": 100,
            "description": "Name used by the Agency to refer specifically to the project."
          },
          "projectGoal": {
            "type": "string",
            "format": "string",
            "example": "Develop a mechanism to collect CPIC data",
            "maxLength": 250,
            "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment\nupon completion. This field is masked from public view."
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2020-08-15",
            "description": "Planned start date [YYYY-MM-DD] of in-progress projects or planned start of projects that have not\nyet begun (may be before the current FY or activities listed in Table C.2). Modifying this field via PUT or\nPATCH operations will require a rebaseLineId.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2020-11-20",
            "description": "Planned date [YYYY-MM-DD] of completion of in-progress projects or actual completion date of projects\nthat have been completed (may be after BY or completion date of activities listed in activities Table C.2).\nModifying this field via PUT or PATCH operations will require a rebaseLineId.",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "totalCost": {
            "type": "number",
            "format": "float",
            "example": 100,
            "description": "The planned total cost for the activity. This is the baseline value. [$M]  Note: For programs that are\nemploying earned value management, Agencies should reflect \"budget at completion\" in the \"Total Costs Planned\"\nColumn 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12. Modifying this field via PUT\nor PATCH operations will require a rebaseLineId."
          },
          "softwareProject": {
            "type": "string",
            "enum": [
              "Yes",
              "No"
            ],
            "example": "Yes"
          },
          "rebaseLines": {
            "type": "array",
            "readOnly": true,
            "description": "A list of associated rebaseLine IDs",
            "items": {
              "type": "string"
            }
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "projectId",
          "projectName",
          "projectGoal",
          "startDate",
          "endDate",
          "totalCost",
          "softwareProject"
        ]
      },
      "Projects:jsonld-write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.<details><summary><b>Validations</b></summary><ul><li>Property '{{ value }}' already exists in IT Collect.\n     *     Please use a different value.</li></ul></details>",
            "type": "string"
          },
          "projectId": {
            "type": "string",
            "format": "string",
            "example": "GSAProj1",
            "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
          },
          "projectName": {
            "type": "string",
            "format": "string",
            "example": "API Submissions Development",
            "maxLength": 100,
            "description": "Name used by the Agency to refer specifically to the project.<details><summary><b>Validations</b></summary><ul><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "projectGoal": {
            "type": "string",
            "format": "string",
            "example": "Develop a mechanism to collect CPIC data",
            "maxLength": 250,
            "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment\nupon completion. This field is masked from public view.<details><summary><b>Validations</b></summary><ul><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2020-08-15",
            "description": "Planned start date [YYYY-MM-DD] of in-progress projects or planned start of projects that have not\nyet begun (may be before the current FY or activities listed in Table C.2). Modifying this field via PUT or\nPATCH operations will require a rebaseLineId.<details><summary><b>Validations</b></summary><ul><li>This value is not a valid date.</li><li>The project's Start Date cannot exceed the Completion Date. The Start Date is \"%startDate%\". The End Date is \"%endDate%\" </li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2020-11-20",
            "description": "Planned date [YYYY-MM-DD] of completion of in-progress projects or actual completion date of projects\nthat have been completed (may be after BY or completion date of activities listed in activities Table C.2).\nModifying this field via PUT or PATCH operations will require a rebaseLineId.<details><summary><b>Validations</b></summary><ul><li>This value is not a valid date.</li><li>The project's Start Date cannot exceed the Completion Date. The Start Date is \"%startDate%\". The End Date is \"%endDate%\" </li><li>ActivityCompletionDate</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "totalCost": {
            "type": "number",
            "format": "float",
            "example": 100,
            "description": "The planned total cost for the activity. This is the baseline value. [$M]  Note: For programs that are\nemploying earned value management, Agencies should reflect \"budget at completion\" in the \"Total Costs Planned\"\nColumn 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12. Modifying this field via PUT\nor PATCH operations will require a rebaseLineId."
          },
          "softwareProject": {
            "type": "string",
            "enum": [
              "Yes",
              "No"
            ],
            "example": "Yes",
            "description": "<details><summary><b>Validations</b></summary><ul><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "rebaseLineId": {
            "type": "string",
            "format": "string",
            "example": "",
            "description": "Baseline fields include:\n\n- startDate\n- endDate\n- totalCost\n\nA valid rebaseLineId is required if your are modifying baseline fields.<details><summary><b>Validations</b></summary><ul><li>The rebaseLineId you submitted is invalid: {{rebaseLineId}}. A rebaseLineId must exist and be associated with your agency: {{agency_code}}</li></ul></details>"
          },
          "id": {
            "description": "<details><summary><b>Validations</b></summary><ul><li>Property \"{{ property }}\" with value \"{{ value }}\" is already in use.  The property \"{{ property }}\" must be unique.</li></ul></details>"
          }
        },
        "required": [
          "projectId",
          "projectName",
          "projectGoal",
          "startDate",
          "endDate",
          "totalCost",
          "softwareProject"
        ]
      },
      "Rebaseline-write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "baselineType": {
            "type": "string",
            "format": "numeric",
            "example": "1",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8"
            ],
            "description": "Rebaseline Type.\n- 1: Rebaseline - significant changes in funding level or availability of fund\n- 2: Rebaseline - significant change in contracting\n- 3: Rebaseline - scope and objectives evolve due to incremental or iterative system development\n- 4: Rebaseline - current baseline is no longer useful as a management tool\n- 5: Rebaseline - other reason consistent with agency policy and M-10-27\n- 6: Replan - adding or modifying detail within the overall cost and schedule goals\n- 7: Correction\n- 8: Correction - Metrics Only<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>This value should not be blank.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "baselineDate": {
            "type": "string",
            "format": "date",
            "example": "2020-05-13",
            "description": "Baseline Date (YYYY-MM-DD).<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>This value is not a valid date.</li><li>The date {{value}} entered is a future date. The date should be current or before today's date: {{now}}.</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "agency": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "006",
              "007",
              "009",
              "010",
              "011",
              "012",
              "014",
              "015",
              "016",
              "018",
              "019",
              "020",
              "021",
              "023",
              "024",
              "025",
              "026",
              "027",
              "028",
              "029",
              "100",
              "184",
              "202",
              "393",
              "422",
              "429"
            ],
            "example": "018",
            "description": "The three digit agency code.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "baselineComment": {
            "type": "string",
            "example": "Comment for changes made to baseline type",
            "description": "Baseline Comment<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li></ul></details>"
          }
        }
      },
      "Rebaseline:jsonld": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "baselineType": {
            "type": "string",
            "format": "numeric",
            "example": "1",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8"
            ],
            "description": "Rebaseline Type.\n- 1: Rebaseline - significant changes in funding level or availability of fund\n- 2: Rebaseline - significant change in contracting\n- 3: Rebaseline - scope and objectives evolve due to incremental or iterative system development\n- 4: Rebaseline - current baseline is no longer useful as a management tool\n- 5: Rebaseline - other reason consistent with agency policy and M-10-27\n- 6: Replan - adding or modifying detail within the overall cost and schedule goals\n- 7: Correction\n- 8: Correction - Metrics Only"
          },
          "baselineDate": {
            "type": "string",
            "format": "date",
            "example": "2020-05-13",
            "description": "Baseline Date (YYYY-MM-DD).",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "agency": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "006",
              "007",
              "009",
              "010",
              "011",
              "012",
              "014",
              "015",
              "016",
              "018",
              "019",
              "020",
              "021",
              "023",
              "024",
              "025",
              "026",
              "027",
              "028",
              "029",
              "100",
              "184",
              "202",
              "393",
              "422",
              "429"
            ],
            "example": "018",
            "description": "The three digit agency code."
          },
          "baselineComment": {
            "type": "string",
            "example": "Comment for changes made to baseline type",
            "description": "Baseline Comment"
          },
          "audits": {
            "type": "array",
            "readOnly": true,
            "description": "Stores change fields",
            "items": {
              "$ref": "#/components/schemas/AuditDoc:jsonld"
            }
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "baselineType",
          "baselineDate",
          "agency",
          "baselineComment"
        ]
      },
      "Rebaseline:jsonld-read": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "baselineType": {
            "type": "string",
            "format": "numeric",
            "example": "1",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8"
            ],
            "description": "Rebaseline Type.\n- 1: Rebaseline - significant changes in funding level or availability of fund\n- 2: Rebaseline - significant change in contracting\n- 3: Rebaseline - scope and objectives evolve due to incremental or iterative system development\n- 4: Rebaseline - current baseline is no longer useful as a management tool\n- 5: Rebaseline - other reason consistent with agency policy and M-10-27\n- 6: Replan - adding or modifying detail within the overall cost and schedule goals\n- 7: Correction\n- 8: Correction - Metrics Only"
          },
          "baselineDate": {
            "type": "string",
            "format": "date",
            "example": "2020-05-13",
            "description": "Baseline Date (YYYY-MM-DD).",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "agency": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "006",
              "007",
              "009",
              "010",
              "011",
              "012",
              "014",
              "015",
              "016",
              "018",
              "019",
              "020",
              "021",
              "023",
              "024",
              "025",
              "026",
              "027",
              "028",
              "029",
              "100",
              "184",
              "202",
              "393",
              "422",
              "429"
            ],
            "example": "018",
            "description": "The three digit agency code."
          },
          "baselineComment": {
            "type": "string",
            "example": "Comment for changes made to baseline type",
            "description": "Baseline Comment"
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "baselineType",
          "baselineDate",
          "agency",
          "baselineComment"
        ]
      },
      "Rebaseline:jsonld-read_readItem_rebaseline-readItem": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "baselineType": {
            "type": "string",
            "format": "numeric",
            "example": "1",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8"
            ],
            "description": "Rebaseline Type.\n- 1: Rebaseline - significant changes in funding level or availability of fund\n- 2: Rebaseline - significant change in contracting\n- 3: Rebaseline - scope and objectives evolve due to incremental or iterative system development\n- 4: Rebaseline - current baseline is no longer useful as a management tool\n- 5: Rebaseline - other reason consistent with agency policy and M-10-27\n- 6: Replan - adding or modifying detail within the overall cost and schedule goals\n- 7: Correction\n- 8: Correction - Metrics Only"
          },
          "baselineDate": {
            "type": "string",
            "format": "date",
            "example": "2020-05-13",
            "description": "Baseline Date (YYYY-MM-DD).",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "agency": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "006",
              "007",
              "009",
              "010",
              "011",
              "012",
              "014",
              "015",
              "016",
              "018",
              "019",
              "020",
              "021",
              "023",
              "024",
              "025",
              "026",
              "027",
              "028",
              "029",
              "100",
              "184",
              "202",
              "393",
              "422",
              "429"
            ],
            "example": "018",
            "description": "The three digit agency code."
          },
          "baselineComment": {
            "type": "string",
            "example": "Comment for changes made to baseline type",
            "description": "Baseline Comment"
          },
          "audits": {
            "type": "array",
            "description": "Stores change fields",
            "items": {
              "$ref": "#/components/schemas/AuditDoc:jsonld-read_readItem_rebaseline-readItem"
            }
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "baselineType",
          "baselineDate",
          "agency",
          "baselineComment"
        ]
      },
      "Rebaseline:jsonld-write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "baselineType": {
            "type": "string",
            "format": "numeric",
            "example": "1",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8"
            ],
            "description": "Rebaseline Type.\n- 1: Rebaseline - significant changes in funding level or availability of fund\n- 2: Rebaseline - significant change in contracting\n- 3: Rebaseline - scope and objectives evolve due to incremental or iterative system development\n- 4: Rebaseline - current baseline is no longer useful as a management tool\n- 5: Rebaseline - other reason consistent with agency policy and M-10-27\n- 6: Replan - adding or modifying detail within the overall cost and schedule goals\n- 7: Correction\n- 8: Correction - Metrics Only<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "baselineDate": {
            "type": "string",
            "format": "date",
            "example": "2020-05-13",
            "description": "Baseline Date (YYYY-MM-DD).<details><summary><b>Validations</b></summary><ul><li>This value is not a valid date.</li><li>The date {{value}} entered is a future date. The date should be current or before today's date: {{now}}.</li></ul></details>",
            "externalDocs": {
              "url": "http://schema.org/Date"
            }
          },
          "agency": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "006",
              "007",
              "009",
              "010",
              "011",
              "012",
              "014",
              "015",
              "016",
              "018",
              "019",
              "020",
              "021",
              "023",
              "024",
              "025",
              "026",
              "027",
              "028",
              "029",
              "100",
              "184",
              "202",
              "393",
              "422",
              "429"
            ],
            "example": "018",
            "description": "The three digit agency code.<details><summary><b>Validations</b></summary><ul><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "baselineComment": {
            "type": "string",
            "example": "Comment for changes made to baseline type",
            "description": "Baseline Comment"
          }
        },
        "required": [
          "baselineType",
          "baselineDate",
          "agency",
          "baselineComment"
        ]
      },
      "Services-write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.<details><summary><b>Validations</b></summary><ul><li>Property '{{ value }}' already exists in IT Collect.\n     *     Please use a different value.</li></ul></details>",
            "type": "string"
          },
          "currentUii": {
            "type": "string",
            "format": "string",
            "example": "018-000000123",
            "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key.<details><summary><b>Validations</b></summary><ul><li>Current UII cannot have an empty value</li><li>UII {{ uii }} must match the following format: XXX-xxxxxxxxx. The first three digits represent your Agency code. The last nine digits serve as the Investment's unique identifier</li><li>The Agency Code in UII {{ uii }} must match the submitting agency code {{ agencyCode }}</li><li>Current UII '{{ value }}' already exists in IT Collect.\n     *     Please use the PATCH method to update UII '{{ value }}'</li></ul></details>"
          },
          "agency": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "006",
              "007",
              "009",
              "010",
              "011",
              "012",
              "014",
              "015",
              "016",
              "018",
              "019",
              "020",
              "021",
              "023",
              "024",
              "025",
              "026",
              "027",
              "028",
              "029",
              "100",
              "184",
              "202",
              "393",
              "422",
              "429"
            ],
            "example": "018",
            "description": "The three digit agency code.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "title": {
            "type": "string",
            "format": "string",
            "example": "IT Collect Development",
            "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li></ul></details>"
          },
          "description": {
            "type": "string",
            "format": "string",
            "example": "Sample description of the IT Dashboard modernization process.",
            "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public.<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li></ul></details>"
          },
          "changeInStatus": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08",
              "09",
              "10",
              "11"
            ],
            "example": "11",
            "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:\n\n- 01: Upgraded from non-major to major IT Investment\n- 02: Downgraded from major to non-major IT Investment\n- 03: Split into multiple Investments\n- 04: Consolidation of Investments\n- 05: Reorganization\n- 06: Eliminated by funding\n- 07: Eliminated by split\n- 08: Eliminated by consolidation\n- 09: Eliminated by reorganization\n- 10: New\n- 11: No Change in Status<details><summary><b>Validations</b></summary><ul><li>This value should not be blank.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "changeInStatusDescription": {
            "type": "string",
            "format": "string",
            "example": "New Service",
            "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates."
          },
          "previousUII": {
            "type": "string",
            "format": "string",
            "example": "018-000001234",
            "description": "Previous UII\nThis is the identifier depicting Agency code and unique Investment number used\nto report the Investment in the previous FY 2020 Agency IT Portfolio Summary\nsubmission to OMB. Indicating the UII used for a previous submission\nallows cross-walk and historical analysis spanning FYs. Previous\nUII is mandatory, with the exception of new Investments.<details><summary><b>Validations</b></summary><ul><li>At least one of the following: <br/>1. This value should be blank.<br/>2. Previous UII {{uii}} must correspond with an existing Current UII in the IT Collect database<br/></li></ul></details>"
          },
          "sharedServiceCode": {
            "type": "digit",
            "format": "string",
            "enum": [
              "00",
              "24",
              "48"
            ],
            "example": "00",
            "description": "Shared Services Code, 2 digit - 00, 24, or 48\n\n- 00: Code for all Investments other than those coded “24” or “48.”\n- 24: E-Gov initiatives or an individual Agency's participation in one of the EGov/LoB initiatives listed in\nAppendix B.\n- 48: Any Multi-Agency (Inter- or Intra-Agency) IT collaboration or an individual Agency’s participation\nin one of these initiatives, such as use of a centralized FOIA portal.<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>This value should not be blank.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "sharedServiceId": {
            "type": "digit",
            "format": "string",
            "example": "0024",
            "minLength": 4,
            "maxLength": 4,
            "description": "Shared Services Identifier - 4 digits\nThese four digits are applicable for all Investments with a Shared Services Category of 24 or 48. A code will be\nspecifically assigned for all E-Gov/LoB shared services in Appendix B, while Agencies should assign their own\nfour digit unique codes for Multi-Agency initiatives using the “48” shared services category.\n\nThis code represents the same 4-digit identifier previously provided in the last nine digits of the UII for\nInvestments starting with xxx-99999XXXX.<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>At least one of the following: <br/>1. This value should be blank.<br/>2. One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) Must be 4 digits long. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/><br/></li></ul></details>"
          },
          "missionSupportCategory": {
            "type": "digit",
            "format": "string",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07"
            ],
            "example": "01",
            "externalDocs": {
              "url": "https://ussm.gsa.gov/fibf/"
            },
            "description": "Mission Support Category - 2 digit code - 01, 02, 03, 04, 05, 06, or 07\nThese two digits indicate the category of common Mission Support Services\nInvestments by Federal Integrated Business Framework (FIBF) Service Area(s).\nAll non-Mission Support Services Investments should use Category 01. Mission\nSupport Services Investments may select more than one code where applicable:\n\n- 01: Not Applicable\n- 02: Financial Management\n- 03: Human Resources\n- 04: Procurement\n- 05: Travel / Transportation\n- 06: Grants Management\n- 07: Other<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>This value should not be blank.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "bureauCode": {
            "type": "digit",
            "format": "string",
            "example": "00",
            "minLength": "2",
            "maxLength": "2",
            "description": "Bureau Code (string) - 2 digit code\nThe two digits indicate the bureau code of the Investment (see Appendix C of OMB Circular No. A-11).\nIf this is a department-level or an Agency-wide  activity, use “00” as your bureau code.<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) Required and must be 2 characters long. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "partOfAITPS": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03"
            ],
            "example": "01",
            "description": "Part of AITPS (string) - 2 digit code - 01, 02, or 03\nThese two digits indicate one of the three parts of the Agency IT Portfolio\nSummary, to which the Investment belongs:\n\n- 01: Part 1. IT Investments for Mission Delivery\n- 02: Part 2. IT Investments for Mission Support Services\n- 03: Part 3. IT Investments for IT Infrastructure, IT Security, and IT Management<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>This value should not be blank.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "standardIdCategory": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08",
              "09",
              "10"
            ],
            "example": "01",
            "description": "Standard IT Infrastructure and Management Category\n2 digit code - 01, 02, 03, 04, 05, 06, 07 ,08, 09, or 10\nThese two digits indicate the sub-category of Investments identified as Part 3:\nIT Investments for IT Infrastructure, IT Security, and IT Management. For the\nFY 2021 reporting cycle, the four previous optional Standard Investments\nOutput, Application, Delivery, and Platform will now be required.\n\nAll Part 3 Investments should select one of the following codes other than “01: Not\nApplicable,” while all Part 1 and 2 Investments should select “01: Not Applicable.”\n\n- 01: Not Applicable\n- 02: IT Security and Compliance\n- 03: IT Management\n- 04: Network\n- 05: Data Center and Cloud\n- 06: End User\n- 07: Output\n- 08: Application\n- 09: Delivery\n- 10: Platform<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>This value should not be blank.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "missionSupportArea": {
            "type": "string",
            "format": "numeric",
            "example": "00",
            "minLength": 2,
            "maxLength": 2,
            "description": "Mission Delivery and Management Support Area  - 2 digit code\nThese two digits indicate the mission delivery and management support areas.\nAgencies should assign a unique code for each mission delivery and\nmanagement support area reported.<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) Required and must be 2 digit long. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "investmentType": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05"
            ],
            "example": "01",
            "description": "Type of Investment - 2 digit code - 01, 02, 03, 04, or 05\nThese two digits indicate the type of Investment being reported as follows:\n\n- 01: Major IT Investments\n- 02: Non-major IT Investments\n- 03: IT Migration Investment: The portion of a larger asset and for which there is an existing Business Case\nfor the overall asset. The description of the IT Investment should indicate the UII of the major asset Investment\nof the managing partner.\n- 04: Funding Transfer Investments: These are primarily used to indicate the partner contribution to a Lead\nAgency Investment through inter- or intraAgency transfers. The description of the IT Investment should indicate\nthe UII of the Lead Agency’s Investment.\n- 05: Standard IT Infrastructure Investments in Part 3: IT Infrastructure, IT  Security, IT Management\nInvestments (IT Security and Compliance, IT Management, Network, Data Center and Cloud, End User, Output,\nApplication, Delivery, and Platform).<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>This value should not be blank.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "returnOnInvestment": {
            "type": "string",
            "format": "string",
            "example": "Sample description of a return on an investment.",
            "description": "- Return on investment<details><summary><b>Validations</b></summary><ul><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) Must be less than 3500. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "nssId": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02"
            ],
            "example": "01",
            "description": "National Security Systems Identifier - 2 digit code - 01 or 02\nThese two digits indicate whether the Investment is a National Security System the Federal Information Security\nManagement Act of 2002 (FISMA), 44 U.S.C. 3542(b)(2) as follows:\n\n- 01: Non-National Security System Investment\n- 02: National Security System Investment (these investments will not be publicly viewable on the IT Dashboard)<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>This value should not be blank.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "publicUrls": {
            "type": "array",
            "example": [
              "https://example.gov"
            ],
            "description": "Public URL(s) List any website or digital service that is supported primarily by this Investment.\nSupply an array of strings (URLS).<details><summary><b>Validations</b></summary><ul><li>Public URLs must contain valid URLs. Found {{count}} invalid URL(s): {{urls}}</li></ul></details>",
            "items": {
              "type": "string"
            }
          },
          "serviceArea": {
            "type": "string",
            "format": "numeric",
            "example": "001",
            "minLength": 3,
            "maxLength": 3,
            "description": "Primary service area (string) - 3 digit code\nThis is the three digit code that indicates the predominant business function\nserved by the Investment (not necessarily the Agency’s mission/business).\nBRM version 3.1 contains the current mapping codes.<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) Required and must be 3 digit long. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },"isRetired": {
            "type": "bool",
            "example": false,
            "description": "Boolean indicating if the document has been retired"
          },
          "rebaseLineId": {
            "type": "string",
            "format": "string",
            "example": "",
            "description": "Baseline fields include:\n\n- isRetired\n\nA valid rebaseLineId is required if your are modifying baseline fields.<details><summary><b>Validations</b></summary><ul><li>The rebaseLineId you submitted is invalid: {{rebaseLineId}}. A rebaseLineId must exist and be associated with your agency: {{agency_code}}</li></ul></details>"
          },
          "id": {
            "description": "<details><summary><b>Validations</b></summary><ul><li>Property '{{ value }}' already exists in IT Collect.\n     *     Please use a different value.</li></ul></details>"
          }
        }
      },
      "Services:jsonld": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "contracts": {
            "readOnly": true,
            "description": "Contract Embedded CONTRACTS",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "projects": {
            "readOnly": true,
            "description": "Embed Project Objects",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "cioRatings": {
            "readOnly": true,
            "description": "Embedded CIO Ratings",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "ledgers": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "user": {
            "readOnly": true,
            "description": "the User Object",
            "type": "string"
          },
          "currentUii": {
            "type": "string",
            "format": "string",
            "example": "018-000000123",
            "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
          },
          "title": {
            "type": "string",
            "format": "string",
            "example": "IT Collect Development",
            "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
          },
          "description": {
            "type": "string",
            "format": "string",
            "example": "Sample description of the IT Dashboard modernization process.",
            "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public."
          },
          "agency": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "006",
              "007",
              "009",
              "010",
              "011",
              "012",
              "014",
              "015",
              "016",
              "018",
              "019",
              "020",
              "021",
              "023",
              "024",
              "025",
              "026",
              "027",
              "028",
              "029",
              "100",
              "184",
              "202",
              "393",
              "422",
              "429"
            ],
            "example": "018",
            "description": "The three digit agency code."
          },
          "budgetYear": {
            "readOnly": true,
            "type": "integer",
            "nullable": true
          },
          "changeInStatus": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08",
              "09",
              "10",
              "11"
            ],
            "example": "11",
            "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:\n\n- 01: Upgraded from non-major to major IT Investment\n- 02: Downgraded from major to non-major IT Investment\n- 03: Split into multiple Investments\n- 04: Consolidation of Investments\n- 05: Reorganization\n- 06: Eliminated by funding\n- 07: Eliminated by split\n- 08: Eliminated by consolidation\n- 09: Eliminated by reorganization\n- 10: New\n- 11: No Change in Status"
          },
          "changeInStatusDescription": {
            "type": "string",
            "format": "string",
            "example": "New Service",
            "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates."
          },
          "previousUII": {
            "type": "string",
            "format": "string",
            "example": "018-000001234",
            "description": "Previous UII\nThis is the identifier depicting Agency code and unique Investment number used\nto report the Investment in the previous FY 2020 Agency IT Portfolio Summary\nsubmission to OMB. Indicating the UII used for a previous submission\nallows cross-walk and historical analysis spanning FYs. Previous\nUII is mandatory, with the exception of new Investments."
          },
          "sharedServiceCode": {
            "type": "digit",
            "format": "string",
            "enum": [
              "00",
              "24",
              "48"
            ],
            "example": "00",
            "description": "Shared Services Code, 2 digit - 00, 24, or 48\n\n- 00: Code for all Investments other than those coded “24” or “48.”\n- 24: E-Gov initiatives or an individual Agency's participation in one of the EGov/LoB initiatives listed in\nAppendix B.\n- 48: Any Multi-Agency (Inter- or Intra-Agency) IT collaboration or an individual Agency’s participation\nin one of these initiatives, such as use of a centralized FOIA portal."
          },
          "sharedServiceId": {
            "type": "digit",
            "format": "string",
            "example": "0024",
            "minLength": 4,
            "maxLength": 4,
            "description": "Shared Services Identifier - 4 digits\nThese four digits are applicable for all Investments with a Shared Services Category of 24 or 48. A code will be\nspecifically assigned for all E-Gov/LoB shared services in Appendix B, while Agencies should assign their own\nfour digit unique codes for Multi-Agency initiatives using the “48” shared services category.\n\nThis code represents the same 4-digit identifier previously provided in the last nine digits of the UII for\nInvestments starting with xxx-99999XXXX."
          },
          "missionSupportCategory": {
            "type": "digit",
            "format": "string",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07"
            ],
            "example": "01",
            "externalDocs": {
              "url": "https://ussm.gsa.gov/fibf/"
            },
            "description": "Mission Support Category - 2 digit code - 01, 02, 03, 04, 05, 06, or 07\nThese two digits indicate the category of common Mission Support Services\nInvestments by Federal Integrated Business Framework (FIBF) Service Area(s).\nAll non-Mission Support Services Investments should use Category 01. Mission\nSupport Services Investments may select more than one code where applicable:\n\n- 01: Not Applicable\n- 02: Financial Management\n- 03: Human Resources\n- 04: Procurement\n- 05: Travel / Transportation\n- 06: Grants Management\n- 07: Other"
          },
          "bureauCode": {
            "type": "digit",
            "format": "string",
            "example": "00",
            "minLength": "2",
            "maxLength": "2",
            "description": "Bureau Code (string) - 2 digit code\nThe two digits indicate the bureau code of the Investment (see Appendix C of OMB Circular No. A-11).\nIf this is a department-level or an Agency-wide  activity, use “00” as your bureau code."
          },
          "partOfAITPS": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03"
            ],
            "example": "01",
            "description": "Part of AITPS (string) - 2 digit code - 01, 02, or 03\nThese two digits indicate one of the three parts of the Agency IT Portfolio\nSummary, to which the Investment belongs:\n\n- 01: Part 1. IT Investments for Mission Delivery\n- 02: Part 2. IT Investments for Mission Support Services\n- 03: Part 3. IT Investments for IT Infrastructure, IT Security, and IT Management"
          },
          "standardIdCategory": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08",
              "09",
              "10"
            ],
            "example": "01",
            "description": "Standard IT Infrastructure and Management Category\n2 digit code - 01, 02, 03, 04, 05, 06, 07 ,08, 09, or 10\nThese two digits indicate the sub-category of Investments identified as Part 3:\nIT Investments for IT Infrastructure, IT Security, and IT Management. For the\nFY 2021 reporting cycle, the four previous optional Standard Investments\nOutput, Application, Delivery, and Platform will now be required.\n\nAll Part 3 Investments should select one of the following codes other than “01: Not\nApplicable,” while all Part 1 and 2 Investments should select “01: Not Applicable.”\n\n- 01: Not Applicable\n- 02: IT Security and Compliance\n- 03: IT Management\n- 04: Network\n- 05: Data Center and Cloud\n- 06: End User\n- 07: Output\n- 08: Application\n- 09: Delivery\n- 10: Platform"
          },
          "missionSupportArea": {
            "type": "string",
            "format": "numeric",
            "example": "00",
            "minLength": 2,
            "maxLength": 2,
            "description": "Mission Delivery and Management Support Area  - 2 digit code\nThese two digits indicate the mission delivery and management support areas.\nAgencies should assign a unique code for each mission delivery and\nmanagement support area reported."
          },
          "investmentType": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05"
            ],
            "example": "01",
            "description": "Type of Investment - 2 digit code - 01, 02, 03, 04, or 05\nThese two digits indicate the type of Investment being reported as follows:\n\n- 01: Major IT Investments\n- 02: Non-major IT Investments\n- 03: IT Migration Investment: The portion of a larger asset and for which there is an existing Business Case\nfor the overall asset. The description of the IT Investment should indicate the UII of the major asset Investment\nof the managing partner.\n- 04: Funding Transfer Investments: These are primarily used to indicate the partner contribution to a Lead\nAgency Investment through inter- or intraAgency transfers. The description of the IT Investment should indicate\nthe UII of the Lead Agency’s Investment.\n- 05: Standard IT Infrastructure Investments in Part 3: IT Infrastructure, IT  Security, IT Management\nInvestments (IT Security and Compliance, IT Management, Network, Data Center and Cloud, End User, Output,\nApplication, Delivery, and Platform)."
          },
          "returnOnInvestment": {
            "type": "string",
            "format": "string",
            "example": "Sample description of a return on an investment.",
            "description": "- Return on investment"
          },
          "nssId": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02"
            ],
            "example": "01",
            "description": "National Security Systems Identifier - 2 digit code - 01 or 02\nThese two digits indicate whether the Investment is a National Security System the Federal Information Security\nManagement Act of 2002 (FISMA), 44 U.S.C. 3542(b)(2) as follows:\n\n- 01: Non-National Security System Investment\n- 02: National Security System Investment (these investments will not be publicly viewable on the IT Dashboard)"
          },
          "publicUrls": {
            "type": "array",
            "example": [
              "https://example.gov"
            ],
            "description": "Public URL(s) List any website or digital service that is supported primarily by this Investment.\nSupply an array of strings (URLS).",
            "items": {
              "type": "string"
            }
          },
          "serviceArea": {
            "type": "string",
            "format": "numeric",
            "example": "001",
            "minLength": 3,
            "maxLength": 3,
            "description": "Primary service area (string) - 3 digit code\nThis is the three digit code that indicates the predominant business function\nserved by the Investment (not necessarily the Agency’s mission/business).\nBRM version 3.1 contains the current mapping codes."
          },
          "isMasked": {
            "type": "bool",
            "example": true,
            "readOnly": true,
            "description": "A readonly boolean indicating whether the document is masked from the public."
          },
          "isRetired": {
            "type": "bool",
            "example": false,
            "description": "Boolean indicating if the document has been retired"
          },
          "timePeriodId": {
            "readOnly": true,
            "type": "string"
          },
          "rebaseLineId": {
            "type": "string",
            "format": "string",
            "example": "",
            "description": "Baseline fields include:\n\n- isRetired\n\nA valid rebaseLineId is required if your are modifying baseline fields."
          },
          "rebaseLines": {
            "type": "array",
            "readOnly": true,
            "description": "A list of associated rebaseLine IDs",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "readOnly": true,
            "type": "integer"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "currentUii",
          "title",
          "description",
          "agency",
          "changeInStatus",
          "sharedServiceCode",
          "missionSupportCategory",
          "partOfAITPS",
          "standardIdCategory",
          "investmentType",
          "nssId"
        ]
      },
      "Services:jsonld-read": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "currentUii": {
            "type": "string",
            "format": "string",
            "example": "018-000000123",
            "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
          },
          "agency": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "006",
              "007",
              "009",
              "010",
              "011",
              "012",
              "014",
              "015",
              "016",
              "018",
              "019",
              "020",
              "021",
              "023",
              "024",
              "025",
              "026",
              "027",
              "028",
              "029",
              "100",
              "184",
              "202",
              "393",
              "422",
              "429"
            ],
            "example": "018",
            "description": "The three digit agency code."
          },
          "title": {
            "type": "string",
            "format": "string",
            "example": "IT Collect Development",
            "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
          },
          "description": {
            "type": "string",
            "format": "string",
            "example": "Sample description of the IT Dashboard modernization process.",
            "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public."
          },
          "changeInStatus": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08",
              "09",
              "10",
              "11"
            ],
            "example": "11",
            "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:\n\n- 01: Upgraded from non-major to major IT Investment\n- 02: Downgraded from major to non-major IT Investment\n- 03: Split into multiple Investments\n- 04: Consolidation of Investments\n- 05: Reorganization\n- 06: Eliminated by funding\n- 07: Eliminated by split\n- 08: Eliminated by consolidation\n- 09: Eliminated by reorganization\n- 10: New\n- 11: No Change in Status"
          },
          "changeInStatusDescription": {
            "type": "string",
            "format": "string",
            "example": "New Service",
            "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates."
          },
          "previousUII": {
            "type": "string",
            "format": "string",
            "example": "018-000001234",
            "description": "Previous UII\nThis is the identifier depicting Agency code and unique Investment number used\nto report the Investment in the previous FY 2020 Agency IT Portfolio Summary\nsubmission to OMB. Indicating the UII used for a previous submission\nallows cross-walk and historical analysis spanning FYs. Previous\nUII is mandatory, with the exception of new Investments."
          },
          "sharedServiceCode": {
            "type": "digit",
            "format": "string",
            "enum": [
              "00",
              "24",
              "48"
            ],
            "example": "00",
            "description": "Shared Services Code, 2 digit - 00, 24, or 48\n\n- 00: Code for all Investments other than those coded “24” or “48.”\n- 24: E-Gov initiatives or an individual Agency's participation in one of the EGov/LoB initiatives listed in\nAppendix B.\n- 48: Any Multi-Agency (Inter- or Intra-Agency) IT collaboration or an individual Agency’s participation\nin one of these initiatives, such as use of a centralized FOIA portal."
          },
          "sharedServiceId": {
            "type": "digit",
            "format": "string",
            "example": "0024",
            "minLength": 4,
            "maxLength": 4,
            "description": "Shared Services Identifier - 4 digits\nThese four digits are applicable for all Investments with a Shared Services Category of 24 or 48. A code will be\nspecifically assigned for all E-Gov/LoB shared services in Appendix B, while Agencies should assign their own\nfour digit unique codes for Multi-Agency initiatives using the “48” shared services category.\n\nThis code represents the same 4-digit identifier previously provided in the last nine digits of the UII for\nInvestments starting with xxx-99999XXXX."
          },
          "missionSupportCategory": {
            "type": "digit",
            "format": "string",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07"
            ],
            "example": "01",
            "externalDocs": {
              "url": "https://ussm.gsa.gov/fibf/"
            },
            "description": "Mission Support Category - 2 digit code - 01, 02, 03, 04, 05, 06, or 07\nThese two digits indicate the category of common Mission Support Services\nInvestments by Federal Integrated Business Framework (FIBF) Service Area(s).\nAll non-Mission Support Services Investments should use Category 01. Mission\nSupport Services Investments may select more than one code where applicable:\n\n- 01: Not Applicable\n- 02: Financial Management\n- 03: Human Resources\n- 04: Procurement\n- 05: Travel / Transportation\n- 06: Grants Management\n- 07: Other"
          },
          "bureauCode": {
            "type": "digit",
            "format": "string",
            "example": "00",
            "minLength": "2",
            "maxLength": "2",
            "description": "Bureau Code (string) - 2 digit code\nThe two digits indicate the bureau code of the Investment (see Appendix C of OMB Circular No. A-11).\nIf this is a department-level or an Agency-wide  activity, use “00” as your bureau code."
          },
          "partOfAITPS": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03"
            ],
            "example": "01",
            "description": "Part of AITPS (string) - 2 digit code - 01, 02, or 03\nThese two digits indicate one of the three parts of the Agency IT Portfolio\nSummary, to which the Investment belongs:\n\n- 01: Part 1. IT Investments for Mission Delivery\n- 02: Part 2. IT Investments for Mission Support Services\n- 03: Part 3. IT Investments for IT Infrastructure, IT Security, and IT Management"
          },
          "standardIdCategory": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08",
              "09",
              "10"
            ],
            "example": "01",
            "description": "Standard IT Infrastructure and Management Category\n2 digit code - 01, 02, 03, 04, 05, 06, 07 ,08, 09, or 10\nThese two digits indicate the sub-category of Investments identified as Part 3:\nIT Investments for IT Infrastructure, IT Security, and IT Management. For the\nFY 2021 reporting cycle, the four previous optional Standard Investments\nOutput, Application, Delivery, and Platform will now be required.\n\nAll Part 3 Investments should select one of the following codes other than “01: Not\nApplicable,” while all Part 1 and 2 Investments should select “01: Not Applicable.”\n\n- 01: Not Applicable\n- 02: IT Security and Compliance\n- 03: IT Management\n- 04: Network\n- 05: Data Center and Cloud\n- 06: End User\n- 07: Output\n- 08: Application\n- 09: Delivery\n- 10: Platform"
          },
          "missionSupportArea": {
            "type": "string",
            "format": "numeric",
            "example": "00",
            "minLength": 2,
            "maxLength": 2,
            "description": "Mission Delivery and Management Support Area  - 2 digit code\nThese two digits indicate the mission delivery and management support areas.\nAgencies should assign a unique code for each mission delivery and\nmanagement support area reported."
          },
          "investmentType": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05"
            ],
            "example": "01",
            "description": "Type of Investment - 2 digit code - 01, 02, 03, 04, or 05\nThese two digits indicate the type of Investment being reported as follows:\n\n- 01: Major IT Investments\n- 02: Non-major IT Investments\n- 03: IT Migration Investment: The portion of a larger asset and for which there is an existing Business Case\nfor the overall asset. The description of the IT Investment should indicate the UII of the major asset Investment\nof the managing partner.\n- 04: Funding Transfer Investments: These are primarily used to indicate the partner contribution to a Lead\nAgency Investment through inter- or intraAgency transfers. The description of the IT Investment should indicate\nthe UII of the Lead Agency’s Investment.\n- 05: Standard IT Infrastructure Investments in Part 3: IT Infrastructure, IT  Security, IT Management\nInvestments (IT Security and Compliance, IT Management, Network, Data Center and Cloud, End User, Output,\nApplication, Delivery, and Platform)."
          },
          "returnOnInvestment": {
            "type": "string",
            "format": "string",
            "example": "Sample description of a return on an investment.",
            "description": "- Return on investment"
          },
          "nssId": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02"
            ],
            "example": "01",
            "description": "National Security Systems Identifier - 2 digit code - 01 or 02\nThese two digits indicate whether the Investment is a National Security System the Federal Information Security\nManagement Act of 2002 (FISMA), 44 U.S.C. 3542(b)(2) as follows:\n\n- 01: Non-National Security System Investment\n- 02: National Security System Investment (these investments will not be publicly viewable on the IT Dashboard)"
          },
          "publicUrls": {
            "type": "array",
            "example": [
              "https://example.gov"
            ],
            "description": "Public URL(s) List any website or digital service that is supported primarily by this Investment.\nSupply an array of strings (URLS).",
            "items": {
              "type": "string"
            }
          },
          "serviceArea": {
            "type": "string",
            "format": "numeric",
            "example": "001",
            "minLength": 3,
            "maxLength": 3,
            "description": "Primary service area (string) - 3 digit code\nThis is the three digit code that indicates the predominant business function\nserved by the Investment (not necessarily the Agency’s mission/business).\nBRM version 3.1 contains the current mapping codes."
          },
          "isMasked": {
            "type": "bool",
            "example": true,
            "description": "A readonly boolean indicating whether the document is masked from the public."
          },
          "isRetired": {
            "type": "bool",
            "example": false,
            "description": "Boolean indicating if the document has been retired"
          },
          "timePeriodId": {
            "type": "string"
          },
          "rebaseLines": {
            "type": "array",
            "readOnly": true,
            "description": "A list of associated rebaseLine IDs",
            "items": {
              "type": "string"
            }
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "currentUii",
          "agency",
          "title",
          "description",
          "changeInStatus",
          "sharedServiceCode",
          "missionSupportCategory",
          "partOfAITPS",
          "standardIdCategory",
          "investmentType",
          "nssId"
        ]
      },
      "Services:jsonld-readItem_readItemSubRes": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.",
            "type": "string"
          },
          "currentUii": {
            "type": "string",
            "format": "string",
            "example": "018-000000123",
            "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
          },
          "agency": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "006",
              "007",
              "009",
              "010",
              "011",
              "012",
              "014",
              "015",
              "016",
              "018",
              "019",
              "020",
              "021",
              "023",
              "024",
              "025",
              "026",
              "027",
              "028",
              "029",
              "100",
              "184",
              "202",
              "393",
              "422",
              "429"
            ],
            "example": "018",
            "description": "The three digit agency code."
          },
          "title": {
            "type": "string",
            "format": "string",
            "example": "IT Collect Development",
            "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
          },
          "description": {
            "type": "string",
            "format": "string",
            "example": "Sample description of the IT Dashboard modernization process.",
            "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public."
          },
          "changeInStatus": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08",
              "09",
              "10",
              "11"
            ],
            "example": "11",
            "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:\n\n- 01: Upgraded from non-major to major IT Investment\n- 02: Downgraded from major to non-major IT Investment\n- 03: Split into multiple Investments\n- 04: Consolidation of Investments\n- 05: Reorganization\n- 06: Eliminated by funding\n- 07: Eliminated by split\n- 08: Eliminated by consolidation\n- 09: Eliminated by reorganization\n- 10: New\n- 11: No Change in Status"
          },
          "changeInStatusDescription": {
            "type": "string",
            "format": "string",
            "example": "New Service",
            "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates."
          },
          "previousUII": {
            "type": "string",
            "format": "string",
            "example": "018-000001234",
            "description": "Previous UII\nThis is the identifier depicting Agency code and unique Investment number used\nto report the Investment in the previous FY 2020 Agency IT Portfolio Summary\nsubmission to OMB. Indicating the UII used for a previous submission\nallows cross-walk and historical analysis spanning FYs. Previous\nUII is mandatory, with the exception of new Investments."
          },
          "sharedServiceCode": {
            "type": "digit",
            "format": "string",
            "enum": [
              "00",
              "24",
              "48"
            ],
            "example": "00",
            "description": "Shared Services Code, 2 digit - 00, 24, or 48\n\n- 00: Code for all Investments other than those coded “24” or “48.”\n- 24: E-Gov initiatives or an individual Agency's participation in one of the EGov/LoB initiatives listed in\nAppendix B.\n- 48: Any Multi-Agency (Inter- or Intra-Agency) IT collaboration or an individual Agency’s participation\nin one of these initiatives, such as use of a centralized FOIA portal."
          },
          "sharedServiceId": {
            "type": "digit",
            "format": "string",
            "example": "0024",
            "minLength": 4,
            "maxLength": 4,
            "description": "Shared Services Identifier - 4 digits\nThese four digits are applicable for all Investments with a Shared Services Category of 24 or 48. A code will be\nspecifically assigned for all E-Gov/LoB shared services in Appendix B, while Agencies should assign their own\nfour digit unique codes for Multi-Agency initiatives using the “48” shared services category.\n\nThis code represents the same 4-digit identifier previously provided in the last nine digits of the UII for\nInvestments starting with xxx-99999XXXX."
          },
          "missionSupportCategory": {
            "type": "digit",
            "format": "string",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07"
            ],
            "example": "01",
            "externalDocs": {
              "url": "https://ussm.gsa.gov/fibf/"
            },
            "description": "Mission Support Category - 2 digit code - 01, 02, 03, 04, 05, 06, or 07\nThese two digits indicate the category of common Mission Support Services\nInvestments by Federal Integrated Business Framework (FIBF) Service Area(s).\nAll non-Mission Support Services Investments should use Category 01. Mission\nSupport Services Investments may select more than one code where applicable:\n\n- 01: Not Applicable\n- 02: Financial Management\n- 03: Human Resources\n- 04: Procurement\n- 05: Travel / Transportation\n- 06: Grants Management\n- 07: Other"
          },
          "bureauCode": {
            "type": "digit",
            "format": "string",
            "example": "00",
            "minLength": "2",
            "maxLength": "2",
            "description": "Bureau Code (string) - 2 digit code\nThe two digits indicate the bureau code of the Investment (see Appendix C of OMB Circular No. A-11).\nIf this is a department-level or an Agency-wide  activity, use “00” as your bureau code."
          },
          "partOfAITPS": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03"
            ],
            "example": "01",
            "description": "Part of AITPS (string) - 2 digit code - 01, 02, or 03\nThese two digits indicate one of the three parts of the Agency IT Portfolio\nSummary, to which the Investment belongs:\n\n- 01: Part 1. IT Investments for Mission Delivery\n- 02: Part 2. IT Investments for Mission Support Services\n- 03: Part 3. IT Investments for IT Infrastructure, IT Security, and IT Management"
          },
          "standardIdCategory": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08",
              "09",
              "10"
            ],
            "example": "01",
            "description": "Standard IT Infrastructure and Management Category\n2 digit code - 01, 02, 03, 04, 05, 06, 07 ,08, 09, or 10\nThese two digits indicate the sub-category of Investments identified as Part 3:\nIT Investments for IT Infrastructure, IT Security, and IT Management. For the\nFY 2021 reporting cycle, the four previous optional Standard Investments\nOutput, Application, Delivery, and Platform will now be required.\n\nAll Part 3 Investments should select one of the following codes other than “01: Not\nApplicable,” while all Part 1 and 2 Investments should select “01: Not Applicable.”\n\n- 01: Not Applicable\n- 02: IT Security and Compliance\n- 03: IT Management\n- 04: Network\n- 05: Data Center and Cloud\n- 06: End User\n- 07: Output\n- 08: Application\n- 09: Delivery\n- 10: Platform"
          },
          "missionSupportArea": {
            "type": "string",
            "format": "numeric",
            "example": "00",
            "minLength": 2,
            "maxLength": 2,
            "description": "Mission Delivery and Management Support Area  - 2 digit code\nThese two digits indicate the mission delivery and management support areas.\nAgencies should assign a unique code for each mission delivery and\nmanagement support area reported."
          },
          "investmentType": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05"
            ],
            "example": "01",
            "description": "Type of Investment - 2 digit code - 01, 02, 03, 04, or 05\nThese two digits indicate the type of Investment being reported as follows:\n\n- 01: Major IT Investments\n- 02: Non-major IT Investments\n- 03: IT Migration Investment: The portion of a larger asset and for which there is an existing Business Case\nfor the overall asset. The description of the IT Investment should indicate the UII of the major asset Investment\nof the managing partner.\n- 04: Funding Transfer Investments: These are primarily used to indicate the partner contribution to a Lead\nAgency Investment through inter- or intraAgency transfers. The description of the IT Investment should indicate\nthe UII of the Lead Agency’s Investment.\n- 05: Standard IT Infrastructure Investments in Part 3: IT Infrastructure, IT  Security, IT Management\nInvestments (IT Security and Compliance, IT Management, Network, Data Center and Cloud, End User, Output,\nApplication, Delivery, and Platform)."
          },
          "returnOnInvestment": {
            "type": "string",
            "format": "string",
            "example": "Sample description of a return on an investment.",
            "description": "- Return on investment"
          },
          "nssId": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02"
            ],
            "example": "01",
            "description": "National Security Systems Identifier - 2 digit code - 01 or 02\nThese two digits indicate whether the Investment is a National Security System the Federal Information Security\nManagement Act of 2002 (FISMA), 44 U.S.C. 3542(b)(2) as follows:\n\n- 01: Non-National Security System Investment\n- 02: National Security System Investment (these investments will not be publicly viewable on the IT Dashboard)"
          },
          "publicUrls": {
            "type": "array",
            "example": [
              "https://example.gov"
            ],
            "description": "Public URL(s) List any website or digital service that is supported primarily by this Investment.\nSupply an array of strings (URLS).",
            "items": {
              "type": "string"
            }
          },
          "serviceArea": {
            "type": "string",
            "format": "numeric",
            "example": "001",
            "minLength": 3,
            "maxLength": 3,
            "description": "Primary service area (string) - 3 digit code\nThis is the three digit code that indicates the predominant business function\nserved by the Investment (not necessarily the Agency’s mission/business).\nBRM version 3.1 contains the current mapping codes."
          },
          "rebaseLines": {
            "type": "array",
            "readOnly": true,
            "description": "A list of associated rebaseLine IDs",
            "items": {
              "type": "string"
            }
          },
          "projects": {
            "description": "Embed Project Objects",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Projects:jsonld-readItem_readItemSubRes"
            }
          },
          "cioRatings": {
            "description": "Embedded CIO Ratings",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CioRating:jsonld-readItem_readItemSubRes"
            }
          },
          "ledgers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ledger:jsonld-readItem_readItemSubRes"
            }
          },
          "contracts": {
            "description": "Contract Embedded CONTRACTS",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contract:jsonld-readItem_readItemSubRes"
            }
          },
          "created": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Created date/time"
          },
          "lastModified": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-01 15:00:00",
            "readOnly": true,
            "description": "Last modified date/time"
          },
          "createdBy": {
            "type": "string",
            "format": "string",
            "example": "johndoe@gov",
            "readOnly": true,
            "description": "The user who created the record"
          },
          "updatedBy": {
            "type": "string",
            "format": "string",
            "example": "janedoe@gov",
            "readOnly": true,
            "description": "The user who last updated the record"
          }
        },
        "required": [
          "currentUii",
          "agency",
          "title",
          "description",
          "changeInStatus",
          "sharedServiceCode",
          "missionSupportCategory",
          "partOfAITPS",
          "standardIdCategory",
          "investmentType",
          "nssId"
        ]
      },
      "Services:jsonld-write": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "agencyId": {
            "description": "A unique identifier for the document provided by the submitting user.<details><summary><b>Validations</b></summary><ul><li>Property '{{ value }}' already exists in IT Collect.\n     *     Please use a different value.</li></ul></details>",
            "type": "string"
          },
          "currentUii": {
            "type": "string",
            "format": "string",
            "example": "018-000000123",
            "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key.<details><summary><b>Validations</b></summary><ul><li>UII {{ uii }} must match the following format: XXX-xxxxxxxxx. The first three digits represent your Agency code. The last nine digits serve as the Investment's unique identifier</li><li>The Agency Code in UII {{ uii }} must match the submitting agency code {{ agencyCode }}</li><li>Current UII '{{ value }}' already exists in IT Collect.\n     *     Please use the PATCH method to update UII '{{ value }}'</li></ul></details>"
          },
          "agency": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "006",
              "007",
              "009",
              "010",
              "011",
              "012",
              "014",
              "015",
              "016",
              "018",
              "019",
              "020",
              "021",
              "023",
              "024",
              "025",
              "026",
              "027",
              "028",
              "029",
              "100",
              "184",
              "202",
              "393",
              "422",
              "429"
            ],
            "example": "018",
            "description": "The three digit agency code.<details><summary><b>Validations</b></summary><ul><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "title": {
            "type": "string",
            "format": "string",
            "example": "IT Collect Development",
            "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
          },
          "description": {
            "type": "string",
            "format": "string",
            "example": "Sample description of the IT Dashboard modernization process.",
            "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public."
          },
          "changeInStatus": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08",
              "09",
              "10",
              "11"
            ],
            "example": "11",
            "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:\n\n- 01: Upgraded from non-major to major IT Investment\n- 02: Downgraded from major to non-major IT Investment\n- 03: Split into multiple Investments\n- 04: Consolidation of Investments\n- 05: Reorganization\n- 06: Eliminated by funding\n- 07: Eliminated by split\n- 08: Eliminated by consolidation\n- 09: Eliminated by reorganization\n- 10: New\n- 11: No Change in Status<details><summary><b>Validations</b></summary><ul><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "changeInStatusDescription": {
            "type": "string",
            "format": "string",
            "example": "New Service",
            "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates."
          },
          "previousUII": {
            "type": "string",
            "format": "string",
            "example": "018-000001234",
            "description": "Previous UII\nThis is the identifier depicting Agency code and unique Investment number used\nto report the Investment in the previous FY 2020 Agency IT Portfolio Summary\nsubmission to OMB. Indicating the UII used for a previous submission\nallows cross-walk and historical analysis spanning FYs. Previous\nUII is mandatory, with the exception of new Investments.<details><summary><b>Validations</b></summary><ul><li>At least one of the following: <br/>1. This value should be blank.<br/>2. Previous UII {{uii}} must correspond with an existing Current UII in the IT Collect database<br/></li></ul></details>"
          },
          "sharedServiceCode": {
            "type": "digit",
            "format": "string",
            "enum": [
              "00",
              "24",
              "48"
            ],
            "example": "00",
            "description": "Shared Services Code, 2 digit - 00, 24, or 48\n\n- 00: Code for all Investments other than those coded “24” or “48.”\n- 24: E-Gov initiatives or an individual Agency's participation in one of the EGov/LoB initiatives listed in\nAppendix B.\n- 48: Any Multi-Agency (Inter- or Intra-Agency) IT collaboration or an individual Agency’s participation\nin one of these initiatives, such as use of a centralized FOIA portal.<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "sharedServiceId": {
            "type": "digit",
            "format": "string",
            "example": "0024",
            "minLength": 4,
            "maxLength": 4,
            "description": "Shared Services Identifier - 4 digits\nThese four digits are applicable for all Investments with a Shared Services Category of 24 or 48. A code will be\nspecifically assigned for all E-Gov/LoB shared services in Appendix B, while Agencies should assign their own\nfour digit unique codes for Multi-Agency initiatives using the “48” shared services category.\n\nThis code represents the same 4-digit identifier previously provided in the last nine digits of the UII for\nInvestments starting with xxx-99999XXXX.<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>At least one of the following: <br/>1. This value should be blank.<br/>2. One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) Must be 4 digits long. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/><br/></li></ul></details>"
          },
          "missionSupportCategory": {
            "type": "digit",
            "format": "string",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07"
            ],
            "example": "01",
            "externalDocs": {
              "url": "https://ussm.gsa.gov/fibf/"
            },
            "description": "Mission Support Category - 2 digit code - 01, 02, 03, 04, 05, 06, or 07\nThese two digits indicate the category of common Mission Support Services\nInvestments by Federal Integrated Business Framework (FIBF) Service Area(s).\nAll non-Mission Support Services Investments should use Category 01. Mission\nSupport Services Investments may select more than one code where applicable:\n\n- 01: Not Applicable\n- 02: Financial Management\n- 03: Human Resources\n- 04: Procurement\n- 05: Travel / Transportation\n- 06: Grants Management\n- 07: Other<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "bureauCode": {
            "type": "digit",
            "format": "string",
            "example": "00",
            "minLength": "2",
            "maxLength": "2",
            "description": "Bureau Code (string) - 2 digit code\nThe two digits indicate the bureau code of the Investment (see Appendix C of OMB Circular No. A-11).\nIf this is a department-level or an Agency-wide  activity, use “00” as your bureau code.<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) Required and must be 2 characters long. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "partOfAITPS": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03"
            ],
            "example": "01",
            "description": "Part of AITPS (string) - 2 digit code - 01, 02, or 03\nThese two digits indicate one of the three parts of the Agency IT Portfolio\nSummary, to which the Investment belongs:\n\n- 01: Part 1. IT Investments for Mission Delivery\n- 02: Part 2. IT Investments for Mission Support Services\n- 03: Part 3. IT Investments for IT Infrastructure, IT Security, and IT Management<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "standardIdCategory": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08",
              "09",
              "10"
            ],
            "example": "01",
            "description": "Standard IT Infrastructure and Management Category\n2 digit code - 01, 02, 03, 04, 05, 06, 07 ,08, 09, or 10\nThese two digits indicate the sub-category of Investments identified as Part 3:\nIT Investments for IT Infrastructure, IT Security, and IT Management. For the\nFY 2021 reporting cycle, the four previous optional Standard Investments\nOutput, Application, Delivery, and Platform will now be required.\n\nAll Part 3 Investments should select one of the following codes other than “01: Not\nApplicable,” while all Part 1 and 2 Investments should select “01: Not Applicable.”\n\n- 01: Not Applicable\n- 02: IT Security and Compliance\n- 03: IT Management\n- 04: Network\n- 05: Data Center and Cloud\n- 06: End User\n- 07: Output\n- 08: Application\n- 09: Delivery\n- 10: Platform<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "missionSupportArea": {
            "type": "string",
            "format": "numeric",
            "example": "00",
            "minLength": 2,
            "maxLength": 2,
            "description": "Mission Delivery and Management Support Area  - 2 digit code\nThese two digits indicate the mission delivery and management support areas.\nAgencies should assign a unique code for each mission delivery and\nmanagement support area reported.<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) Required and must be 2 digit long. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "investmentType": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05"
            ],
            "example": "01",
            "description": "Type of Investment - 2 digit code - 01, 02, 03, 04, or 05\nThese two digits indicate the type of Investment being reported as follows:\n\n- 01: Major IT Investments\n- 02: Non-major IT Investments\n- 03: IT Migration Investment: The portion of a larger asset and for which there is an existing Business Case\nfor the overall asset. The description of the IT Investment should indicate the UII of the major asset Investment\nof the managing partner.\n- 04: Funding Transfer Investments: These are primarily used to indicate the partner contribution to a Lead\nAgency Investment through inter- or intraAgency transfers. The description of the IT Investment should indicate\nthe UII of the Lead Agency’s Investment.\n- 05: Standard IT Infrastructure Investments in Part 3: IT Infrastructure, IT  Security, IT Management\nInvestments (IT Security and Compliance, IT Management, Network, Data Center and Cloud, End User, Output,\nApplication, Delivery, and Platform).<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "returnOnInvestment": {
            "type": "string",
            "format": "string",
            "example": "Sample description of a return on an investment.",
            "description": "- Return on investment<details><summary><b>Validations</b></summary><ul><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) Must be less than 3500. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "nssId": {
            "type": "string",
            "format": "numeric",
            "enum": [
              "01",
              "02"
            ],
            "example": "01",
            "description": "National Security Systems Identifier - 2 digit code - 01 or 02\nThese two digits indicate whether the Investment is a National Security System the Federal Information Security\nManagement Act of 2002 (FISMA), 44 U.S.C. 3542(b)(2) as follows:\n\n- 01: Non-National Security System Investment\n- 02: National Security System Investment (these investments will not be publicly viewable on the IT Dashboard)<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>The value you selected is not a valid choice.</li></ul></details>"
          },
          "publicUrls": {
            "type": "array",
            "example": [
              "https://example.gov"
            ],
            "description": "Public URL(s) List any website or digital service that is supported primarily by this Investment.\nSupply an array of strings (URLS).<details><summary><b>Validations</b></summary><ul><li>Public URLs must contain valid URLs. Found {{count}} invalid URL(s): {{urls}}</li></ul></details>",
            "items": {
              "type": "string"
            }
          },
          "serviceArea": {
            "type": "string",
            "format": "numeric",
            "example": "001",
            "minLength": 3,
            "maxLength": 3,
            "description": "Primary service area (string) - 3 digit code\nThis is the three digit code that indicates the predominant business function\nserved by the Investment (not necessarily the Agency’s mission/business).\nBRM version 3.1 contains the current mapping codes.<details><summary><b>Validations</b></summary><ul><li>This value should be of type {{ type }}.</li><li>One of the following Length errors: <br/> 1) This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.. <br/> 2) This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.. <br/> 3) Required and must be 3 digit long. <br/> 4) This value does not match the expected {{ charset }} charset.. <br/></li></ul></details>"
          },
          "isRetired": {
            "type": "bool",
            "example": false,
            "description": "Boolean indicating if the document has been retired"
          },
          "rebaseLineId": {
            "type": "string",
            "format": "string",
            "example": "",
            "description": "Baseline fields include:\n\n- isRetired\n\nA valid rebaseLineId is required if your are modifying baseline fields.<details><summary><b>Validations</b></summary><ul><li>The rebaseLineId you submitted is invalid: {{rebaseLineId}}. A rebaseLineId must exist and be associated with your agency: {{agency_code}}</li></ul></details>"
          },
          "id": {
            "description": "<details><summary><b>Validations</b></summary><ul><li>Property '{{ value }}' already exists in IT Collect.\n     *     Please use a different value.</li></ul></details>"
          }
        },
        "required": [
          "currentUii",
          "agency",
          "title",
          "description",
          "changeInStatus",
          "sharedServiceCode",
          "missionSupportCategory",
          "partOfAITPS",
          "standardIdCategory",
          "investmentType",
          "nssId"
        ]
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "description": "\nIT Collect will utilize the OAuth2 Authorization framework to authenticate vendor client\napplications to start using our APIs. A walkthrough of client configuration for Postman is\noutlined below. All current documentation and application features are currently undergoing\ndevelopment.\n\nAs part of your vendor application you will need to authenticate via an OAuth 2.0 compatible\nclient library using the Authorization Code Grant Type. Once a token is received from the\nIT Collect OAuth server it will need to be included as part of an HTTP Request Header for\nsubsequent requests to API endpoints. CURL Example:\n\n```console\ncurl -X GET \"http://itcollect-url-tbd/v1/services\"  -H  \"Authorization: Bearer YOUR-TOKEN-HERE\" -H  \"accept: application/ld+json\"\n```\n\n## Prerequisites\n- Request an OAuth 2 identifer and secret from IT Collect team.\n- Request a sandbox user account.\n- Provider IT Collect with an OAuth 2.0 compatible callback URL\n\n## Postman\n\n[Postman](https://www.postman.com/) is an API Client that you can use for communication\nwith IT Collect.\n\n### Vendor Steps\n\n1. Create a new Postman Collection and import the OpenAPI spec\n\n2. Edit the Collection\n\n3. Switch to the Authorization tab and select `OAuth 2.0`\n\n4. Click the \"Get New Access Token\" button leaving Header Prefix as `Bearer`.\n\n| Setting | Value |\n| ------------- | ------------- |\n| Token Name | Bearer |\n| Grant Type | Authorization Code |\n| * Callback URL | https://app.getpostman.com/oauth2/callback |\n| * Authorize using browser | Yes, enable this option |\n| Auth URL (TBD) | http://dev-itcollect.domain/admin/authorize |\n| Access Token URL (TBD) | http://dev-itcollect.domain/admin/token |\n| Client ID | *{Request from IT Collect}* |\n| Client Secret | *{Request from IT Collect}* |\n| * State |  |\n| Client Authentication | Send client credentials in body |\n\n> * Callback URL: Vendor application callback URL.  Will depend on individual vendor\nimplementation.  Must be provided to IT Collect team prior to implementation.\n> * Authorize using browser: This option is specific to PostMan and is required for PIV\ncards to be used by Login.gov. PostMan cannot read PIVs so a browser is required for this\nstep.\n> * State: This is an optional parameter, leave blank in Postman, but you may provide a\nstate in your vendor application. You may use this as CSRF protection mechanism or to\nassist in maintaining a state such as a session key.\n\n5. Click \"Request Token\"\n\n6. Login using either your sandbox user account or your login.gov account (see below).\n\nYou should now have an access token suitable for defining the HTTP Authorization Header.\n\n#### Login.gov PIV card\n\nPIV (Personal Identity Verification) cards testing steps\n\n1. Once the browser window has opened (you may need to allow popups in your browse for this\ndomain) click \"Login with Login.gov\"\n\n2. Provide your Login.gov credentials using either your PIV access card or username and\npassword credentials.\n\nYou should now have an access token suitable for defining in the HTTP Authorization Header.\n",
        "flows": {
          "authorizationCode": {
            "tokenUrl": "http://dev-itcollect.domain/admin/token",
            "authorizationUrl": "http://dev-itcollect.domain/admin/authorize",
            "scopes": []
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Rebaseline"
    },
    {
      "name": "Services"
    },
    {
      "name": "CioRating"
    },
    {
      "name": "Contract"
    },
    {
      "name": "Ledger"
    },
    {
      "name": "Activity"
    },
    {
      "name": "Projects"
    }
  ]
}
