{
    "openapi": "3.0.2",
    "info": {
        "title": "IT Collect",
        "version": "0.0.1-beta",
        "description": "The IT Dashboard team aims to build a modern API that acts as the center-piece of a modular IT data reporting ecosystem. This OpenAPI spec shows the initial direction of ITCollect data architecture and is aimed at providing real-time updates to the IT Collect API. It will serve as living documentation of the latest changes.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
        "x-logo": {
            "url": "images/logo-gsa.svg",
            "backgroundColor": "#FFFFFF",
            "altText": "U.S General Services Administration"
        }
    },
    "paths": {
        "/v1/auxiliary/systems/{system}/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "operationId": "getProductsCollection",
                "summary": "Retrieves the collection of Products resources.",
                "responses": {
                    "200": {
                        "description": "Products collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Products:jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string"
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Products-read"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Products-read"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "system",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "operationId": "postProductsCollection",
                "summary": "Creates a Products resource.",
                "responses": {
                    "201": {
                        "description": "Products resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            }
                        },
                        "links": {
                            "GetProductsItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getProductsItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /v1/auxiliary/systems/{system}/products/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products:jsonld-write"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products-write"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Products-write"
                            }
                        }
                    },
                    "description": "The new Products resource"
                },
                "parameters": [
                    {
                        "name": "system",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/auxiliary/systems/{system}/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "operationId": "getProductsItem",
                "summary": "Retrieves a Products resource.",
                "parameters": [
                    {
                        "name": "system",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products:jsonld-readItem"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products-readItem"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products-readItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "operationId": "putProductsItem",
                "summary": "Replaces the Products resource.",
                "parameters": [
                    {
                        "name": "system",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products:jsonld-write"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products-write"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Products-write"
                            }
                        }
                    },
                    "description": "The updated Products resource"
                }
            },
            "patch": {
                "tags": [
                    "Products"
                ],
                "operationId": "patchProductsItem",
                "summary": "Updates the Products resource.",
                "parameters": [
                    {
                        "name": "system",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products-write"
                            }
                        }
                    },
                    "description": "The updated Products resource"
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "operationId": "deleteProductsItem",
                "summary": "Removes the Products resource.",
                "responses": {
                    "204": {
                        "description": "Products resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "system",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "operationId": "getServicesCollection",
                "summary": "Retrieves the collection of Services resources.",
                "responses": {
                    "200": {
                        "description": "Services collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Services:jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string"
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "budgetYear",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "budgetYear[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "operationId": "postServicesCollection",
                "summary": "Creates a Services resource.",
                "responses": {
                    "201": {
                        "description": "Services resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Services:jsonld"
                                }
                            }
                        },
                        "links": {
                            "GetServicesItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getServicesItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /v1/services/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Services:jsonld-write"
                            }
                        }
                    },
                    "description": "The new Services resource"
                },
                "parameters": []
            }
        },
        "/v1/services/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "operationId": "getServicesItem",
                "summary": "Retrieves a Services resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Services resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Services:jsonld-readItem_readItemSubRes"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Services"
                ],
                "operationId": "putServicesItem",
                "summary": "Replaces the Services resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Services resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Services:jsonld"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Services:jsonld-write"
                            }
                        }
                    },
                    "description": "The updated Services resource"
                }
            },
            "patch": {
                "tags": [
                    "Services"
                ],
                "operationId": "patchServicesItem",
                "summary": "Updates the Services resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Services resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Services:jsonld"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Services-write"
                            }
                        }
                    },
                    "description": "The updated Services resource"
                }
            },
            "delete": {
                "tags": [
                    "Services"
                ],
                "operationId": "deleteServicesItem",
                "summary": "Removes the Services resource.",
                "responses": {
                    "204": {
                        "description": "Services resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/auxiliary/systems": {
            "get": {
                "tags": [
                    "Systems"
                ],
                "operationId": "getSystemsCollection",
                "summary": "Retrieves the collection of Systems resources.",
                "responses": {
                    "200": {
                        "description": "Systems collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Systems:jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string"
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Systems"
                ],
                "operationId": "postSystemsCollection",
                "summary": "Creates a Systems resource.",
                "responses": {
                    "201": {
                        "description": "Systems resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Systems:jsonld"
                                }
                            }
                        },
                        "links": {
                            "GetSystemsItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getSystemsItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /v1/services/{service}/auxiliary/systems/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Systems:jsonld-write"
                            }
                        }
                    },
                    "description": "The new Systems resource"
                }
            }
        },
        "/v1/services/{service}/auxiliary/systems/{id}": {
            "get": {
                "tags": [
                    "Systems"
                ],
                "operationId": "getSystemsItem",
                "summary": "Retrieves a Systems resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Systems resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Systems:jsonld-readItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Systems"
                ],
                "operationId": "putSystemsItem",
                "summary": "Replaces the Systems resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Systems resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Systems:jsonld"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Systems:jsonld-write"
                            }
                        }
                    },
                    "description": "The updated Systems resource"
                }
            },
            "patch": {
                "tags": [
                    "Systems"
                ],
                "operationId": "patchSystemsItem",
                "summary": "Updates the Systems resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Systems resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Systems:jsonld"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Systems-write"
                            }
                        }
                    },
                    "description": "The updated Systems resource"
                }
            },
            "delete": {
                "tags": [
                    "Systems"
                ],
                "operationId": "deleteSystemsItem",
                "summary": "Removes the Systems resource.",
                "responses": {
                    "204": {
                        "description": "Systems resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/cio-ratings": {
            "get": {
                "tags": [
                    "CioRating"
                ],
                "operationId": "getCioRatingCollection",
                "summary": "Retrieves the collection of CioRating resources.",
                "responses": {
                    "200": {
                        "description": "CioRating collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CioRating:jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string"
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "CioRating"
                ],
                "operationId": "postCioRatingCollection",
                "summary": "Creates a CioRating resource.",
                "responses": {
                    "201": {
                        "description": "CioRating resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CioRating:jsonld"
                                }
                            }
                        },
                        "links": {
                            "GetCioRatingItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getCioRatingItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /v1/services/{service}/cio-ratings/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CioRating:jsonld-write"
                            }
                        }
                    },
                    "description": "The new CioRating resource"
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/cio-ratings/{id}": {
            "get": {
                "tags": [
                    "CioRating"
                ],
                "operationId": "getCioRatingItem",
                "summary": "Retrieves a CioRating resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CioRating resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CioRating:jsonld-readItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "CioRating"
                ],
                "operationId": "putCioRatingItem",
                "summary": "Replaces the CioRating resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CioRating resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CioRating:jsonld-readItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CioRating:jsonld-write"
                            }
                        }
                    },
                    "description": "The updated CioRating resource"
                }
            },
            "patch": {
                "tags": [
                    "CioRating"
                ],
                "operationId": "patchCioRatingItem",
                "summary": "Updates the CioRating resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CioRating resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CioRating:jsonld-readItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CioRating-write"
                            }
                        }
                    },
                    "description": "The updated CioRating resource"
                }
            },
            "delete": {
                "tags": [
                    "CioRating"
                ],
                "operationId": "deleteCioRatingItem",
                "summary": "Removes the CioRating resource.",
                "responses": {
                    "204": {
                        "description": "CioRating resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/contracts": {
            "get": {
                "tags": [
                    "Contract"
                ],
                "operationId": "getContractCollection",
                "summary": "Retrieves the collection of Contract resources.",
                "responses": {
                    "200": {
                        "description": "Contract collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Contract:jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string"
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Contract"
                ],
                "operationId": "postContractCollection",
                "summary": "Creates a Contract resource.",
                "responses": {
                    "201": {
                        "description": "Contract resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract:jsonld-read"
                                }
                            }
                        },
                        "links": {
                            "GetContractItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getContractItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /v1/services/{service}/contracts/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contract:jsonld-write"
                            }
                        }
                    },
                    "description": "The new Contract resource"
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/contracts/{id}": {
            "get": {
                "tags": [
                    "Contract"
                ],
                "operationId": "getContractItem",
                "summary": "Retrieves a Contract resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract:jsonld-readItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Contract"
                ],
                "operationId": "putContractItem",
                "summary": "Replaces the Contract resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract:jsonld-read"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contract:jsonld-write"
                            }
                        }
                    },
                    "description": "The updated Contract resource"
                }
            },
            "patch": {
                "tags": [
                    "Contract"
                ],
                "operationId": "patchContractItem",
                "summary": "Updates the Contract resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract:jsonld-read"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contract-write"
                            }
                        }
                    },
                    "description": "The updated Contract resource"
                }
            },
            "delete": {
                "tags": [
                    "Contract"
                ],
                "operationId": "deleteContractItem",
                "summary": "Removes the Contract resource.",
                "responses": {
                    "204": {
                        "description": "Contract resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/ledgers": {
            "get": {
                "tags": [
                    "Ledger"
                ],
                "operationId": "getLedgerCollection",
                "summary": "Retrieves the collection of Ledger resources.",
                "responses": {
                    "200": {
                        "description": "Ledger collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Ledger:jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string"
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ledger"
                ],
                "operationId": "postLedgerCollection",
                "summary": "Creates a Ledger resource.",
                "responses": {
                    "201": {
                        "description": "Ledger resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ledger:jsonld-read"
                                }
                            }
                        },
                        "links": {
                            "GetLedgerItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getLedgerItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /v1/services/{service}/ledgers/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ledger:jsonld-write"
                            }
                        }
                    },
                    "description": "The new Ledger resource"
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/ledgers/{id}": {
            "get": {
                "tags": [
                    "Ledger"
                ],
                "operationId": "getLedgerItem",
                "summary": "Retrieves a Ledger resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ledger resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ledger:jsonld-read"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Ledger"
                ],
                "operationId": "putLedgerItem",
                "summary": "Replaces the Ledger resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ledger resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ledger:jsonld-read"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ledger:jsonld-write"
                            }
                        }
                    },
                    "description": "The updated Ledger resource"
                }
            },
            "patch": {
                "tags": [
                    "Ledger"
                ],
                "operationId": "patchLedgerItem",
                "summary": "Updates the Ledger resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ledger resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ledger:jsonld-read"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ledger-write"
                            }
                        }
                    },
                    "description": "The updated Ledger resource"
                }
            },
            "delete": {
                "tags": [
                    "Ledger"
                ],
                "operationId": "deleteLedgerItem",
                "summary": "Removes the Ledger resource.",
                "responses": {
                    "204": {
                        "description": "Ledger resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/metrics": {
            "get": {
                "tags": [
                    "Metric"
                ],
                "operationId": "getMetricCollection",
                "summary": "Retrieves the collection of Metric resources.",
                "responses": {
                    "200": {
                        "description": "Metric collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Metric:jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string"
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Metric"
                ],
                "operationId": "postMetricCollection",
                "summary": "Creates a Metric resource.",
                "responses": {
                    "201": {
                        "description": "Metric resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metric:jsonld"
                                }
                            }
                        },
                        "links": {
                            "GetMetricItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getMetricItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /v1/services/{service}/metrics/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metric:jsonld-write"
                            }
                        }
                    },
                    "description": "The new Metric resource"
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/metrics/{id}": {
            "get": {
                "tags": [
                    "Metric"
                ],
                "operationId": "getMetricItem",
                "summary": "Retrieves a Metric resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metric resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metric:jsonld-read"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Metric"
                ],
                "operationId": "putMetricItem",
                "summary": "Replaces the Metric resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metric resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metric:jsonld"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metric:jsonld-write"
                            }
                        }
                    },
                    "description": "The updated Metric resource"
                }
            },
            "patch": {
                "tags": [
                    "Metric"
                ],
                "operationId": "patchMetricItem",
                "summary": "Updates the Metric resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metric resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metric:jsonld"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metric-write"
                            }
                        }
                    },
                    "description": "The updated Metric resource"
                }
            },
            "delete": {
                "tags": [
                    "Metric"
                ],
                "operationId": "deleteMetricItem",
                "summary": "Removes the Metric resource.",
                "responses": {
                    "204": {
                        "description": "Metric resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/metrics/{metric}/actuals": {
            "get": {
                "tags": [
                    "MetricActuals"
                ],
                "operationId": "getMetricActualsCollection",
                "summary": "Retrieves the collection of MetricActuals resources.",
                "responses": {
                    "200": {
                        "description": "MetricActuals collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MetricActuals:jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string"
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "metric",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "MetricActuals"
                ],
                "operationId": "postMetricActualsCollection",
                "summary": "Creates a MetricActuals resource.",
                "responses": {
                    "201": {
                        "description": "MetricActuals resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricActuals:jsonld"
                                }
                            }
                        },
                        "links": {
                            "GetMetricActualsItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getMetricActualsItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /v1/services/{service}/metrics/{metric}/actuals/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricActuals:jsonld-write"
                            }
                        }
                    },
                    "description": "The new MetricActuals resource"
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "metric",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/metrics/{metric}/actuals/{id}": {
            "get": {
                "tags": [
                    "MetricActuals"
                ],
                "operationId": "getMetricActualsItem",
                "summary": "Retrieves a MetricActuals resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "metric",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MetricActuals resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricActuals:jsonld-read"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "MetricActuals"
                ],
                "operationId": "putMetricActualsItem",
                "summary": "Replaces the MetricActuals resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "metric",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MetricActuals resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricActuals:jsonld"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricActuals:jsonld-write"
                            }
                        }
                    },
                    "description": "The updated MetricActuals resource"
                }
            },
            "patch": {
                "tags": [
                    "MetricActuals"
                ],
                "operationId": "patchMetricActualsItem",
                "summary": "Updates the MetricActuals resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "metric",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MetricActuals resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricActuals:jsonld"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetricActuals-write"
                            }
                        }
                    },
                    "description": "The updated MetricActuals resource"
                }
            },
            "delete": {
                "tags": [
                    "MetricActuals"
                ],
                "operationId": "deleteMetricActualsItem",
                "summary": "Removes the MetricActuals resource.",
                "responses": {
                    "204": {
                        "description": "MetricActuals resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "metric",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "operationId": "getProjectsCollection",
                "summary": "Retrieves the collection of Projects resources.",
                "responses": {
                    "200": {
                        "description": "Projects collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Projects:jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string"
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "operationId": "postProjectsCollection",
                "summary": "Creates a Projects resource.",
                "responses": {
                    "201": {
                        "description": "Projects resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Projects:jsonld"
                                }
                            }
                        },
                        "links": {
                            "GetProjectsItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getProjectsItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /v1/services/{service}/projects/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Projects:jsonld-write"
                            }
                        }
                    },
                    "description": "The new Projects resource"
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/projects/{id}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "operationId": "getProjectsItem",
                "summary": "Retrieves a Projects resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Projects resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Projects:jsonld-readItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Projects"
                ],
                "operationId": "putProjectsItem",
                "summary": "Replaces the Projects resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Projects resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Projects:jsonld"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Projects:jsonld-write"
                            }
                        }
                    },
                    "description": "The updated Projects resource"
                }
            },
            "patch": {
                "tags": [
                    "Projects"
                ],
                "operationId": "patchProjectsItem",
                "summary": "Updates the Projects resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Projects resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Projects:jsonld"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Projects-write"
                            }
                        }
                    },
                    "description": "The updated Projects resource"
                }
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "operationId": "deleteProjectsItem",
                "summary": "Removes the Projects resource.",
                "responses": {
                    "204": {
                        "description": "Projects resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/projects/{project}/activities": {
            "get": {
                "tags": [
                    "Activity"
                ],
                "operationId": "getActivityCollection",
                "summary": "Retrieves the collection of Activity resources.",
                "responses": {
                    "200": {
                        "description": "Activity collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Activity:jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string"
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Activity"
                ],
                "operationId": "postActivityCollection",
                "summary": "Creates a Activity resource.",
                "responses": {
                    "201": {
                        "description": "Activity resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity:jsonld"
                                }
                            }
                        },
                        "links": {
                            "GetActivityItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getActivityItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /v1/services/{service}/projects/{project}/activities/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity:jsonld-write"
                            }
                        }
                    },
                    "description": "The new Activity resource"
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/v1/services/{service}/projects/{project}/activities/{id}": {
            "get": {
                "tags": [
                    "Activity"
                ],
                "operationId": "getActivityItem",
                "summary": "Retrieves a Activity resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity:jsonld-read"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Activity"
                ],
                "operationId": "putActivityItem",
                "summary": "Replaces the Activity resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity:jsonld"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity:jsonld-write"
                            }
                        }
                    },
                    "description": "The updated Activity resource"
                }
            },
            "patch": {
                "tags": [
                    "Activity"
                ],
                "operationId": "patchActivityItem",
                "summary": "Updates the Activity resource.",
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity:jsonld"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity-write"
                            }
                        }
                    },
                    "description": "The updated Activity resource"
                }
            },
            "delete": {
                "tags": [
                    "Activity"
                ],
                "operationId": "deleteActivityItem",
                "summary": "Removes the Activity resource.",
                "responses": {
                    "204": {
                        "description": "Activity resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        }
    },
    "security": [
        {
            "oauth": []
        }
    ],
    "components": {
        "schemas": {
            "Activity-write": {
                "type": "object",
                "description": "",
                "required": [
                    "activityName",
                    "description",
                    "plannedStartDate",
                    "plannedEndDate",
                    "projectedStartDate",
                    "projectedEndDate",
                    "actualStartDate",
                    "actualEndDate",
                    "plannedTotalCost",
                    "projectedTotalCost",
                    "structureId"
                ],
                "properties": {
                    "activityName": {
                        "type": "string",
                        "example": "Authentication Configuration",
                        "description": "A short description consistent with the critical steps within the Agency project management methodology."
                    },
                    "description": {
                        "type": "string",
                        "example": "Allow relevant users to access CPIC data",
                        "description": "Brief description of primary goal/outcome the activity is planning to provide for the Investment upon\ncompletion."
                    },
                    "plannedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-05-13",
                        "description": "The planned start date (YYYY-MM-DD) for the activity. This is the baseline value.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "plannedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-07-30",
                        "description": "The planned completion date (YYYY-MM-DD) for the activity. This is the baseline value.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "projectedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-06-15",
                        "description": "If the activity has not yet started, enter the current projected start date (YYYY-MM-DD) of the activity.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "projectedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-08-19",
                        "description": "If the activity has not yet completed, enter the current planned completion date (YYYY-MM-DD)\nof the activity.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "actualStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-06-15",
                        "description": "When the activity starts, enter the actual start date (YYYY-MM-DD) here.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "actualEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-08-21",
                        "description": "When the activity ends, enter the actual completion date (YYYY-MM-DD) here.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "plannedTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 900,
                        "description": "The planned total cost for the activity. This is the baseline value. [$M] Note: For programs that are\nemploying earned value management, Agencies should reflect \"budget at completion\" in the \"Total Costs Planned\"\nColumn 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12."
                    },
                    "actualTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1100,
                        "description": "When the activity ends, enter the total actual costs for the activity here."
                    },
                    "projectedTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1000,
                        "description": "When the activity is not yet completed, enter the current planned total cost of the activity. [$M]\nNote: For programs that are employing earned value management, Agencies should reflect \"budget at completion\"\nin the \"Total Costs Planned\" Column 11 and “estimated at completion” in the \"Total Costs Projected\" Column 12."
                    },
                    "structureId": {
                        "type": "string",
                        "example": "GSAProj1.1.1",
                        "description": "Agency-specified identifier that indicates the work breakdown structure (WBS) the Agency uses to\nassociate the activity with other activities or a project. Provide this in the format of \"x.x.x.x.x\" where the\nfirst string is the Unique Project ID and each following string (separated by periods) matches the structure ID\nof a parent activity. See below for more guidance about parent and child activities expressed through this\nstructure. [x.x.x.x.x]"
                    }
                }
            },
            "Activity:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "activityName": {
                        "type": "string",
                        "example": "Authentication Configuration",
                        "description": "A short description consistent with the critical steps within the Agency project management methodology."
                    },
                    "description": {
                        "type": "string",
                        "example": "Allow relevant users to access CPIC data",
                        "description": "Brief description of primary goal/outcome the activity is planning to provide for the Investment upon\ncompletion."
                    },
                    "plannedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-05-13",
                        "description": "The planned start date (YYYY-MM-DD) for the activity. This is the baseline value.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "projectedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-06-15",
                        "description": "If the activity has not yet started, enter the current projected start date (YYYY-MM-DD) of the activity.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "actualStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-06-15",
                        "description": "When the activity starts, enter the actual start date (YYYY-MM-DD) here.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "plannedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-07-30",
                        "description": "The planned completion date (YYYY-MM-DD) for the activity. This is the baseline value.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "projectedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-08-19",
                        "description": "If the activity has not yet completed, enter the current planned completion date (YYYY-MM-DD)\nof the activity.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "actualEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-08-21",
                        "description": "When the activity ends, enter the actual completion date (YYYY-MM-DD) here.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "plannedTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 900,
                        "description": "The planned total cost for the activity. This is the baseline value. [$M] Note: For programs that are\nemploying earned value management, Agencies should reflect \"budget at completion\" in the \"Total Costs Planned\"\nColumn 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12."
                    },
                    "actualTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1100,
                        "description": "When the activity ends, enter the total actual costs for the activity here."
                    },
                    "projectedTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1000,
                        "description": "When the activity is not yet completed, enter the current planned total cost of the activity. [$M]\nNote: For programs that are employing earned value management, Agencies should reflect \"budget at completion\"\nin the \"Total Costs Planned\" Column 11 and “estimated at completion” in the \"Total Costs Projected\" Column 12."
                    },
                    "structureId": {
                        "type": "string",
                        "example": "GSAProj1.1.1",
                        "description": "Agency-specified identifier that indicates the work breakdown structure (WBS) the Agency uses to\nassociate the activity with other activities or a project. Provide this in the format of \"x.x.x.x.x\" where the\nfirst string is the Unique Project ID and each following string (separated by periods) matches the structure ID\nof a parent activity. See below for more guidance about parent and child activities expressed through this\nstructure. [x.x.x.x.x]"
                    }
                },
                "required": [
                    "activityName",
                    "description",
                    "plannedStartDate",
                    "projectedStartDate",
                    "actualStartDate",
                    "plannedEndDate",
                    "projectedEndDate",
                    "actualEndDate",
                    "plannedTotalCost",
                    "projectedTotalCost",
                    "structureId"
                ]
            },
            "Activity:jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "activityName": {
                        "type": "string",
                        "example": "Authentication Configuration",
                        "description": "A short description consistent with the critical steps within the Agency project management methodology."
                    },
                    "description": {
                        "type": "string",
                        "example": "Allow relevant users to access CPIC data",
                        "description": "Brief description of primary goal/outcome the activity is planning to provide for the Investment upon\ncompletion."
                    },
                    "plannedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-05-13",
                        "description": "The planned start date (YYYY-MM-DD) for the activity. This is the baseline value.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "plannedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-07-30",
                        "description": "The planned completion date (YYYY-MM-DD) for the activity. This is the baseline value.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "projectedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-06-15",
                        "description": "If the activity has not yet started, enter the current projected start date (YYYY-MM-DD) of the activity.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "projectedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-08-19",
                        "description": "If the activity has not yet completed, enter the current planned completion date (YYYY-MM-DD)\nof the activity.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "actualStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-06-15",
                        "description": "When the activity starts, enter the actual start date (YYYY-MM-DD) here.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "actualEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-08-21",
                        "description": "When the activity ends, enter the actual completion date (YYYY-MM-DD) here.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "plannedTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 900,
                        "description": "The planned total cost for the activity. This is the baseline value. [$M] Note: For programs that are\nemploying earned value management, Agencies should reflect \"budget at completion\" in the \"Total Costs Planned\"\nColumn 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12."
                    },
                    "actualTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1100,
                        "description": "When the activity ends, enter the total actual costs for the activity here."
                    },
                    "projectedTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1000,
                        "description": "When the activity is not yet completed, enter the current planned total cost of the activity. [$M]\nNote: For programs that are employing earned value management, Agencies should reflect \"budget at completion\"\nin the \"Total Costs Planned\" Column 11 and “estimated at completion” in the \"Total Costs Projected\" Column 12."
                    },
                    "structureId": {
                        "type": "string",
                        "example": "GSAProj1.1.1",
                        "description": "Agency-specified identifier that indicates the work breakdown structure (WBS) the Agency uses to\nassociate the activity with other activities or a project. Provide this in the format of \"x.x.x.x.x\" where the\nfirst string is the Unique Project ID and each following string (separated by periods) matches the structure ID\nof a parent activity. See below for more guidance about parent and child activities expressed through this\nstructure. [x.x.x.x.x]"
                    }
                },
                "required": [
                    "activityName",
                    "description",
                    "plannedStartDate",
                    "plannedEndDate",
                    "projectedStartDate",
                    "projectedEndDate",
                    "actualStartDate",
                    "actualEndDate",
                    "plannedTotalCost",
                    "projectedTotalCost",
                    "structureId"
                ]
            },
            "Activity:jsonld-write": {
                "type": "object",
                "description": "",
                "required": [
                    "activityName",
                    "description",
                    "plannedStartDate",
                    "plannedEndDate",
                    "projectedStartDate",
                    "projectedEndDate",
                    "actualStartDate",
                    "actualEndDate",
                    "plannedTotalCost",
                    "projectedTotalCost",
                    "structureId"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "activityName": {
                        "type": "string",
                        "example": "Authentication Configuration",
                        "description": "A short description consistent with the critical steps within the Agency project management methodology."
                    },
                    "description": {
                        "type": "string",
                        "example": "Allow relevant users to access CPIC data",
                        "description": "Brief description of primary goal/outcome the activity is planning to provide for the Investment upon\ncompletion."
                    },
                    "plannedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-05-13",
                        "description": "The planned start date (YYYY-MM-DD) for the activity. This is the baseline value.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "plannedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-07-30",
                        "description": "The planned completion date (YYYY-MM-DD) for the activity. This is the baseline value.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "projectedStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-06-15",
                        "description": "If the activity has not yet started, enter the current projected start date (YYYY-MM-DD) of the activity.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "projectedEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-08-19",
                        "description": "If the activity has not yet completed, enter the current planned completion date (YYYY-MM-DD)\nof the activity.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "actualStartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-06-15",
                        "description": "When the activity starts, enter the actual start date (YYYY-MM-DD) here.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "actualEndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-08-21",
                        "description": "When the activity ends, enter the actual completion date (YYYY-MM-DD) here.",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "plannedTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 900,
                        "description": "The planned total cost for the activity. This is the baseline value. [$M] Note: For programs that are\nemploying earned value management, Agencies should reflect \"budget at completion\" in the \"Total Costs Planned\"\nColumn 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12."
                    },
                    "actualTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1100,
                        "description": "When the activity ends, enter the total actual costs for the activity here."
                    },
                    "projectedTotalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 1000,
                        "description": "When the activity is not yet completed, enter the current planned total cost of the activity. [$M]\nNote: For programs that are employing earned value management, Agencies should reflect \"budget at completion\"\nin the \"Total Costs Planned\" Column 11 and “estimated at completion” in the \"Total Costs Projected\" Column 12."
                    },
                    "structureId": {
                        "type": "string",
                        "example": "GSAProj1.1.1",
                        "description": "Agency-specified identifier that indicates the work breakdown structure (WBS) the Agency uses to\nassociate the activity with other activities or a project. Provide this in the format of \"x.x.x.x.x\" where the\nfirst string is the Unique Project ID and each following string (separated by periods) matches the structure ID\nof a parent activity. See below for more guidance about parent and child activities expressed through this\nstructure. [x.x.x.x.x]"
                    }
                }
            },
            "AuditDoc:jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "parentSourceId": {
                        "type": "integer"
                    },
                    "sourceId": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "requestUrl": {
                        "type": "string"
                    },
                    "docType": {
                        "type": "string"
                    },
                    "auditUser": {
                        "type": "string"
                    },
                    "auditDateTime": {
                        "type": "string"
                    },
                    "auditAction": {
                        "type": "string"
                    },
                    "document": {
                        "description": "full version of the document",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "changedFields": {
                        "description": "change fields",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CioRating-write": {
                "type": "object",
                "description": "",
                "required": [
                    "rating"
                ],
                "properties": {
                    "rating": {
                        "type": "number",
                        "format": "integer",
                        "example": 5,
                        "description": "CIO’s best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n1 represents the lowest possible score and 5 represent the highest possible score."
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
                        "description": "Explanation and/or additional details regarding this reported value"
                    },
                    "date": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-10-01",
                        "description": "Provide the date of CIO Evaluation"
                    }
                }
            },
            "CioRating:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "rating": {
                        "type": "number",
                        "format": "integer",
                        "example": 5,
                        "description": "CIO’s best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n1 represents the lowest possible score and 5 represent the highest possible score."
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
                        "description": "Explanation and/or additional details regarding this reported value"
                    },
                    "date": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-10-01",
                        "description": "Provide the date of CIO Evaluation"
                    }
                },
                "required": [
                    "rating"
                ]
            },
            "CioRating:jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "rating": {
                        "type": "number",
                        "format": "integer",
                        "example": 5,
                        "description": "CIO’s best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n1 represents the lowest possible score and 5 represent the highest possible score."
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
                        "description": "Explanation and/or additional details regarding this reported value"
                    },
                    "date": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-10-01",
                        "description": "Provide the date of CIO Evaluation"
                    }
                },
                "required": [
                    "rating"
                ]
            },
            "CioRating:jsonld-readItem": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "rating": {
                        "type": "number",
                        "format": "integer",
                        "example": 5,
                        "description": "CIO’s best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n1 represents the lowest possible score and 5 represent the highest possible score."
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
                        "description": "Explanation and/or additional details regarding this reported value"
                    },
                    "date": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-10-01",
                        "description": "Provide the date of CIO Evaluation"
                    }
                },
                "required": [
                    "rating"
                ]
            },
            "CioRating:jsonld-readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "rating": {
                        "type": "number",
                        "format": "integer",
                        "example": 5,
                        "description": "CIO’s best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n1 represents the lowest possible score and 5 represent the highest possible score."
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
                        "description": "Explanation and/or additional details regarding this reported value"
                    },
                    "date": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-10-01",
                        "description": "Provide the date of CIO Evaluation"
                    }
                },
                "required": [
                    "rating"
                ]
            },
            "CioRating:jsonld-write": {
                "type": "object",
                "description": "",
                "required": [
                    "rating"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "rating": {
                        "type": "number",
                        "format": "integer",
                        "example": 5,
                        "description": "CIO’s best judgment of the current level of risk for the Investment in terms of its ability\nto accomplish its goals (per 40 U.S.C. § 11315 (c)(2)).\n1 represents the lowest possible score and 5 represent the highest possible score."
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "CIO Evaluation Report on 10/1/2020 produced a score of 5.",
                        "description": "Explanation and/or additional details regarding this reported value"
                    },
                    "date": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-10-01",
                        "description": "Provide the date of CIO Evaluation"
                    }
                }
            },
            "Contract-write": {
                "type": "object",
                "description": "",
                "required": [
                    "PIID"
                ],
                "properties": {
                    "PIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-00-000-00",
                        "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
                    },
                    "referencePIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-123-000",
                        "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c."
                    }
                }
            },
            "Contract:jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "PIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-00-000-00",
                        "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
                    },
                    "referencePIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-123-000",
                        "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c."
                    }
                },
                "required": [
                    "PIID"
                ]
            },
            "Contract:jsonld-readItem": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "PIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-00-000-00",
                        "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
                    },
                    "referencePIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-123-000",
                        "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c."
                    }
                },
                "required": [
                    "PIID"
                ]
            },
            "Contract:jsonld-readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "PIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-00-000-00",
                        "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
                    },
                    "referencePIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-123-000",
                        "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c."
                    }
                },
                "required": [
                    "PIID"
                ]
            },
            "Contract:jsonld-write": {
                "type": "object",
                "description": "",
                "required": [
                    "PIID"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "PIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-00-000-00",
                        "description": "The unique identifier for each contract, agreement, or order associated with this\nInvestment (Federal Procurement Data Systems (FPDS) data element 1A).\nEnter PIID numbers for contacts, agreements, or orders both that have already been awarded.\nCompleted and/or expired contracts do not need to be included.\nData definitions can be found at Federal Procurement Data System.\nPlease note that reference PIIDs should not be entered for this field."
                    },
                    "referencePIID": {
                        "type": "string",
                        "format": "string",
                        "example": "IT-123-000",
                        "description": "For each PIID number reported for contract support obtained via an order or call,\nreport the Reference PIID per FPDS instructions for element 1c."
                    }
                }
            },
            "Ledger-write": {
                "type": "object",
                "description": "",
                "properties": {
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given ledger\nitem"
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2024,
                        "description": "Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.  <br/>O&M: Operations & Maintenance Costs refers to the expenses required to\noperate and maintain an IT asset that is operating in a production environment.  <br/>DME: Development, Modernization,\nand Enhancement refers to projects and activities leading to new IT assets/systems, as well as projects and\nactivities that change or modify existing IT assets to substantively improve capability or performance, implement\nlegislative or regulatory requirements, or meet an Agency leadership request. DME activity may occur at any time\nduring a program’s life cycle."
                    },
                    "costPool": {
                        "type": "string",
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
                    },
                    "ITTower": {
                        "type": "string",
                        "example": "Outside Service",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
                    },
                    "budgetYear": {
                        "type": "number",
                        "format": "year",
                        "example": 2023,
                        "description": "For all ledger items, Agencies should indicate the budget reporting year associated with the\nrequest. For example, submissions during the BY 2023 submission period that describe PY funding should use the\nfollowing data points: Budget Year of 2023 and Fiscal Year of 2021"
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "023-00-0000",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated with a\ngiven ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Agency Funding",
                            "Contributions"
                        ],
                        "example": "Agency Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'"
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field."
                    }
                },
                "required": [
                    "year",
                    "amount",
                    "budgetYear",
                    "ledgerElementStyle"
                ]
            },
            "Ledger:jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given ledger\nitem"
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2024,
                        "description": "Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.  <br/>O&M: Operations & Maintenance Costs refers to the expenses required to\noperate and maintain an IT asset that is operating in a production environment.  <br/>DME: Development, Modernization,\nand Enhancement refers to projects and activities leading to new IT assets/systems, as well as projects and\nactivities that change or modify existing IT assets to substantively improve capability or performance, implement\nlegislative or regulatory requirements, or meet an Agency leadership request. DME activity may occur at any time\nduring a program’s life cycle."
                    },
                    "costPool": {
                        "type": "string",
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
                    },
                    "ITTower": {
                        "type": "string",
                        "example": "Outside Service",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
                    },
                    "budgetYear": {
                        "type": "number",
                        "format": "year",
                        "example": 2023,
                        "description": "For all ledger items, Agencies should indicate the budget reporting year associated with the\nrequest. For example, submissions during the BY 2023 submission period that describe PY funding should use the\nfollowing data points: Budget Year of 2023 and Fiscal Year of 2021"
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "023-00-0000",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated with a\ngiven ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Agency Funding",
                            "Contributions"
                        ],
                        "example": "Agency Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'"
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field."
                    }
                },
                "required": [
                    "year",
                    "amount",
                    "budgetYear",
                    "ledgerElementStyle"
                ]
            },
            "Ledger:jsonld-readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    }
                }
            },
            "Ledger:jsonld-write": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "costItem": {
                        "type": "string",
                        "example": "IT Dashboard Infrastructure Expense",
                        "description": "Optional descriptive name detailing the type of funding information provided within  given ledger\nitem"
                    },
                    "year": {
                        "type": "number",
                        "format": "year",
                        "example": 2024,
                        "description": "Fiscal year associated with the funding in a given ledger item"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 100,
                        "description": "Funding amount for a ledger item"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "O&M",
                            "DME"
                        ],
                        "example": "O&M",
                        "description": "Select either O&M or DME.  <br/>O&M: Operations & Maintenance Costs refers to the expenses required to\noperate and maintain an IT asset that is operating in a production environment.  <br/>DME: Development, Modernization,\nand Enhancement refers to projects and activities leading to new IT assets/systems, as well as projects and\nactivities that change or modify existing IT assets to substantively improve capability or performance, implement\nlegislative or regulatory requirements, or meet an Agency leadership request. DME activity may occur at any time\nduring a program’s life cycle."
                    },
                    "costPool": {
                        "type": "string",
                        "example": "Data Center",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a Cost Pool per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
                    },
                    "ITTower": {
                        "type": "string",
                        "example": "Outside Service",
                        "description": "For ledger items selecting TBM reporting, Agencies can align funding against a IT Tower per the\ndefinitions for TBM v3.0 provided online by the TBM Council"
                    },
                    "budgetYear": {
                        "type": "number",
                        "format": "year",
                        "example": 2023,
                        "description": "For all ledger items, Agencies should indicate the budget reporting year associated with the\nrequest. For example, submissions during the BY 2023 submission period that describe PY funding should use the\nfollowing data points: Budget Year of 2023 and Fiscal Year of 2021"
                    },
                    "fundingSource": {
                        "type": "string",
                        "example": "023-00-0000",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate the Funding Source associated with a\ngiven ledger item."
                    },
                    "source": {
                        "type": "string",
                        "enum": [
                            "Agency Funding",
                            "Contributions"
                        ],
                        "example": "Agency Funding",
                        "description": "For ledger items selecting Funding Sources Reporting, indicate whether the funding is associated\nwith 'Agency Funding' or 'Contributions'"
                    },
                    "ledgerElementStyle": {
                        "type": "string",
                        "enum": [
                            "Funding Sources Only",
                            "TBM Only",
                            "All"
                        ],
                        "example": "TBM Only",
                        "description": "Indicate the type of funding data a given ledger request will provide to IT Collect. This field's\nselection will trigger a series of validation checks to ensure that Agencies are providing and omitting the\nrelevant data points for either Funding Sources or TBM reporting. Funding Sources reporting will mandate the\ninclusion of the Funding Source, Source, and Type fields. TBM reporting will mandate the inclusion of either\nthe Cost Pool or IT Tower field."
                    }
                },
                "required": [
                    "year",
                    "amount",
                    "budgetYear",
                    "ledgerElementStyle"
                ]
            },
            "Metric-write": {
                "type": "object",
                "description": "",
                "required": [
                    "name",
                    "description",
                    "performanceMeasurementCategory",
                    "reportingFrequency",
                    "measurementCondition",
                    "currentYearTarget"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "System Availability",
                        "description": "Name of metric"
                    },
                    "description": {
                        "type": "string",
                        "example": "Percent of Time System is Available for End Users",
                        "description": "Description to help the user understand what is being measured. In this field, describe the units\nused, any calculation algorithm used, and the definition or limits of the population or \"universe\" measured"
                    },
                    "performanceMeasurementCategory": {
                        "type": "string",
                        "enum": [
                            "Customer Satisfaction",
                            "Strategic and Business Results",
                            "Financial Performance",
                            "Innovation"
                        ],
                        "example": "Customer Satisfaction",
                        "description": "Select the applicable performance measurement category"
                    },
                    "agencyPriorityGoalCode": {
                        "type": "string",
                        "example": "023APG0000",
                        "description": "Each Investment must have at least one active metric in the Strategic and Business Results category\n(of any reporting frequency) tied to the foremost Agency strategic objective (SO), or Agency priority goal (APG)\n(as required by A-11 Section 230 and Section 250 respectively). Provide that code for the associated metric using\nthe appropriate alphanumeric identifier provided by performance.gov."
                    },
                    "reportingFrequency": {
                        "type": "string",
                        "enum": [
                            "Monthly",
                            "Quarterly",
                            "Semi-Annual",
                            "Annual"
                        ],
                        "example": "Monthly",
                        "description": "How often actual measurements will be reported (monthly, quarterly, semi-annually, or annually).\nAnnual reporting frequencies are reserved for annual operating cost measures, performance measures associated\nwith the Agency's annual performance plan, or other measures that can only be appropriately measured on an annual\nbasis."
                    },
                    "measurementCondition": {
                        "type": "string",
                        "enum": [
                            "Over target",
                            "Under target"
                        ],
                        "example": "Over target",
                        "description": "Indicates whether a desired result would be \"over target,\" indicating that the trend should maintain\nor increase, or \"under target,\" indicating that the trend should maintain or decrease."
                    },
                    "previousYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Previous year target"
                    },
                    "currentYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Current year target"
                    },
                    "baselineCapability": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99,
                        "description": "What was the quantitative value of your Agency's capability per this metric prior tothis Investment's\nlife cycle. If your Agency has not measured this capability before, you may leave this field blank; otherwise,\nprovide the numeric value of the historic capability measurement."
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "format": "string",
                        "example": "Percent",
                        "description": "Brief indication of what quantity is measured (e.g., number, percentage, dollar value) for each\nmetric."
                    }
                }
            },
            "Metric:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "description": "The metric identifier",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "example": "System Availability",
                        "description": "Name of metric"
                    },
                    "performanceMeasurementCategory": {
                        "type": "string",
                        "enum": [
                            "Customer Satisfaction",
                            "Strategic and Business Results",
                            "Financial Performance",
                            "Innovation"
                        ],
                        "example": "Customer Satisfaction",
                        "description": "Select the applicable performance measurement category"
                    },
                    "agencyPriorityGoalCode": {
                        "type": "string",
                        "example": "023APG0000",
                        "description": "Each Investment must have at least one active metric in the Strategic and Business Results category\n(of any reporting frequency) tied to the foremost Agency strategic objective (SO), or Agency priority goal (APG)\n(as required by A-11 Section 230 and Section 250 respectively). Provide that code for the associated metric using\nthe appropriate alphanumeric identifier provided by performance.gov."
                    },
                    "reportingFrequency": {
                        "type": "string",
                        "enum": [
                            "Monthly",
                            "Quarterly",
                            "Semi-Annual",
                            "Annual"
                        ],
                        "example": "Monthly",
                        "description": "How often actual measurements will be reported (monthly, quarterly, semi-annually, or annually).\nAnnual reporting frequencies are reserved for annual operating cost measures, performance measures associated\nwith the Agency's annual performance plan, or other measures that can only be appropriately measured on an annual\nbasis."
                    },
                    "measurementCondition": {
                        "type": "string",
                        "enum": [
                            "Over target",
                            "Under target"
                        ],
                        "example": "Over target",
                        "description": "Indicates whether a desired result would be \"over target,\" indicating that the trend should maintain\nor increase, or \"under target,\" indicating that the trend should maintain or decrease."
                    },
                    "previousYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Previous year target"
                    },
                    "currentYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Current year target"
                    },
                    "baselineCapability": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99,
                        "description": "What was the quantitative value of your Agency's capability per this metric prior tothis Investment's\nlife cycle. If your Agency has not measured this capability before, you may leave this field blank; otherwise,\nprovide the numeric value of the historic capability measurement."
                    },
                    "actuals": {
                        "readOnly": true,
                        "description": "Embedded MetricActual Objects",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "description": {
                        "type": "string",
                        "example": "Percent of Time System is Available for End Users",
                        "description": "Description to help the user understand what is being measured. In this field, describe the units\nused, any calculation algorithm used, and the definition or limits of the population or \"universe\" measured"
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "format": "string",
                        "example": "Percent",
                        "description": "Brief indication of what quantity is measured (e.g., number, percentage, dollar value) for each\nmetric."
                    }
                },
                "required": [
                    "name",
                    "performanceMeasurementCategory",
                    "reportingFrequency",
                    "measurementCondition",
                    "currentYearTarget",
                    "description"
                ]
            },
            "Metric:jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The metric identifier",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "example": "System Availability",
                        "description": "Name of metric"
                    },
                    "description": {
                        "type": "string",
                        "example": "Percent of Time System is Available for End Users",
                        "description": "Description to help the user understand what is being measured. In this field, describe the units\nused, any calculation algorithm used, and the definition or limits of the population or \"universe\" measured"
                    },
                    "performanceMeasurementCategory": {
                        "type": "string",
                        "enum": [
                            "Customer Satisfaction",
                            "Strategic and Business Results",
                            "Financial Performance",
                            "Innovation"
                        ],
                        "example": "Customer Satisfaction",
                        "description": "Select the applicable performance measurement category"
                    },
                    "agencyPriorityGoalCode": {
                        "type": "string",
                        "example": "023APG0000",
                        "description": "Each Investment must have at least one active metric in the Strategic and Business Results category\n(of any reporting frequency) tied to the foremost Agency strategic objective (SO), or Agency priority goal (APG)\n(as required by A-11 Section 230 and Section 250 respectively). Provide that code for the associated metric using\nthe appropriate alphanumeric identifier provided by performance.gov."
                    },
                    "reportingFrequency": {
                        "type": "string",
                        "enum": [
                            "Monthly",
                            "Quarterly",
                            "Semi-Annual",
                            "Annual"
                        ],
                        "example": "Monthly",
                        "description": "How often actual measurements will be reported (monthly, quarterly, semi-annually, or annually).\nAnnual reporting frequencies are reserved for annual operating cost measures, performance measures associated\nwith the Agency's annual performance plan, or other measures that can only be appropriately measured on an annual\nbasis."
                    },
                    "measurementCondition": {
                        "type": "string",
                        "enum": [
                            "Over target",
                            "Under target"
                        ],
                        "example": "Over target",
                        "description": "Indicates whether a desired result would be \"over target,\" indicating that the trend should maintain\nor increase, or \"under target,\" indicating that the trend should maintain or decrease."
                    },
                    "previousYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Previous year target"
                    },
                    "currentYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Current year target"
                    },
                    "baselineCapability": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99,
                        "description": "What was the quantitative value of your Agency's capability per this metric prior tothis Investment's\nlife cycle. If your Agency has not measured this capability before, you may leave this field blank; otherwise,\nprovide the numeric value of the historic capability measurement."
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "format": "string",
                        "example": "Percent",
                        "description": "Brief indication of what quantity is measured (e.g., number, percentage, dollar value) for each\nmetric."
                    }
                },
                "required": [
                    "name",
                    "description",
                    "performanceMeasurementCategory",
                    "reportingFrequency",
                    "measurementCondition",
                    "currentYearTarget"
                ]
            },
            "Metric:jsonld-write": {
                "type": "object",
                "description": "",
                "required": [
                    "name",
                    "description",
                    "performanceMeasurementCategory",
                    "reportingFrequency",
                    "measurementCondition",
                    "currentYearTarget"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "example": "System Availability",
                        "description": "Name of metric"
                    },
                    "description": {
                        "type": "string",
                        "example": "Percent of Time System is Available for End Users",
                        "description": "Description to help the user understand what is being measured. In this field, describe the units\nused, any calculation algorithm used, and the definition or limits of the population or \"universe\" measured"
                    },
                    "performanceMeasurementCategory": {
                        "type": "string",
                        "enum": [
                            "Customer Satisfaction",
                            "Strategic and Business Results",
                            "Financial Performance",
                            "Innovation"
                        ],
                        "example": "Customer Satisfaction",
                        "description": "Select the applicable performance measurement category"
                    },
                    "agencyPriorityGoalCode": {
                        "type": "string",
                        "example": "023APG0000",
                        "description": "Each Investment must have at least one active metric in the Strategic and Business Results category\n(of any reporting frequency) tied to the foremost Agency strategic objective (SO), or Agency priority goal (APG)\n(as required by A-11 Section 230 and Section 250 respectively). Provide that code for the associated metric using\nthe appropriate alphanumeric identifier provided by performance.gov."
                    },
                    "reportingFrequency": {
                        "type": "string",
                        "enum": [
                            "Monthly",
                            "Quarterly",
                            "Semi-Annual",
                            "Annual"
                        ],
                        "example": "Monthly",
                        "description": "How often actual measurements will be reported (monthly, quarterly, semi-annually, or annually).\nAnnual reporting frequencies are reserved for annual operating cost measures, performance measures associated\nwith the Agency's annual performance plan, or other measures that can only be appropriately measured on an annual\nbasis."
                    },
                    "measurementCondition": {
                        "type": "string",
                        "enum": [
                            "Over target",
                            "Under target"
                        ],
                        "example": "Over target",
                        "description": "Indicates whether a desired result would be \"over target,\" indicating that the trend should maintain\nor increase, or \"under target,\" indicating that the trend should maintain or decrease."
                    },
                    "previousYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Previous year target"
                    },
                    "currentYearTarget": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.5,
                        "description": "Current year target"
                    },
                    "baselineCapability": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99,
                        "description": "What was the quantitative value of your Agency's capability per this metric prior tothis Investment's\nlife cycle. If your Agency has not measured this capability before, you may leave this field blank; otherwise,\nprovide the numeric value of the historic capability measurement."
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "format": "string",
                        "example": "Percent",
                        "description": "Brief indication of what quantity is measured (e.g., number, percentage, dollar value) for each\nmetric."
                    }
                }
            },
            "MetricActuals-write": {
                "type": "object",
                "description": "",
                "required": [
                    "result",
                    "date"
                ],
                "properties": {
                    "result": {
                        "type": "number",
                        "format": "decimal",
                        "description": "Result metric actual",
                        "example": 100
                    },
                    "date": {
                        "type": "date",
                        "format": "date",
                        "description": "Date of Metric Actual Results",
                        "example": "2020-09-30",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "September 2020 result"
                    }
                }
            },
            "MetricActuals:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "description": "The metric identifier",
                        "type": "integer"
                    },
                    "result": {
                        "type": "number",
                        "format": "decimal",
                        "description": "Result metric actual",
                        "example": 100
                    },
                    "date": {
                        "type": "date",
                        "format": "date",
                        "description": "Date of Metric Actual Results",
                        "example": "2020-09-30",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "September 2020 result"
                    }
                },
                "required": [
                    "result",
                    "date"
                ]
            },
            "MetricActuals:jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The metric identifier",
                        "type": "integer"
                    },
                    "result": {
                        "type": "number",
                        "format": "decimal",
                        "description": "Result metric actual",
                        "example": 100
                    },
                    "date": {
                        "type": "date",
                        "format": "date",
                        "description": "Date of Metric Actual Results",
                        "example": "2020-09-30",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "September 2020 result"
                    }
                },
                "required": [
                    "result",
                    "date"
                ]
            },
            "MetricActuals:jsonld-write": {
                "type": "object",
                "description": "",
                "required": [
                    "result",
                    "date"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "result": {
                        "type": "number",
                        "format": "decimal",
                        "description": "Result metric actual",
                        "example": 100
                    },
                    "date": {
                        "type": "date",
                        "format": "date",
                        "description": "Date of Metric Actual Results",
                        "example": "2020-09-30",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "comment": {
                        "type": "string",
                        "format": "string",
                        "example": "September 2020 result"
                    }
                }
            },
            "Products": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "system": {
                        "readOnly": true,
                        "description": "Should contain the IRI or ID of a System in the Products Document",
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "productName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Product",
                        "description": "Indicate the official product name (e.g., Enterprise Business Suite, Momentum, HCM)."
                    },
                    "versionNumber": {
                        "type": "number",
                        "format": "decimal",
                        "example": 1.1,
                        "description": "Indicate the Product Name version number to at least the first minor version digit (e.g., 12.1, 9.2, etc.)."
                    },
                    "vendorName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Vendor Name",
                        "description": "Indicate the official vendor name (e.g., Oracle, SAP, CGI, GSA) for the specific product (i.e., non-integrated services)."
                    },
                    "lastMajorTechRefresh": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-09-23",
                        "description": "Provide the date that the product last had a major refreshment, replacement, or addition of hardware or software (not patching)."
                    },
                    "anticipatedTechRefresh": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-01-15'",
                        "description": "Provide, if applicable, the anticipated date that the product will have its next major refreshment, replacement or addition of hardware or software (not patching)."
                    },
                    "productExpectEndOfLife": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-01-30",
                        "description": "If there is no planned end of life, enter “N/A”. End of Life represents the date on which the vendor\nis no longer providing regular support (extended support for a software version for example is outside of the expected end of life)\nfor a solution, or the original manufacturer is no longer manufacturing parts."
                    }
                },
                "required": [
                    "productName"
                ]
            },
            "Products-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "productName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Product",
                        "description": "Indicate the official product name (e.g., Enterprise Business Suite, Momentum, HCM)."
                    },
                    "vendorName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Vendor Name",
                        "description": "Indicate the official vendor name (e.g., Oracle, SAP, CGI, GSA) for the specific product (i.e., non-integrated services)."
                    },
                    "versionNumber": {
                        "type": "number",
                        "format": "decimal",
                        "example": 1.1,
                        "description": "Indicate the Product Name version number to at least the first minor version digit (e.g., 12.1, 9.2, etc.)."
                    },
                    "lastMajorTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-09-23",
                        "description": "Provide the date that the product last had a major refreshment, replacement, or addition of hardware or software (not patching)."
                    },
                    "anticipatedTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2021-01-15'",
                        "description": "Provide, if applicable, the anticipated date that the product will have its next major refreshment, replacement or addition of hardware or software (not patching)."
                    },
                    "productExpectEndOfLife": {
                        "type": "date",
                        "format": "string",
                        "example": "2023-01-30",
                        "description": "If there is no planned end of life, enter “N/A”. End of Life represents the date on which the vendor\nis no longer providing regular support (extended support for a software version for example is outside of the expected end of life)\nfor a solution, or the original manufacturer is no longer manufacturing parts."
                    }
                },
                "required": [
                    "productName"
                ]
            },
            "Products-readItem": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "productName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Product",
                        "description": "Indicate the official product name (e.g., Enterprise Business Suite, Momentum, HCM)."
                    },
                    "vendorName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Vendor Name",
                        "description": "Indicate the official vendor name (e.g., Oracle, SAP, CGI, GSA) for the specific product (i.e., non-integrated services)."
                    },
                    "versionNumber": {
                        "type": "number",
                        "format": "decimal",
                        "example": 1.1,
                        "description": "Indicate the Product Name version number to at least the first minor version digit (e.g., 12.1, 9.2, etc.)."
                    },
                    "lastMajorTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-09-23",
                        "description": "Provide the date that the product last had a major refreshment, replacement, or addition of hardware or software (not patching)."
                    },
                    "anticipatedTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2021-01-15'",
                        "description": "Provide, if applicable, the anticipated date that the product will have its next major refreshment, replacement or addition of hardware or software (not patching)."
                    },
                    "productExpectEndOfLife": {
                        "type": "date",
                        "format": "string",
                        "example": "2023-01-30",
                        "description": "If there is no planned end of life, enter “N/A”. End of Life represents the date on which the vendor\nis no longer providing regular support (extended support for a software version for example is outside of the expected end of life)\nfor a solution, or the original manufacturer is no longer manufacturing parts."
                    }
                },
                "required": [
                    "productName"
                ]
            },
            "Products-write": {
                "type": "object",
                "description": "",
                "required": [
                    "productName"
                ],
                "properties": {
                    "productName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Product",
                        "description": "Indicate the official product name (e.g., Enterprise Business Suite, Momentum, HCM)."
                    },
                    "vendorName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Vendor Name",
                        "description": "Indicate the official vendor name (e.g., Oracle, SAP, CGI, GSA) for the specific product (i.e., non-integrated services)."
                    },
                    "versionNumber": {
                        "type": "number",
                        "format": "decimal",
                        "example": 1.1,
                        "description": "Indicate the Product Name version number to at least the first minor version digit (e.g., 12.1, 9.2, etc.)."
                    },
                    "lastMajorTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-09-23",
                        "description": "Provide the date that the product last had a major refreshment, replacement, or addition of hardware or software (not patching)."
                    },
                    "anticipatedTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2021-01-15'",
                        "description": "Provide, if applicable, the anticipated date that the product will have its next major refreshment, replacement or addition of hardware or software (not patching)."
                    },
                    "productExpectEndOfLife": {
                        "type": "date",
                        "format": "string",
                        "example": "2023-01-30",
                        "description": "If there is no planned end of life, enter “N/A”. End of Life represents the date on which the vendor\nis no longer providing regular support (extended support for a software version for example is outside of the expected end of life)\nfor a solution, or the original manufacturer is no longer manufacturing parts."
                    }
                }
            },
            "Products:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "system": {
                        "readOnly": true,
                        "description": "Should contain the IRI or ID of a System in the Products Document",
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "productName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Product",
                        "description": "Indicate the official product name (e.g., Enterprise Business Suite, Momentum, HCM)."
                    },
                    "versionNumber": {
                        "type": "number",
                        "format": "decimal",
                        "example": 1.1,
                        "description": "Indicate the Product Name version number to at least the first minor version digit (e.g., 12.1, 9.2, etc.)."
                    },
                    "vendorName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Vendor Name",
                        "description": "Indicate the official vendor name (e.g., Oracle, SAP, CGI, GSA) for the specific product (i.e., non-integrated services)."
                    },
                    "lastMajorTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-09-23",
                        "description": "Provide the date that the product last had a major refreshment, replacement, or addition of hardware or software (not patching)."
                    },
                    "anticipatedTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2021-01-15'",
                        "description": "Provide, if applicable, the anticipated date that the product will have its next major refreshment, replacement or addition of hardware or software (not patching)."
                    },
                    "productExpectEndOfLife": {
                        "type": "date",
                        "format": "string",
                        "example": "2023-01-30",
                        "description": "If there is no planned end of life, enter “N/A”. End of Life represents the date on which the vendor\nis no longer providing regular support (extended support for a software version for example is outside of the expected end of life)\nfor a solution, or the original manufacturer is no longer manufacturing parts."
                    }
                },
                "required": [
                    "productName"
                ]
            },
            "Products:jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "productName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Product",
                        "description": "Indicate the official product name (e.g., Enterprise Business Suite, Momentum, HCM)."
                    },
                    "vendorName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Vendor Name",
                        "description": "Indicate the official vendor name (e.g., Oracle, SAP, CGI, GSA) for the specific product (i.e., non-integrated services)."
                    },
                    "versionNumber": {
                        "type": "number",
                        "format": "decimal",
                        "example": 1.1,
                        "description": "Indicate the Product Name version number to at least the first minor version digit (e.g., 12.1, 9.2, etc.)."
                    },
                    "lastMajorTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-09-23",
                        "description": "Provide the date that the product last had a major refreshment, replacement, or addition of hardware or software (not patching)."
                    },
                    "anticipatedTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2021-01-15'",
                        "description": "Provide, if applicable, the anticipated date that the product will have its next major refreshment, replacement or addition of hardware or software (not patching)."
                    },
                    "productExpectEndOfLife": {
                        "type": "date",
                        "format": "string",
                        "example": "2023-01-30",
                        "description": "If there is no planned end of life, enter “N/A”. End of Life represents the date on which the vendor\nis no longer providing regular support (extended support for a software version for example is outside of the expected end of life)\nfor a solution, or the original manufacturer is no longer manufacturing parts."
                    }
                },
                "required": [
                    "productName"
                ]
            },
            "Products:jsonld-readItem": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "productName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Product",
                        "description": "Indicate the official product name (e.g., Enterprise Business Suite, Momentum, HCM)."
                    },
                    "vendorName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Vendor Name",
                        "description": "Indicate the official vendor name (e.g., Oracle, SAP, CGI, GSA) for the specific product (i.e., non-integrated services)."
                    },
                    "versionNumber": {
                        "type": "number",
                        "format": "decimal",
                        "example": 1.1,
                        "description": "Indicate the Product Name version number to at least the first minor version digit (e.g., 12.1, 9.2, etc.)."
                    },
                    "lastMajorTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-09-23",
                        "description": "Provide the date that the product last had a major refreshment, replacement, or addition of hardware or software (not patching)."
                    },
                    "anticipatedTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2021-01-15'",
                        "description": "Provide, if applicable, the anticipated date that the product will have its next major refreshment, replacement or addition of hardware or software (not patching)."
                    },
                    "productExpectEndOfLife": {
                        "type": "date",
                        "format": "string",
                        "example": "2023-01-30",
                        "description": "If there is no planned end of life, enter “N/A”. End of Life represents the date on which the vendor\nis no longer providing regular support (extended support for a software version for example is outside of the expected end of life)\nfor a solution, or the original manufacturer is no longer manufacturing parts."
                    }
                },
                "required": [
                    "productName"
                ]
            },
            "Products:jsonld-readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "productName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Product",
                        "description": "Indicate the official product name (e.g., Enterprise Business Suite, Momentum, HCM)."
                    },
                    "vendorName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Vendor Name",
                        "description": "Indicate the official vendor name (e.g., Oracle, SAP, CGI, GSA) for the specific product (i.e., non-integrated services)."
                    },
                    "versionNumber": {
                        "type": "number",
                        "format": "decimal",
                        "example": 1.1,
                        "description": "Indicate the Product Name version number to at least the first minor version digit (e.g., 12.1, 9.2, etc.)."
                    },
                    "lastMajorTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-09-23",
                        "description": "Provide the date that the product last had a major refreshment, replacement, or addition of hardware or software (not patching)."
                    },
                    "anticipatedTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2021-01-15'",
                        "description": "Provide, if applicable, the anticipated date that the product will have its next major refreshment, replacement or addition of hardware or software (not patching)."
                    },
                    "productExpectEndOfLife": {
                        "type": "date",
                        "format": "string",
                        "example": "2023-01-30",
                        "description": "If there is no planned end of life, enter “N/A”. End of Life represents the date on which the vendor\nis no longer providing regular support (extended support for a software version for example is outside of the expected end of life)\nfor a solution, or the original manufacturer is no longer manufacturing parts."
                    },
                    "system": {
                        "description": "Should contain the IRI or ID of a System in the Products Document",
                        "$ref": "#/components/schemas/Systems:jsonld-readItem_readItemSubRes"
                    }
                },
                "required": [
                    "productName"
                ]
            },
            "Products:jsonld-write": {
                "type": "object",
                "description": "",
                "required": [
                    "productName"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "productName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Product",
                        "description": "Indicate the official product name (e.g., Enterprise Business Suite, Momentum, HCM)."
                    },
                    "vendorName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example Vendor Name",
                        "description": "Indicate the official vendor name (e.g., Oracle, SAP, CGI, GSA) for the specific product (i.e., non-integrated services)."
                    },
                    "versionNumber": {
                        "type": "number",
                        "format": "decimal",
                        "example": 1.1,
                        "description": "Indicate the Product Name version number to at least the first minor version digit (e.g., 12.1, 9.2, etc.)."
                    },
                    "lastMajorTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-09-23",
                        "description": "Provide the date that the product last had a major refreshment, replacement, or addition of hardware or software (not patching)."
                    },
                    "anticipatedTechRefresh": {
                        "type": "date",
                        "format": "string",
                        "example": "2021-01-15'",
                        "description": "Provide, if applicable, the anticipated date that the product will have its next major refreshment, replacement or addition of hardware or software (not patching)."
                    },
                    "productExpectEndOfLife": {
                        "type": "date",
                        "format": "string",
                        "example": "2023-01-30",
                        "description": "If there is no planned end of life, enter “N/A”. End of Life represents the date on which the vendor\nis no longer providing regular support (extended support for a software version for example is outside of the expected end of life)\nfor a solution, or the original manufacturer is no longer manufacturing parts."
                    }
                }
            },
            "Projects-write": {
                "type": "object",
                "description": "",
                "required": [
                    "projectId",
                    "projectName",
                    "projectGoal",
                    "startDate",
                    "endDate",
                    "totalCost",
                    "softwareProject"
                ],
                "properties": {
                    "projectId": {
                        "type": "string",
                        "format": "string",
                        "example": "GSAProj1",
                        "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
                    },
                    "projectName": {
                        "type": "string",
                        "format": "string",
                        "example": "API Submissions Development",
                        "description": "Name used by the Agency to refer specifically to the project."
                    },
                    "projectGoal": {
                        "type": "string",
                        "format": "string",
                        "example": "Develop a mechanism to collect CPIC data'",
                        "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment upon completion."
                    },
                    "startDate": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-08-15",
                        "description": "Planned start date of in-progress projects or planned start of projects that have not yet begun\n(may be before the current FY or activities listed in Table C.2). [MM-DD-YYYY]",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "endDate": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-11-20",
                        "description": "Planned date of completion of in-progress projects or actual completion date of projects that have been\ncompleted (may be after BY or completion date of activities listed in activities Table C.2). [MM-DD-YYYY]",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 100,
                        "description": "The planned total cost for the activity. This is the baseline value. [$M]  Note: For programs that are employing earned value management, Agencies should\nreflect \"budget at completion\" in the \"Total Costs Planned\" Column 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12."
                    },
                    "softwareProject": {
                        "type": "string",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "example": "Yes"
                    }
                }
            },
            "Projects:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "projectId": {
                        "type": "string",
                        "format": "string",
                        "example": "GSAProj1",
                        "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
                    },
                    "projectName": {
                        "type": "string",
                        "format": "string",
                        "example": "API Submissions Development",
                        "description": "Name used by the Agency to refer specifically to the project."
                    },
                    "projectGoal": {
                        "type": "string",
                        "format": "string",
                        "example": "Develop a mechanism to collect CPIC data'",
                        "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment upon completion."
                    },
                    "startDate": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-08-15",
                        "description": "Planned start date of in-progress projects or planned start of projects that have not yet begun\n(may be before the current FY or activities listed in Table C.2). [MM-DD-YYYY]",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "endDate": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-11-20",
                        "description": "Planned date of completion of in-progress projects or actual completion date of projects that have been\ncompleted (may be after BY or completion date of activities listed in activities Table C.2). [MM-DD-YYYY]",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 100,
                        "description": "The planned total cost for the activity. This is the baseline value. [$M]  Note: For programs that are employing earned value management, Agencies should\nreflect \"budget at completion\" in the \"Total Costs Planned\" Column 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12."
                    },
                    "softwareProject": {
                        "type": "string",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "example": "Yes"
                    },
                    "activities": {
                        "readOnly": true,
                        "description": "Embedded Project Objects",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    }
                },
                "required": [
                    "projectId",
                    "projectName",
                    "projectGoal",
                    "startDate",
                    "endDate",
                    "totalCost",
                    "softwareProject"
                ]
            },
            "Projects:jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "projectId": {
                        "type": "string",
                        "format": "string",
                        "example": "GSAProj1",
                        "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
                    },
                    "projectName": {
                        "type": "string",
                        "format": "string",
                        "example": "API Submissions Development",
                        "description": "Name used by the Agency to refer specifically to the project."
                    },
                    "projectGoal": {
                        "type": "string",
                        "format": "string",
                        "example": "Develop a mechanism to collect CPIC data'",
                        "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment upon completion."
                    },
                    "startDate": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-08-15",
                        "description": "Planned start date of in-progress projects or planned start of projects that have not yet begun\n(may be before the current FY or activities listed in Table C.2). [MM-DD-YYYY]",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "endDate": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-11-20",
                        "description": "Planned date of completion of in-progress projects or actual completion date of projects that have been\ncompleted (may be after BY or completion date of activities listed in activities Table C.2). [MM-DD-YYYY]",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 100,
                        "description": "The planned total cost for the activity. This is the baseline value. [$M]  Note: For programs that are employing earned value management, Agencies should\nreflect \"budget at completion\" in the \"Total Costs Planned\" Column 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12."
                    },
                    "softwareProject": {
                        "type": "string",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "example": "Yes"
                    }
                },
                "required": [
                    "projectId",
                    "projectName",
                    "projectGoal",
                    "startDate",
                    "endDate",
                    "totalCost",
                    "softwareProject"
                ]
            },
            "Projects:jsonld-readItem": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "projectId": {
                        "type": "string",
                        "format": "string",
                        "example": "GSAProj1",
                        "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
                    },
                    "projectName": {
                        "type": "string",
                        "format": "string",
                        "example": "API Submissions Development",
                        "description": "Name used by the Agency to refer specifically to the project."
                    },
                    "projectGoal": {
                        "type": "string",
                        "format": "string",
                        "example": "Develop a mechanism to collect CPIC data'",
                        "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment upon completion."
                    },
                    "startDate": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-08-15",
                        "description": "Planned start date of in-progress projects or planned start of projects that have not yet begun\n(may be before the current FY or activities listed in Table C.2). [MM-DD-YYYY]",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "endDate": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-11-20",
                        "description": "Planned date of completion of in-progress projects or actual completion date of projects that have been\ncompleted (may be after BY or completion date of activities listed in activities Table C.2). [MM-DD-YYYY]",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 100,
                        "description": "The planned total cost for the activity. This is the baseline value. [$M]  Note: For programs that are employing earned value management, Agencies should\nreflect \"budget at completion\" in the \"Total Costs Planned\" Column 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12."
                    },
                    "softwareProject": {
                        "type": "string",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "example": "Yes"
                    }
                },
                "required": [
                    "projectId",
                    "projectName",
                    "projectGoal",
                    "startDate",
                    "endDate",
                    "totalCost",
                    "softwareProject"
                ]
            },
            "Projects:jsonld-readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "projectId": {
                        "type": "string",
                        "format": "string",
                        "example": "GSAProj1",
                        "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
                    },
                    "projectName": {
                        "type": "string",
                        "format": "string",
                        "example": "API Submissions Development",
                        "description": "Name used by the Agency to refer specifically to the project."
                    },
                    "projectGoal": {
                        "type": "string",
                        "format": "string",
                        "example": "Develop a mechanism to collect CPIC data'",
                        "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment upon completion."
                    },
                    "startDate": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-08-15",
                        "description": "Planned start date of in-progress projects or planned start of projects that have not yet begun\n(may be before the current FY or activities listed in Table C.2). [MM-DD-YYYY]",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "endDate": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-11-20",
                        "description": "Planned date of completion of in-progress projects or actual completion date of projects that have been\ncompleted (may be after BY or completion date of activities listed in activities Table C.2). [MM-DD-YYYY]",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 100,
                        "description": "The planned total cost for the activity. This is the baseline value. [$M]  Note: For programs that are employing earned value management, Agencies should\nreflect \"budget at completion\" in the \"Total Costs Planned\" Column 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12."
                    },
                    "softwareProject": {
                        "type": "string",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "example": "Yes"
                    }
                },
                "required": [
                    "projectId",
                    "projectName",
                    "projectGoal",
                    "startDate",
                    "endDate",
                    "totalCost",
                    "softwareProject"
                ]
            },
            "Projects:jsonld-write": {
                "type": "object",
                "description": "",
                "required": [
                    "projectId",
                    "projectName",
                    "projectGoal",
                    "startDate",
                    "endDate",
                    "totalCost",
                    "softwareProject"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string",
                        "format": "string",
                        "example": "GSAProj1",
                        "description": "An Agency-specified alphanumeric code that uniquely identifies the project within the Investment."
                    },
                    "projectName": {
                        "type": "string",
                        "format": "string",
                        "example": "API Submissions Development",
                        "description": "Name used by the Agency to refer specifically to the project."
                    },
                    "projectGoal": {
                        "type": "string",
                        "format": "string",
                        "example": "Develop a mechanism to collect CPIC data'",
                        "description": "Brief description of primary goal/outcome the project is planning to provide for the Investment upon completion."
                    },
                    "startDate": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-08-15",
                        "description": "Planned start date of in-progress projects or planned start of projects that have not yet begun\n(may be before the current FY or activities listed in Table C.2). [MM-DD-YYYY]",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "endDate": {
                        "type": "date",
                        "format": "string",
                        "example": "2020-11-20",
                        "description": "Planned date of completion of in-progress projects or actual completion date of projects that have been\ncompleted (may be after BY or completion date of activities listed in activities Table C.2). [MM-DD-YYYY]",
                        "externalDocs": {
                            "url": "http://schema.org/Date"
                        }
                    },
                    "totalCost": {
                        "type": "number",
                        "format": "float",
                        "example": 100,
                        "description": "The planned total cost for the activity. This is the baseline value. [$M]  Note: For programs that are employing earned value management, Agencies should\nreflect \"budget at completion\" in the \"Total Costs Planned\" Column 11 and \"estimated at completion\" in the \"Total Costs Projected\" Column 12."
                    },
                    "softwareProject": {
                        "type": "string",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "example": "Yes"
                    }
                }
            },
            "Services-write": {
                "type": "object",
                "description": "",
                "required": [
                    "currentUii",
                    "budgetYear",
                    "agency",
                    "title",
                    "description",
                    "changeInStatus"
                ],
                "properties": {
                    "currentUii": {
                        "type": "string",
                        "format": "string",
                        "example": "023-000000123",
                        "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
                    },
                    "budgetYear": {
                        "type": "number",
                        "format": "YYYY",
                        "example": 2023,
                        "description": "The budget year for the investment."
                    },
                    "agency": {
                        "type": "string",
                        "format": "string",
                        "example": "023",
                        "description": "The three digit agency code."
                    },
                    "title": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
                    },
                    "description": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the IT Dashboard modernization process.",
                        "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public."
                    },
                    "changeInStatus": {
                        "type": "string",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            "10",
                            "11"
                        ],
                        "example": "11",
                        "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:"
                    },
                    "changeInStatusDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "New Service",
                        "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates."
                    }
                }
            },
            "Services:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "contracts": {
                        "readOnly": true,
                        "description": "Contract Embedded CONTRACTS",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "projects": {
                        "readOnly": true,
                        "description": "Embed Project Objects",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "systems": {
                        "readOnly": true,
                        "description": "Referenced System Objects",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "cioRatings": {
                        "readOnly": true,
                        "description": "Embedded CIO Ratings",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "ledgers": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "metrics": {
                        "readOnly": true,
                        "description": "a collection of Metric objects",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "user": {
                        "readOnly": true,
                        "description": "the User Object",
                        "type": "string"
                    },
                    "currentUii": {
                        "type": "string",
                        "format": "string",
                        "example": "023-000000123",
                        "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
                    },
                    "title": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
                    },
                    "description": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the IT Dashboard modernization process.",
                        "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public."
                    },
                    "agency": {
                        "type": "string",
                        "format": "string",
                        "example": "023",
                        "description": "The three digit agency code."
                    },
                    "budgetYear": {
                        "type": "number",
                        "format": "YYYY",
                        "example": 2023,
                        "description": "The budget year for the investment."
                    },
                    "changeInStatus": {
                        "type": "string",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            "10",
                            "11"
                        ],
                        "example": "11",
                        "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:"
                    },
                    "changeInStatusDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "New Service",
                        "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates."
                    },
                    "version": {
                        "readOnly": true,
                        "type": "integer"
                    }
                },
                "required": [
                    "currentUii",
                    "title",
                    "description",
                    "agency",
                    "budgetYear",
                    "changeInStatus"
                ]
            },
            "Services:jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "currentUii": {
                        "type": "string",
                        "format": "string",
                        "example": "023-000000123",
                        "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
                    },
                    "budgetYear": {
                        "type": "number",
                        "format": "YYYY",
                        "example": 2023,
                        "description": "The budget year for the investment."
                    },
                    "agency": {
                        "type": "string",
                        "format": "string",
                        "example": "023",
                        "description": "The three digit agency code."
                    },
                    "title": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
                    },
                    "description": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the IT Dashboard modernization process.",
                        "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public."
                    },
                    "changeInStatus": {
                        "type": "string",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            "10",
                            "11"
                        ],
                        "example": "11",
                        "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:"
                    },
                    "changeInStatusDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "New Service",
                        "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates."
                    }
                },
                "required": [
                    "currentUii",
                    "budgetYear",
                    "agency",
                    "title",
                    "description",
                    "changeInStatus"
                ]
            },
            "Services:jsonld-readItem": {
                "type": "object",
                "description": "",
                "required": [
                    "currentUii",
                    "budgetYear",
                    "agency",
                    "title",
                    "description",
                    "changeInStatus"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "currentUii": {
                        "type": "string",
                        "format": "string",
                        "example": "023-000000123",
                        "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
                    },
                    "budgetYear": {
                        "type": "number",
                        "format": "YYYY",
                        "example": 2023,
                        "description": "The budget year for the investment."
                    },
                    "agency": {
                        "type": "string",
                        "format": "string",
                        "example": "023",
                        "description": "The three digit agency code."
                    },
                    "title": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
                    },
                    "description": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the IT Dashboard modernization process.",
                        "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public."
                    },
                    "changeInStatus": {
                        "type": "string",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            "10",
                            "11"
                        ],
                        "example": "11",
                        "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:"
                    },
                    "changeInStatusDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "New Service",
                        "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates."
                    }
                }
            },
            "Services:jsonld-readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "required": [
                    "currentUii",
                    "budgetYear",
                    "agency",
                    "title",
                    "description",
                    "changeInStatus"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "currentUii": {
                        "type": "string",
                        "format": "string",
                        "example": "023-000000123",
                        "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
                    },
                    "budgetYear": {
                        "type": "number",
                        "format": "YYYY",
                        "example": 2023,
                        "description": "The budget year for the investment."
                    },
                    "agency": {
                        "type": "string",
                        "format": "string",
                        "example": "023",
                        "description": "The three digit agency code."
                    },
                    "title": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
                    },
                    "description": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the IT Dashboard modernization process.",
                        "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public."
                    },
                    "changeInStatus": {
                        "type": "string",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            "10",
                            "11"
                        ],
                        "example": "11",
                        "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:"
                    },
                    "changeInStatusDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "New Service",
                        "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates."
                    },
                    "systems": {
                        "description": "Referenced System Objects",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Systems:jsonld-readItem_readItemSubRes"
                        }
                    },
                    "projects": {
                        "description": "Embed Project Objects",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Projects:jsonld-readItem_readItemSubRes"
                        }
                    },
                    "cioRatings": {
                        "description": "Embedded CIO Ratings",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CioRating:jsonld-readItem_readItemSubRes"
                        }
                    },
                    "ledgers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ledger:jsonld-readItem_readItemSubRes"
                        }
                    },
                    "metrics": {
                        "description": "a collection of Metric objects",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "contracts": {
                        "description": "Contract Embedded CONTRACTS",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contract:jsonld-readItem_readItemSubRes"
                        }
                    }
                }
            },
            "Services:jsonld-write": {
                "type": "object",
                "description": "",
                "required": [
                    "currentUii",
                    "budgetYear",
                    "agency",
                    "title",
                    "description",
                    "changeInStatus"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "currentUii": {
                        "type": "string",
                        "format": "string",
                        "example": "023-000000123",
                        "description": "The Current UII includes an Agency code and a nine-digit unique identifier.\nVariable information formerly included in the UII of previous years is not part\nof the UII primary key."
                    },
                    "budgetYear": {
                        "type": "number",
                        "format": "YYYY",
                        "example": 2023,
                        "description": "The budget year for the investment."
                    },
                    "agency": {
                        "type": "string",
                        "format": "string",
                        "example": "023",
                        "description": "The three digit agency code."
                    },
                    "title": {
                        "type": "string",
                        "format": "string",
                        "example": "IT Collect Development",
                        "description": "This is a text field to provide the Investment title. To the extent that they are not\npart of the name used by the Agency, other identifiers such as bureaus or other\nnumeric codes should not be included as part of an Investment title."
                    },
                    "description": {
                        "type": "string",
                        "format": "string",
                        "example": "Sample description of the IT Dashboard modernization process.",
                        "description": "Description for each Investment. This description should briefly explain the\npurpose of the Investment and what program(s) it supports, including the value\nto the public."
                    },
                    "changeInStatus": {
                        "type": "string",
                        "enum": [
                            "01",
                            "02",
                            "03",
                            "04",
                            "05",
                            "06",
                            "07",
                            "08",
                            "09",
                            "10",
                            "11"
                        ],
                        "example": "11",
                        "description": "This is used when an Investment has a change in status (e.g., downgraded to non-major IT Investment,\neliminated, retired, consolidated, split) for the current budget submission relative to the previous budget\ncycle. The change of status should be indicated with one of the following reasons:"
                    },
                    "changeInStatusDescription": {
                        "type": "string",
                        "format": "string",
                        "example": "New Service",
                        "description": "This is used when an indicator has been chosen for \"Change in Investment Status Identifier\" in\norder to provide a description of the rationale for the change, which may include impacted UIIs, specific\nreferences to legislative requirements, or governance board decisions and effective dates."
                    }
                }
            },
            "SystemFunction-write": {
                "type": "object",
                "description": "",
                "properties": {
                    "functionCode": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "SystemFunction:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "functionCode": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "SystemFunction:jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "functionCode": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "SystemFunction:jsonld-readItem": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "functionCode": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "SystemFunction:jsonld-write": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "functionCode": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Systems-write": {
                "type": "object",
                "description": "",
                "required": [
                    "systemName",
                    "suic"
                ],
                "properties": {
                    "systemName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example System Name",
                        "description": "Agency internal name for system or sub-system, as applicable (e.g., Delphi, HUDCaps, AGMAX, etc.)."
                    },
                    "suic": {
                        "type": "string",
                        "format": "string",
                        "example": "023-0000000-0000",
                        "description": "The System Unique Identifier Code (SUIC) includes an Agency code and ane leven-digit unique identifier.\nXXX- xxxxxxx- xxxx: The first three digits represent your Agency code (see Appendix C of OMB Circular No. A-11).\nxxx- XXXXXXX- xxxx: The next seven digits serve as the system’s unique identifier.\nxxx- xxxxxxx- XXXX: The last four digits serve as the sub-system’s unique identifier.\nThis identifier should be system-generated and applied at the Agency level. [14- digit primary key for all systems]"
                    },
                    "systemFunctions": {
                        "type": "array",
                        "format": "array",
                        "example": [
                            "HCM.010",
                            "HCM.020"
                        ],
                        "writeOnly": true,
                        "description": "For administrative and mission support systems, provide all relevant service area\nfunctions associated with this system as defined by the Federal Integrated Business Framework (FIBF), e.g., “FFM.010” as applicable. [7 digit code for each function or N/A]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "customDeveloped": {
                        "type": "string",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "description": "Indicate whether all components of the system were entirely custom developed within Government and do\nnot contain any purchased products (e.g., commercial- off-the-shelf software, licensing, etc.). [Yes/No]"
                    },
                    "initialOperatingYear": {
                        "type": "date",
                        "format": "string",
                        "example": "2020",
                        "description": "The fiscal year in which the system was first deployed."
                    },
                    "relatedUiis": {
                        "type": "array",
                        "format": "array",
                        "example": [
                            "023-000000000",
                            "023-000000001",
                            "023-000000002"
                        ],
                        "description": "Provide all UIIs submitted to the Services endpoint that are associated with a given system.\nThis field establishes the linkage between UIIs and systems.",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Systems:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "systemName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example System Name",
                        "description": "Agency internal name for system or sub-system, as applicable (e.g., Delphi, HUDCaps, AGMAX, etc.)."
                    },
                    "suic": {
                        "type": "string",
                        "format": "string",
                        "example": "023-0000000-0000",
                        "description": "The System Unique Identifier Code (SUIC) includes an Agency code and ane leven-digit unique identifier.\nXXX- xxxxxxx- xxxx: The first three digits represent your Agency code (see Appendix C of OMB Circular No. A-11).\nxxx- XXXXXXX- xxxx: The next seven digits serve as the system’s unique identifier.\nxxx- xxxxxxx- XXXX: The last four digits serve as the sub-system’s unique identifier.\nThis identifier should be system-generated and applied at the Agency level. [14- digit primary key for all systems]"
                    },
                    "systemsFunctions": {
                        "readOnly": true
                    },
                    "customDeveloped": {
                        "type": "string",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "description": "Indicate whether all components of the system were entirely custom developed within Government and do\nnot contain any purchased products (e.g., commercial- off-the-shelf software, licensing, etc.). [Yes/No]"
                    },
                    "initialOperatingYear": {
                        "type": "date",
                        "format": "string",
                        "example": "2020",
                        "description": "The fiscal year in which the system was first deployed."
                    },
                    "relatedUiis": {
                        "type": "array",
                        "format": "array",
                        "example": [
                            "023-000000000",
                            "023-000000001",
                            "023-000000002"
                        ],
                        "description": "Provide all UIIs submitted to the Services endpoint that are associated with a given system.\nThis field establishes the linkage between UIIs and systems.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "products": {
                        "readOnly": true,
                        "description": "This is a child table of System - Report the following data (Products fields) for every product\n(e.g., application software, middleware software, reporting products, servers, etc.) of each system and sub-system\nreported in Systems Table B.1 that indicated “No” in Column 5 “Custom Developed.” Systems and sub-systems may have\none or more products that should be reported individually rather than included within broader license agreements.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "service": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "systemFunctions": {
                        "type": "array",
                        "format": "array",
                        "example": [
                            "HCM.010",
                            "HCM.020"
                        ],
                        "writeOnly": true,
                        "description": "For administrative and mission support systems, provide all relevant service area\nfunctions associated with this system as defined by the Federal Integrated Business Framework (FIBF), e.g., “FFM.010” as applicable. [7 digit code for each function or N/A]",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "systemName",
                    "suic"
                ]
            },
            "Systems:jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "systemName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example System Name",
                        "description": "Agency internal name for system or sub-system, as applicable (e.g., Delphi, HUDCaps, AGMAX, etc.)."
                    },
                    "suic": {
                        "type": "string",
                        "format": "string",
                        "example": "023-0000000-0000",
                        "description": "The System Unique Identifier Code (SUIC) includes an Agency code and ane leven-digit unique identifier.\nXXX- xxxxxxx- xxxx: The first three digits represent your Agency code (see Appendix C of OMB Circular No. A-11).\nxxx- XXXXXXX- xxxx: The next seven digits serve as the system’s unique identifier.\nxxx- xxxxxxx- XXXX: The last four digits serve as the sub-system’s unique identifier.\nThis identifier should be system-generated and applied at the Agency level. [14- digit primary key for all systems]"
                    },
                    "systemFunctions": {
                        "type": "array",
                        "format": "array",
                        "example": [
                            "HCM.010",
                            "HCM.020"
                        ],
                        "writeOnly": true,
                        "description": "For administrative and mission support systems, provide all relevant service area\nfunctions associated with this system as defined by the Federal Integrated Business Framework (FIBF), e.g., “FFM.010” as applicable. [7 digit code for each function or N/A]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "customDeveloped": {
                        "type": "string",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "description": "Indicate whether all components of the system were entirely custom developed within Government and do\nnot contain any purchased products (e.g., commercial- off-the-shelf software, licensing, etc.). [Yes/No]"
                    },
                    "initialOperatingYear": {
                        "type": "date",
                        "format": "string",
                        "example": "2020",
                        "description": "The fiscal year in which the system was first deployed."
                    },
                    "relatedUiis": {
                        "type": "array",
                        "format": "array",
                        "example": [
                            "023-000000000",
                            "023-000000001",
                            "023-000000002"
                        ],
                        "description": "Provide all UIIs submitted to the Services endpoint that are associated with a given system.\nThis field establishes the linkage between UIIs and systems.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "systemName",
                    "suic"
                ]
            },
            "Systems:jsonld-readItem": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "systemName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example System Name",
                        "description": "Agency internal name for system or sub-system, as applicable (e.g., Delphi, HUDCaps, AGMAX, etc.)."
                    },
                    "suic": {
                        "type": "string",
                        "format": "string",
                        "example": "023-0000000-0000",
                        "description": "The System Unique Identifier Code (SUIC) includes an Agency code and ane leven-digit unique identifier.\nXXX- xxxxxxx- xxxx: The first three digits represent your Agency code (see Appendix C of OMB Circular No. A-11).\nxxx- XXXXXXX- xxxx: The next seven digits serve as the system’s unique identifier.\nxxx- xxxxxxx- XXXX: The last four digits serve as the sub-system’s unique identifier.\nThis identifier should be system-generated and applied at the Agency level. [14- digit primary key for all systems]"
                    },
                    "systemFunctions": {
                        "type": "array",
                        "format": "array",
                        "example": [
                            "HCM.010",
                            "HCM.020"
                        ],
                        "writeOnly": true,
                        "description": "For administrative and mission support systems, provide all relevant service area\nfunctions associated with this system as defined by the Federal Integrated Business Framework (FIBF), e.g., “FFM.010” as applicable. [7 digit code for each function or N/A]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "customDeveloped": {
                        "type": "string",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "description": "Indicate whether all components of the system were entirely custom developed within Government and do\nnot contain any purchased products (e.g., commercial- off-the-shelf software, licensing, etc.). [Yes/No]"
                    },
                    "initialOperatingYear": {
                        "type": "date",
                        "format": "string",
                        "example": "2020",
                        "description": "The fiscal year in which the system was first deployed."
                    },
                    "relatedUiis": {
                        "type": "array",
                        "format": "array",
                        "example": [
                            "023-000000000",
                            "023-000000001",
                            "023-000000002"
                        ],
                        "description": "Provide all UIIs submitted to the Services endpoint that are associated with a given system.\nThis field establishes the linkage between UIIs and systems.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "products": {
                        "readOnly": true,
                        "description": "This is a child table of System - Report the following data (Products fields) for every product\n(e.g., application software, middleware software, reporting products, servers, etc.) of each system and sub-system\nreported in Systems Table B.1 that indicated “No” in Column 5 “Custom Developed.” Systems and sub-systems may have\none or more products that should be reported individually rather than included within broader license agreements.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Products:jsonld-readItem"
                        }
                    },
                    "service": {
                        "$ref": "#/components/schemas/Services:jsonld-readItem"
                    }
                },
                "required": [
                    "systemName",
                    "suic"
                ]
            },
            "Systems:jsonld-readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "systemName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example System Name",
                        "description": "Agency internal name for system or sub-system, as applicable (e.g., Delphi, HUDCaps, AGMAX, etc.)."
                    },
                    "suic": {
                        "type": "string",
                        "format": "string",
                        "example": "023-0000000-0000",
                        "description": "The System Unique Identifier Code (SUIC) includes an Agency code and ane leven-digit unique identifier.\nXXX- xxxxxxx- xxxx: The first three digits represent your Agency code (see Appendix C of OMB Circular No. A-11).\nxxx- XXXXXXX- xxxx: The next seven digits serve as the system’s unique identifier.\nxxx- xxxxxxx- XXXX: The last four digits serve as the sub-system’s unique identifier.\nThis identifier should be system-generated and applied at the Agency level. [14- digit primary key for all systems]"
                    },
                    "systemFunctions": {
                        "type": "array",
                        "format": "array",
                        "example": [
                            "HCM.010",
                            "HCM.020"
                        ],
                        "writeOnly": true,
                        "description": "For administrative and mission support systems, provide all relevant service area\nfunctions associated with this system as defined by the Federal Integrated Business Framework (FIBF), e.g., “FFM.010” as applicable. [7 digit code for each function or N/A]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "customDeveloped": {
                        "type": "string",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "description": "Indicate whether all components of the system were entirely custom developed within Government and do\nnot contain any purchased products (e.g., commercial- off-the-shelf software, licensing, etc.). [Yes/No]"
                    },
                    "initialOperatingYear": {
                        "type": "date",
                        "format": "string",
                        "example": "2020",
                        "description": "The fiscal year in which the system was first deployed."
                    },
                    "relatedUiis": {
                        "type": "array",
                        "format": "array",
                        "example": [
                            "023-000000000",
                            "023-000000001",
                            "023-000000002"
                        ],
                        "description": "Provide all UIIs submitted to the Services endpoint that are associated with a given system.\nThis field establishes the linkage between UIIs and systems.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "products": {
                        "readOnly": true,
                        "description": "This is a child table of System - Report the following data (Products fields) for every product\n(e.g., application software, middleware software, reporting products, servers, etc.) of each system and sub-system\nreported in Systems Table B.1 that indicated “No” in Column 5 “Custom Developed.” Systems and sub-systems may have\none or more products that should be reported individually rather than included within broader license agreements.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Products:jsonld-readItem_readItemSubRes"
                        }
                    },
                    "service": {
                        "$ref": "#/components/schemas/Services:jsonld-readItem_readItemSubRes"
                    }
                },
                "required": [
                    "systemName",
                    "suic"
                ]
            },
            "Systems:jsonld-write": {
                "type": "object",
                "description": "",
                "required": [
                    "systemName",
                    "suic"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "systemName": {
                        "type": "string",
                        "format": "string",
                        "example": "Example System Name",
                        "description": "Agency internal name for system or sub-system, as applicable (e.g., Delphi, HUDCaps, AGMAX, etc.)."
                    },
                    "suic": {
                        "type": "string",
                        "format": "string",
                        "example": "023-0000000-0000",
                        "description": "The System Unique Identifier Code (SUIC) includes an Agency code and ane leven-digit unique identifier.\nXXX- xxxxxxx- xxxx: The first three digits represent your Agency code (see Appendix C of OMB Circular No. A-11).\nxxx- XXXXXXX- xxxx: The next seven digits serve as the system’s unique identifier.\nxxx- xxxxxxx- XXXX: The last four digits serve as the sub-system’s unique identifier.\nThis identifier should be system-generated and applied at the Agency level. [14- digit primary key for all systems]"
                    },
                    "systemFunctions": {
                        "type": "array",
                        "format": "array",
                        "example": [
                            "HCM.010",
                            "HCM.020"
                        ],
                        "writeOnly": true,
                        "description": "For administrative and mission support systems, provide all relevant service area\nfunctions associated with this system as defined by the Federal Integrated Business Framework (FIBF), e.g., “FFM.010” as applicable. [7 digit code for each function or N/A]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "customDeveloped": {
                        "type": "string",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "description": "Indicate whether all components of the system were entirely custom developed within Government and do\nnot contain any purchased products (e.g., commercial- off-the-shelf software, licensing, etc.). [Yes/No]"
                    },
                    "initialOperatingYear": {
                        "type": "date",
                        "format": "string",
                        "example": "2020",
                        "description": "The fiscal year in which the system was first deployed."
                    },
                    "relatedUiis": {
                        "type": "array",
                        "format": "array",
                        "example": [
                            "023-000000000",
                            "023-000000001",
                            "023-000000002"
                        ],
                        "description": "Provide all UIIs submitted to the Services endpoint that are associated with a given system.\nThis field establishes the linkage between UIIs and systems.",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "TimePeriods-write": {
                "type": "object",
                "description": "",
                "required": [
                    "budgetYear",
                    "startDate",
                    "endDate"
                ],
                "properties": {
                    "budgetYear": {
                        "type": "integer"
                    },
                    "startDate": {
                        "description": "for a specific budget year",
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "description": "for a specific budget year",
                        "type": "string",
                        "format": "date-time"
                    },
                    "isReleasable": {
                        "type": "boolean"
                    },
                    "stage": {
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "example": 1
                    }
                }
            },
            "TimePeriods:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "startDate": {
                        "description": "for a specific budget year",
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "description": "for a specific budget year",
                        "type": "string",
                        "format": "date-time"
                    },
                    "budgetYear": {
                        "type": "integer"
                    },
                    "isReleasable": {
                        "type": "boolean"
                    },
                    "stage": {
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "example": 1
                    }
                },
                "required": [
                    "startDate",
                    "endDate",
                    "budgetYear"
                ]
            },
            "TimePeriods:jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "budgetYear": {
                        "type": "integer"
                    },
                    "startDate": {
                        "description": "for a specific budget year",
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "description": "for a specific budget year",
                        "type": "string",
                        "format": "date-time"
                    },
                    "isReleasable": {
                        "type": "boolean"
                    },
                    "stage": {
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "example": 1
                    }
                },
                "required": [
                    "budgetYear",
                    "startDate",
                    "endDate"
                ]
            },
            "TimePeriods:jsonld-readItem_readItemSubRes": {
                "type": "object",
                "description": "",
                "required": [
                    "budgetYear",
                    "startDate",
                    "endDate"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "budgetYear": {
                        "type": "integer"
                    },
                    "startDate": {
                        "description": "for a specific budget year",
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "description": "for a specific budget year",
                        "type": "string",
                        "format": "date-time"
                    },
                    "isReleasable": {
                        "type": "boolean"
                    },
                    "stage": {
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "example": 1
                    }
                }
            },
            "TimePeriods:jsonld-write": {
                "type": "object",
                "description": "",
                "required": [
                    "budgetYear",
                    "startDate",
                    "endDate"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "budgetYear": {
                        "type": "integer"
                    },
                    "startDate": {
                        "description": "for a specific budget year",
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "description": "for a specific budget year",
                        "type": "string",
                        "format": "date-time"
                    },
                    "isReleasable": {
                        "type": "boolean"
                    },
                    "stage": {
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "example": 1
                    }
                }
            }
        },
        "securitySchemes": {
            "oauth": {
                "type": "oauth2",
                "description": "\nIT Collect will utilize the OAuth2 Authorization framework to authenticate vendor client\napplications to start using our APIs. A walkthrough of client configuration for Postman is\noutlined below. All current documentation and application features are currently undergoing\ndevelopment.\n\n## Prerequisites\n- Request an OAuth 2 identifer and secret from IT Collect team.\n- Request a sandbox user account.\n\n## Postman\n\n[Postman](https://www.postman.com/) is an API Client that you can use for communication\nwith IT Collect\n\n### Steps (without PIV card)\n\n1. Create a new Postman Collection and import the openAPI spec\n\n2. Edit the Collection\n\n3. Switch to the Authorization tab and select `OAuth 2.0`\n\n4. Click the \"Get New Access Token\" button leaving Header Prefix as `Bearer`.\n\n| Setting | Value |\n| ------------- | ------------- |\n| Token Name | Bearer |\n| Grant Type | Authorization Code |\n| * Callback URL | https://app.getpostman.com/oauth2/callback |\n| * Authorize using browser | *leave unchecked, see Steps (with PIV / Login.gov)* |\n| Auth URL (TBD) | https://dev-itcollect-oauth.itcollect.domain/oauth/authorize |\n| Access Token URL (TBD) | https://dev-itcollect-oauth.itcollect.domain.com/oauth/token |\n| Client ID | *{Request from IT Collect}* |\n| Client Secret | *{Request from IT Collect}* |\n| Scope (TBD) |  |\n| * State |  |\n| Client Authentication | Send client credentials in body |\n\n> * Callback URL: Vendor application callback URL.  Will depend on individual vendor\nimplementation.  Must be provided to IT Collect team prior to implementation.\n> * State: This is an optional parameter, leave blank in Postman, but you may provide a\nstate in your vendor application. You may use this as CSRF protection mechanism or to\nassist in maintaining a state such as a session key.\n\n5. Click \"Request Token\"\n\n6. Login using either your sandbox user account or your login.gov account.\n\nYou should now have an access token suitable for defining the HTTP Authorization Header.\n\n### Steps (with Login.gov PIV card)\n\nPIV (Personal Identity Verification) cards testing steps\n\n1. Using the same steps as above enable the \"Authorize using browser\" checkbox. This should\nchange the `Callback URL` to `https://oauth.pstmn.io/v1/callback`.\n\n2. Click \"Request Token\"\n\n3. Once the browser window has opened (you may need to allow popups in your browse for this\ndomain) click \"Login with Login.gov\"\n\n4. Provide your Login.gov credentials using either your PIV access card or username and\npassword credentials.\n\nYou should now have an access token suitable for defining in the HTTP Authorization Header.",
                "flows": {
                    "authorizationCode": {
                        "tokenUrl": "https://dev-itcollect-oauth.itdb.boozallencsn.com/oauth/token",
                        "authorizationUrl": "https://dev-itcollect-oauth.itdb.boozallencsn.com/oauth/authorize",
                        "scopes": []
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Services"
        },
        {
            "name": "Projects"
        },
        {
            "name": "Activity"
        },
        {
            "name": "Ledger"
        },
        {
            "name": "CioRating"
        },
        {
            "name": "Contract"
        },
        {
            "name": "Systems"
        },
        {
            "name": "Products"
        },
        {
            "name": "Metric"
        },
        {
            "name": "MetricActuals"
        }
    ]
}